var createReceipts=function(b){var g="CREATE TABLE IF NOT EXISTS Receipt (id INTEGER PRIMARY KEY, receipt TEXT, sync INTEGER)";var f="SELECT COUNT(id) AS cnt FROM Receipt";var c="SELECT COUNT(id) AS cnt FROM Receipt WHERE sync=1";var a=Genesis.db.openDatabase();try{a.transaction(function(e){e.executeSql(g,[],function(i,h){b.postMessage(JSON.stringify({cmd:"createReceipts"}));},function(h,i){});e.executeSql(f,[],function(i,h){},function(h,i){});e.executeSql(c,[],function(i,h){},function(h,i){});});}catch(d){}};var uploadReceipts=function(c,b){var a=Genesis.db.openDatabase();var f="SELECT receipt FROM Receipt WHERE sync=0";var g="DELETE FROM Receipt WHERE id<? AND sync=1";try{a.transaction(function(e){if(c>0){e.executeSql(g,[c],function(i,h){console.debug("All (SYNC) EarnedReceipts removed prior to "+Genesis.fn.convertDateFullTime(new Date(c*1000)));},function(h,i){console.debug("No Receipt Table found in SQL Database : "+i.message);});}e.executeSql(f,[],function(h,m){var k=[];var n=m.rows;for(var l=0;l<n.length;l++){k.push(n.item(l));}var i=JSON.stringify({cmd:"uploadReceipts",result:k});b.postMessage(i);},function(h,i){console.debug("No Receipt Table found in SQL Database : "+i.message);});});}catch(d){}};var insertReceipts=function(c,b){var a=Genesis.db.openDatabase();var f="INSERT INTO Receipt (id, receipt, sync) VALUES (?, ?, ?)";try{a.transaction(function(g){for(var e=0;e<c.length;e++){var h=c[e];var i=h.id;h=JSON.stringify(h);console.debug("Inserting Receipt ID["+i+"] Content["+h+"]");g.executeSql(f,[i,h,0],function(k,j){var l=JSON.stringify({cmd:"insertReceipts",result:c.length});console.debug("Inserted Receipt into KickBak-Receipt Database : "+l);b.postMessage(l);},function(j,k){console.debug("Failed to insert Receipt("+i+") to Database : "+k.message);});}});}catch(d){}};var updateReceipts=function(d,c){var a=Genesis.db.openDatabase();var b="UPDATE Receipt SET sync=1 WHERE id IN ("+d.toString()+")";try{a.transaction(function(e){e.executeSql(b,[],function(h,g){c.postMessage(JSON.stringify({cmd:"updateReceipts",result:d.length}));},function(g,h){console.debug("updateReceipts --- No Receipt Entries were updated to SYNC");});});}catch(f){}};var restoreReceipts=function(b){var a=Genesis.db.openDatabase();var d="SELECT receipt FROM Receipt";try{a.transaction(function(e){e.executeSql(d,[],function(g,f){var h=[];var l=f.rows;for(var i=0,k=null;i<l.length;i++){k=l.item(i);h.push(k);}b.postMessage(JSON.stringify({cmd:"restoreReceipts",result:h}));},function(f,g){});});}catch(c){}};var resetReceipts=function(c){var a=Genesis.db.openDatabase();var b="DROP TABLE Receipt";try{a.transaction(function(e){e.executeSql(b,[],function(g,f){c.postMessage(JSON.stringify({cmd:"resetReceipts"}));},function(f,g){console.debug("resetReceipts --- Failed to drop KickBak-Receipt Table : "+g.message);c.postMessage(JSON.stringify({cmd:"resetReceipts"}));});});}catch(d){}};if((typeof(Worker)=="undefined")&&(typeof(Ext)!="undefined")){Ext.define("Worker",{constructor:function(a){var b=this;b.responseHandler={postMessage:function(c){b.onmessage({data:c});}};},postMessage:function(a){switch(a.cmd){case"createReceipts":createReceipts(this.responseHandler);break;case"uploadReceipts":uploadReceipts(a.lastReceiptTime,this.responseHandler);break;case"insertReceipts":insertReceipts(a.receipts,this.responseHandler);break;case"updateReceipts":updateReceipts(a.ids,this.responseHandler);break;case"restoreReceipts":restoreReceipts(this.responseHandler);break;case"resetReceipts":resetReceipts(this.responseHandler);break;}},onmessage:Ext.emptyFn});}else{onmessage=function(b){var a=b.data;switch(a.cmd){case"createReceipts":createReceipts(self);break;case"uploadReceipts":uploadReceipts(a.lastReceiptTime,self);break;case"insertReceipts":insertReceipts(a.receipts,self);break;case"updateReceipts":updateReceipts(a.ids,self);break;case"restoreReceipts":restoreReceipts(self);break;case"resetReceipts":resetReceipts(self);break;}};var Genesis={db:{openDatabase:function(){return openDatabase("KickBak","1.0","KickBakDB",5*1024*1024);}},fn:{convertDateFullTime:function(a){return a.format("D, M d, Y \\a\\t g:i A");},currentDateTime:function(a){return a;},convertDateCommon:function(d,a,h){var e;var g=a||this.dateFormat;if(!(d instanceof Date)){if(typeof(JSON)!="undefined"){}if(Ext.isEmpty(d)){e=new Date();}else{if(g){e=Date.parse(d,g);if(Ext.isEmpty(e)){e=new Date(d).format(g);}return[e,e];}e=new Date(d);if(e.toString()=="Invalid Date"){e=Date.parse(d,g);}}}else{e=d;}if(!h){var c=new Date().getTime();var f=this.currentDateTime(c);var b=(f-e.getTime())/1000;if(b>-10){if((b)<2){return[b,"a sec ago"];}if((b)<60){return[b,parseInt(b)+" secs ago"];}b=b/60;if((b)<2){return[b,"a min ago"];}if((b)<60){return[b,parseInt(b)+" mins ago"];}b=b/60;if((b)<2){return[e,"1 hr ago"];}if((b)<24){return[e,parseInt(b)+" hrs ago"];}b=b/24;if(((b)<2)&&((new Date().getDay()-e.getDay())==1)){return[e,"Yesterday at "+e.format("g:i A")];}if((b)<7){return[e,this.weekday[e.getDay()]+" at "+e.format("g:i A")];}b=b/7;if(((b)<2)&&(b%7==0)){return[e,"1 wk ago"];}if(((b)<5)&&(b%7==0)){return[e,parseInt(b)+" wks ago"];}if(b<5){return[e,parseInt(b*7)+" days ago"];}return[e,null];}else{}}return[e,-1];},convertDate:function(b,a){var c=this.convertDateCommon(b,a);if(c[1]!=-1){return(c[1]==null)?c[0].format("M d, Y"):c[1];}else{return c[0].format("D, M d, Y \\a\\t g:i A");}}}};}if(typeof(importScripts)!="undefined"){importScripts("../lib/core/date.js","../lib/core/extras.js");}
