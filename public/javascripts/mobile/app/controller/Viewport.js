Ext.define('Genesis.controller.Viewport',
{
   extend : 'Genesis.controller.ControllerBase',
   /*
    requires : ['Genesis.controller.MainPage'
    //,'Genesis.controller.LoginPage'
    ],
    */
   statics :
   {
   },
   //Postfix convention
   //Browse - Feature Browse
   //Mode - Modes supported by the Feature
   //Page - Home Page for Feature
   config :
   {
      refs :
      {
         shareButton : '#shareButton',
         view : 'viewportview'
      },
      control :
      {
         // AutoGenerated
         /*,
          '#backButton' :
          {
          tap : 'onBack'
          }
          */
         'button[iconCls=share]' :
         {
            tap : 'onShareMerchantTap'
         },
         'button[iconCls=info]' :
         {
            tap : 'onInfoTap'
         },
         'button[iconCls=home]' :
         {
            tap : 'onHomeButtonTap'
         },
         'tabbar' :
         {
            tabchange : 'onTabBarTabChange'
         }
      }
   },
   onShareMerchantTap : function()
   {
   },
   onInfoTap : function()
   {
      // Open Info ActiveSheet
      //this.getApplication().getView('Viewport').pushView(vp.getInfo());
   },
   onHomeButtonTap : function(b, e, eOpts)
   {
      Ext.ComponentQuery.query('button[iconCls=home]')[0].updateActive(false);
      this.getApplication().getController('MainPage').openMainPage();

      console.log("Going back to HomePage ...");
   },
   onTabBarTabChange : function(bar, newTab, oldTab, eOpts)
   {
      if(newTab)
      {
         newTab.setActive(false);
      }

      if(oldTab)
      {
         oldTab.setActive(false);
      }
      return false;
   },
   init : function(app)
   {
      this.callParent(arguments);
      /*
       this.getApplication().getView('Viewport').on(
       {
       delegate : '',
       tap : this.onHomeButtonTap,
       scope : this
       });
       */
      console.log("Viewport Init");
   },
   openMainPage : function()
   {
      this.getApplication().getController('MainPage').openMainPage();
   }
});
