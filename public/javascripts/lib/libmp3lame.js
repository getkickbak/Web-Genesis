// libmp3lame.js - port of libmp3lame to JavaScript using emscripten
// by Andreas Krennmair <ak@synflood.at>
var Lame = (function() {
// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
try {
  this['Module'] = Module;
  Module.test;
} catch(e) {
  this['Module'] = Module = {};
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (typeof module === "object") {
  module.exports = Module;
}
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function(filename) { return Module['read'](filename, true) };
  Module['load'] = function(f) {
    globalEval(read(f));
  };
  if (!Module['arguments']) {
    Module['arguments'] = process['argv'].slice(2);
  }
}
if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  Module['read'] = read;
  Module['readBinary'] = function(f) {
    return read(f, 'binary');
  };
  if (!Module['arguments']) {
    if (typeof scriptArgs != 'undefined') {
      Module['arguments'] = scriptArgs;
    } else if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
}
if (ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER) {
  if (!Module['print']) {
    Module['print'] = function(x) {
      console.log(x);
    };
  }
  if (!Module['printErr']) {
    Module['printErr'] = function(x) {
      console.log(x);
    };
  }
}
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (!Module['arguments']) {
    if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
}
if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...
  var TRY_USE_DUMP = false;
  if (!Module['print']) {
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  Module['load'] = importScripts;
}
if (!ENVIRONMENT_IS_WORKER && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_SHELL) {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
if (!Module['preRun']) Module['preRun'] = [];
if (!Module['postRun']) Module['postRun'] = [];
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type.charAt(type.length-1) == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2 + 2*i;
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xff;
      if (needed) {
        buffer.push(code);
        needed--;
      }
      if (buffer.length == 0) {
        if (code < 128) return String.fromCharCode(code);
        buffer.push(code);
        if (code > 191 && code < 224) {
          needed = 1;
        } else {
          needed = 2;
        }
        return '';
      }
      if (needed > 0) return '';
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var ret;
      if (c1 > 191 && c1 < 224) {
        ret = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
      } else {
        ret = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = ((((STACKTOP)+7)>>3)<<3); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = ((((STATICTOP)+7)>>3)<<3); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = ((((DYNAMICTOP)+7)>>3)<<3); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+(((low)>>>(0))))+((+(((high)>>>(0))))*(+(4294967296)))) : ((+(((low)>>>(0))))+((+(((high)|(0))))*(+(4294967296))))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function abort(text) {
  Module.print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = globalScope['Module']['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    } else if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,((Math.min((+(Math.floor((value)/(+(4294967296))))), (+(4294967295))))|0)>>>0],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return ((x+4095)>>12)<<12;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value, or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATINIT__ = []; // functions called during startup
var __ATMAIN__ = []; // functions called when main() is to be run
var __ATEXIT__ = []; // functions called during shutdown
var runtimeInitialized = false;
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyTracking = {};
var calledInit = false, calledRun = false;
var runDependencyWatcher = null;
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    } 
    // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
    if (!calledRun && shouldRunNow) run();
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
function addPreRun(func) {
  if (!Module['preRun']) Module['preRun'] = [];
  else if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
  Module['preRun'].push(func);
}
var awaitingMemoryInitializer = false;
function loadMemoryInitializer(filename) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
    runPostSets();
  }
  // always do this asynchronously, to keep shell and web as similar as possible
  addPreRun(function() {
    if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
      applyData(Module['readBinary'](filename));
    } else {
      Browser.asyncLoad(filename, function(data) {
        applyData(data);
      }, function(data) {
        throw 'could not load memory initializer ' + filename;
      });
    }
  });
  awaitingMemoryInitializer = false;
}
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 102592;
var _stderr;
var _stderr = _stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* memory initializer */ allocateconcat([11,11,12,12,13,13,13,15,14,15,15,16,16,16,18,17,11,12,12,13,13,14,14,15,14,15,16,15,16,17,18,19,12,12,12,13,14,14,14,14,15,15,15,16,17,17,17,18,12,13,13,14,14,15,14,15,16,16,17,17,17,18,18,18,13,13,14,15,15,15,16,16,16,16,16,17,18,17,18,18,14,14,14,15,15,15,17,16,16,19,17,17,17,19,18,18,13,14,15,16,16,16,17,16,17,17,18,18,21,20,21,18,1,0,5,0,14,0,21,0,34,0,51,0,46,0,71,0,42,0,52,0,68,0,52,0,67,0,44,0,43,0,19,0,3,0,4,0,12,0,19,0,31,0,26,0,44,0,33,0,31,0,24,0,32,0,24,0,31,0,35,0,22,0,14,0,15,0,13,0,23,0,36,0,59,0,49,0,77,0,65,0,29,0,40,0,30,0,40,0,27,0,33,0,42,0,16,0,22,0,20,0,37,0,61,0,56,0,79,0,73,0,64,0,43,0,76,0,56,0,37,0,26,0,31,0,25,0,14,0,35,0,16,0,60,0,57,0,97,0,75,0,114,0,91,0,54,0,73,0,55,0,41,0,48,0,53,0,23,0,24,0,58,0,27,0,50,0,96,0,76,0,70,0,93,0,84,0,77,0,58,0,79,0,29,0,74,0,49,0,41,0,17,0,47,0,45,0,78,0,74,0,115,0,94,0,90,0,79,0,69,0,83,0,71,0,50,0,59,0,38,0,36,0,15,0,72,0,34,0,56,0,95,0,92,0,85,0,91,0,90,0,86,0,73,0,77,0,65,0,51,0,44,0,43,0,42,0,43,0,20,0,30,0,44,0,55,0,78,0,72,0,87,0,78,0,61,0,46,0,54,0,37,0,30,0,20,0,16,0,53,0,25,0,41,0,37,0,44,0,59,0,54,0,81,0,66,0,76,0,57,0,54,0,37,0,18,0,39,0,11,0,35,0,33,0,31,0,57,0,42,0,82,0,72,0,80,0,47,0,58,0,55,0,21,0,22,0,26,0,38,0,22,0,53,0,25,0,23,0,38,0,70,0,60,0,51,0,36,0,55,0,26,0,34,0,23,0,27,0,14,0,9,0,7,0,34,0,32,0,28,0,39,0,49,0,75,0,30,0,52,0,48,0,40,0,52,0,28,0,18,0,17,0,9,0,5,0,45,0,21,0,34,0,64,0,56,0,50,0,49,0,45,0,31,0,19,0,12,0,15,0,10,0,7,0,6,0,3,0,48,0,23,0,20,0,39,0,36,0,35,0,53,0,21,0,16,0,23,0,13,0,10,0,6,0,1,0,4,0,2,0,16,0,15,0,17,0,27,0,25,0,20,0,29,0,11,0,17,0,12,0,16,0,8,0,1,0,1,0,0,0,1,0,4,4,6,8,9,10,10,10,4,5,6,7,9,9,10,10,6,6,7,8,9,10,9,10,7,7,8,8,9,10,10,10,8,8,9,9,10,10,10,11,9,9,10,10,10,11,10,11,9,9,9,10,10,11,11,12,10,10,10,11,11,11,11,12,9,0,6,0,16,0,33,0,41,0,39,0,38,0,26,0,7,0,5,0,6,0,9,0,23,0,16,0,26,0,11,0,17,0,7,0,11,0,14,0,21,0,30,0,10,0,7,0,17,0,10,0,15,0,12,0,18,0,28,0,14,0,5,0,32,0,13,0,22,0,19,0,18,0,16,0,9,0,5,0,40,0,17,0,31,0,29,0,17,0,13,0,4,0,2,0,27,0,12,0,11,0,15,0,10,0,7,0,4,0,1,0,27,0,12,0,8,0,12,0,6,0,3,0,1,0,0,0,2,4,6,8,9,10,9,10,4,5,6,8,10,10,9,10,6,7,8,9,10,11,10,10,8,8,9,11,10,12,10,11,9,10,10,11,11,12,11,12,9,10,11,12,12,13,12,13,9,9,9,10,11,12,12,12,9,9,10,11,12,12,12,12,3,0,4,0,10,0,24,0,34,0,33,0,21,0,15,0,5,0,3,0,4,0,10,0,32,0,17,0,11,0,10,0,11,0,7,0,13,0,18,0,30,0,31,0,20,0,5,0,25,0,11,0,19,0,59,0,27,0,18,0,12,0,5,0,35,0,33,0,31,0,58,0,30,0,16,0,7,0,5,0,28,0,26,0,32,0,19,0,17,0,15,0,8,0,14,0,14,0,12,0,9,0,13,0,14,0,9,0,4,0,1,0,11,0,4,0,6,0,6,0,6,0,3,0,2,0,0,0,1,4,7,9,10,10,10,11,4,6,8,9,10,11,10,10,7,8,9,10,11,12,11,11,8,9,10,11,12,12,11,12,9,10,11,12,12,12,12,12,10,11,12,12,13,13,12,13,9,10,11,12,12,12,13,13,10,10,11,12,12,13,13,13,1,0,2,0,10,0,23,0,35,0,30,0,12,0,17,0,3,0,3,0,8,0,12,0,18,0,21,0,12,0,7,0,11,0,9,0,15,0,21,0,32,0,40,0,19,0,6,0,14,0,13,0,22,0,34,0,46,0,23,0,18,0,7,0,20,0,19,0,33,0,47,0,27,0,22,0,9,0,3,0,31,0,22,0,41,0,26,0,21,0,20,0,5,0,3,0,14,0,13,0,10,0,11,0,16,0,6,0,5,0,1,0,9,0,8,0,7,0,8,0,4,0,4,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,6,0,0,0,7,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,8,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,16,0,0,0,16,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,116,0,0,0,140,0,0,0,168,0,0,0,200,0,0,0,238,0,0,0,28,1,0,0,80,1,0,0,140,1,0,0,208,1,0,0,10,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,32,0,0,0,42,0,0,0,56,0,0,0,74,0,0,0,100,0,0,0,132,0,0,0,174,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,114,0,0,0,136,0,0,0,162,0,0,0,194,0,0,0,232,0,0,0,22,1,0,0,76,1,0,0,138,1,0,0,208,1,0,0,28,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,26,0,0,0,36,0,0,0,48,0,0,0,62,0,0,0,80,0,0,0,104,0,0,0,136,0,0,0,180,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,116,0,0,0,140,0,0,0,168,0,0,0,200,0,0,0,238,0,0,0,28,1,0,0,80,1,0,0,140,1,0,0,208,1,0,0,10,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,26,0,0,0,36,0,0,0,48,0,0,0,62,0,0,0,80,0,0,0,104,0,0,0,134,0,0,0,174,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,52,0,0,0,62,0,0,0,74,0,0,0,90,0,0,0,110,0,0,0,134,0,0,0,162,0,0,0,196,0,0,0,238,0,0,0,32,1,0,0,86,1,0,0,162,1,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,22,0,0,0,30,0,0,0,40,0,0,0,52,0,0,0,66,0,0,0,84,0,0,0,106,0,0,0,136,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,42,0,0,0,50,0,0,0,60,0,0,0,72,0,0,0,88,0,0,0,106,0,0,0,128,0,0,0,156,0,0,0,190,0,0,0,230,0,0,0,20,1,0,0,74,1,0,0,128,1,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,22,0,0,0,28,0,0,0,38,0,0,0,50,0,0,0,64,0,0,0,80,0,0,0,100,0,0,0,126,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,82,0,0,0,102,0,0,0,126,0,0,0,156,0,0,0,194,0,0,0,240,0,0,0,40,1,0,0,108,1,0,0,192,1,0,0,38,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,22,0,0,0,30,0,0,0,42,0,0,0,58,0,0,0,78,0,0,0,104,0,0,0,138,0,0,0,180,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,116,0,0,0,140,0,0,0,168,0,0,0,200,0,0,0,238,0,0,0,28,1,0,0,80,1,0,0,140,1,0,0,208,1,0,0,10,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,26,0,0,0,36,0,0,0,48,0,0,0,62,0,0,0,80,0,0,0,104,0,0,0,134,0,0,0,174,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,18,0,0,0,24,0,0,0,30,0,0,0,36,0,0,0,44,0,0,0,54,0,0,0,66,0,0,0,80,0,0,0,96,0,0,0,116,0,0,0,140,0,0,0,168,0,0,0,200,0,0,0,238,0,0,0,28,1,0,0,80,1,0,0,140,1,0,0,208,1,0,0,10,2,0,0,64,2,0,0,0,0,0,0,4,0,0,0,8,0,0,0,12,0,0,0,18,0,0,0,26,0,0,0,36,0,0,0,48,0,0,0,62,0,0,0,80,0,0,0,104,0,0,0,134,0,0,0,174,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,24,0,0,0,36,0,0,0,48,0,0,0,60,0,0,0,72,0,0,0,88,0,0,0,108,0,0,0,132,0,0,0,160,0,0,0,192,0,0,0,232,0,0,0,24,1,0,0,80,1,0,0,144,1,0,0,220,1,0,0,54,2,0,0,56,2,0,0,58,2,0,0,60,2,0,0,62,2,0,0,64,2,0,0,0,0,0,0,8,0,0,0,16,0,0,0,24,0,0,0,36,0,0,0,52,0,0,0,72,0,0,0,96,0,0,0,124,0,0,0,160,0,0,0,162,0,0,0,164,0,0,0,166,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,36,0,0,0,54,0,0,0,54,0,0,0,36,0,0,0,54,0,0,0,72,0,0,0,54,0,0,0,72,0,0,0,90,0,0,0,72,0,0,0,90,0,0,0,108,0,0,0,108,0,0,0,126,0,0,0,0,0,0,0,18,0,0,0,36,0,0,0,54,0,0,0,51,0,0,0,35,0,0,0,53,0,0,0,71,0,0,0,52,0,0,0,70,0,0,0,88,0,0,0,69,0,0,0,87,0,0,0,105,0,0,0,104,0,0,0,122,0,0,0,0,0,0,0,10,0,0,0,20,0,0,0,30,0,0,0,33,0,0,0,21,0,0,0,31,0,0,0,41,0,0,0,32,0,0,0,42,0,0,0,52,0,0,0,43,0,0,0,53,0,0,0,63,0,0,0,64,0,0,0,74,0,0,0,0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,205,204,236,192,205,204,236,192,205,204,236,192,0,0,24,193,205,204,236,192,51,51,195,192,0,0,176,192,102,102,150,192,102,102,150,192,102,102,150,192,102,102,150,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
.concat
.concat
.concat([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,204,60,65,154,153,89,65,154,153,137,65,0,0,0,66,0,0,58,66,51,51,77,66,0,0,102,66,51,51,134,66,0,0,143,66,51,51,169,66,51,51,195,66,0,0,2,67,154,153,217,64,154,153,185,64,154,153,185,64,205,204,204,64,0,0,208,64,102,102,30,65,154,153,65,65,102,102,102,65,0,0,112,65,51,51,151,65,205,204,172,65,51,51,215,65,205,204,8,66,205,204,32,66,51,51,59,66,0,0,98,66,205,204,114,66,205,204,147,66,102,102,171,66,205,204,186,66,51,51,252,66,0,0,0,0,0,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,8,0,0,0,9,0,0,0,24,0,0,0,25,0,0,0,4,0,0,0,5,0,0,0,20,0,0,0,21,0,0,0,12,0,0,0,13,0,0,0,28,0,0,0,29,0,0,0,2,0,0,0,3,0,0,0,18,0,0,0,19,0,0,0,10,0,0,0,11,0,0,0,26,0,0,0,27,0,0,0,6,0,0,0,7,0,0,0,22,0,0,0,23,0,0,0,14,0,0,0,15,0,0,0,30,0,0,0,31,0,0,0,8,0,0,0,208,7,0,0,16,0,0,0,116,14,0,0,24,0,0,0,60,15,0,0,32,0,0,0,124,21,0,0,40,0,0,0,88,27,0,0,48,0,0,0,76,29,0,0,56,0,0,0,16,39,0,0,64,0,0,0,248,42,0,0,80,0,0,0,188,52,0,0,96,0,0,0,252,58,0,0,112,0,0,0,240,60,0,0,128,0,0,0,104,66,0,0,160,0,0,0,92,68,0,0,192,0,0,0,168,72,0,0,224,0,0,0,200,75,0,0,0,1,0,0,244,76,0,0,64,1,0,0,20,80,0,0,6,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,6,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,3,0,0,0,9,0,0,0,9,0,0,0,12,0,0,0,6,0,0,0,6,0,0,0,9,0,0,0,12,0,0,0,6,0,0,0,11,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,0,0,0,0,6,0,0,0,15,0,0,0,12,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,3,0,0,0,12,0,0,0,9,0,0,0,9,0,0,0,6,0,0,0,6,0,0,0,12,0,0,0,9,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,15,0,0,0,12,0,0,0,9,0,0,0,0,0,0,0,6,0,0,0,18,0,0,0,9,0,0,0,0,0,0,0,8,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,40,0,0,0,48,0,0,0,56,0,0,0,64,0,0,0,80,0,0,0,96,0,0,0,112,0,0,0,128,0,0,0,160,0,0,0,192,0,0,0,224,0,0,0,0,1,0,0,64,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,15,0,0,0,15,0,0,0,7,0,0,0,7,0,0,0,15,0,0,0,15,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,31,0,0,0,31,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])
.concat
.concat
.concat
.concat
.concat
.concat([130,177,181,188,0,0,0,0,98,120,124,63,40,114,252,191,98,120,252,191,59,253,120,63,98,120,124,63,19,41,124,63,180,33,252,191,19,41,252,191,229,96,120,63,19,41,124,63,66,185,122,63,86,171,250,191,66,185,250,191,92,142,117,63,66,185,122,63,120,174,121,63,129,154,249,191,120,174,249,191,222,132,115,63,120,174,121,63,91,33,121,63,194,9,249,191,91,33,249,191,234,113,114,63,91,33,121,63,110,236,118,63,58,195,246,191,110,236,246,191,69,43,110,63,110,236,118,63,141,200,117,63,87,148,245,191,141,200,245,191,134,249,107,63,141,200,117,63,202,100,117,63,133,44,245,191,202,100,245,191,31,58,107,63,202,100,117,63,138,43,114,63,214,203,241,191,138,43,242,191,124,22,101,63,138,43,114,63,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
function runPostSets() {
}
if (!awaitingMemoryInitializer) runPostSets();
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  var _llvm_pow_f64=Math.pow;
  var _floor=Math.floor;
  Module["_strlen"] = _strlen;
  var _cos=Math.cos;
  function _log10(x) {
      return Math.log(x) / Math.LN10;
    }
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  var _ceil=Math.ceil;
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (flagAlwaysSigned) {
                if (currArg < 0) {
                  prefix = '-' + prefix;
                } else {
                  prefix = '+' + prefix;
                }
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (flagAlwaysSigned && currArg >= 0) {
                  argText = '+' + argText;
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }
  var _fabs=Math.abs;
  var _llvm_pow_f32=Math.pow;
  function _ExitMP3() {
  Module['printErr']('missing function: ExitMP3'); abort(-1);
  }
  function _InitMP3() {
  Module['printErr']('missing function: InitMP3'); abort(-1);
  }
  function _decodeMP3_unclipped() {
  Module['printErr']('missing function: decodeMP3_unclipped'); abort(-1);
  }
  var _log=Math.log;
  var _exp=Math.exp;
  var _sqrt=Math.sqrt;
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      function ExitStatus() {
        this.name = "ExitStatus";
        this.message = "Program terminated with exit(" + status + ")";
        this.status = status;
        Module.print('Exit Status: ' + status);
      };
      ExitStatus.prototype = new Error();
      ExitStatus.prototype.constructor = ExitStatus;
      exitRuntime();
      ABORT = true;
      throw new ExitStatus();
    }function _exit(status) {
      __exit(status);
    }
  function _qsort(base, num, size, cmp) {
      if (num == 0 || size == 0) return;
      // forward calls to the JavaScript sort method
      // first, sort the items logically
      var comparator = function(x, y) {
        return Runtime.dynCall('iii', cmp, [x, y]);
      }
      var keys = [];
      for (var i = 0; i < num; i++) keys.push(i);
      keys.sort(function(a, b) {
        return comparator(base+a*size, base+b*size);
      });
      // apply the sort
      var temp = _malloc(num*size);
      _memcpy(temp, base, num*size);
      for (var i = 0; i < num; i++) {
        if (keys[i] == i) continue; // already in place
        _memcpy(base+i*size, temp+keys[i]*size, size);
      }
      _free(temp);
    }
  var _atan=Math.atan;
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:35,EIDRM:36,ECHRNG:37,EL2NSYNC:38,EL3HLT:39,EL3RST:40,ELNRNG:41,EUNATCH:42,ENOCSI:43,EL2HLT:44,EDEADLK:45,ENOLCK:46,EBADE:50,EBADR:51,EXFULL:52,ENOANO:53,EBADRQC:54,EBADSLT:55,EDEADLOCK:56,EBFONT:57,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:74,ELBIN:75,EDOTDOT:76,EBADMSG:77,EFTYPE:79,ENOTUNIQ:80,EBADFD:81,EREMCHG:82,ELIBACC:83,ELIBBAD:84,ELIBSCN:85,ELIBMAX:86,ELIBEXEC:87,ENOSYS:88,ENMFILE:89,ENOTEMPTY:90,ENAMETOOLONG:91,ELOOP:92,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:106,EPROTOTYPE:107,ENOTSOCK:108,ENOPROTOOPT:109,ESHUTDOWN:110,ECONNREFUSED:111,EADDRINUSE:112,ECONNABORTED:113,ENETUNREACH:114,ENETDOWN:115,ETIMEDOUT:116,EHOSTDOWN:117,EHOSTUNREACH:118,EINPROGRESS:119,EALREADY:120,EDESTADDRREQ:121,EMSGSIZE:122,EPROTONOSUPPORT:123,ESOCKTNOSUPPORT:124,EADDRNOTAVAIL:125,ENETRESET:126,EISCONN:127,ENOTCONN:128,ETOOMANYREFS:129,EPROCLIM:130,EUSERS:131,EDQUOT:132,ESTALE:133,ENOTSUP:134,ENOMEDIUM:135,ENOSHARE:136,ECASECLASH:137,EILSEQ:138,EOVERFLOW:139,ECANCELED:140,ENOTRECOVERABLE:141,EOWNERDEAD:142,ESTRPIPE:143};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  var __impure_ptr=allocate(1, "i32*", ALLOC_STATIC);var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,createFileHandle:function (stream, fd) {
        if (typeof stream === 'undefined') {
          stream = null;
        }
        if (!fd) {
          if (stream && stream.socket) {
            for (var i = 1; i < 64; i++) {
              if (!FS.streams[i]) {
                fd = i;
                break;
              }
            }
            assert(fd, 'ran out of low fds for sockets');
          } else {
            fd = Math.max(FS.streams.length, 64);
            for (var i = FS.streams.length; i < fd; i++) {
              FS.streams[i] = null; // Keep dense
            }
          }
        }
        // Close WebSocket first if we are about to replace the fd (i.e. dup2)
        if (FS.streams[fd] && FS.streams[fd].socket && FS.streams[fd].socket.close) {
          FS.streams[fd].socket.close();
        }
        FS.streams[fd] = stream;
        return fd;
      },removeFileHandle:function (fd) {
        FS.streams[fd] = null;
      },joinPath:function (parts, forceRelative) {
        var ret = parts[0];
        for (var i = 1; i < parts.length; i++) {
          if (ret[ret.length-1] != '/') ret += '/';
          ret += parts[i];
        }
        if (forceRelative && ret[0] == '/') ret = ret.substr(1);
        return ret;
      },absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              ret = FS.analyzePath([link].concat(path).join('/'),
                                   dontResolveLastLink, linksVisited + 1);
              return ret;
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = new Array(data.length);
          for (var i = 0, len = data.length; i < len; ++i) dataArray[i] = data.charCodeAt(i);
          data = dataArray;
        }
        var properties = {
          isDevice: false,
          contents: data.subarray ? data.subarray(0) : data // as an optimization, create a new array wrapper (not buffer) here, to help JS engines understand this object
        };
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          var LazyUint8Array = function() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile) {
        Browser.init();
        var fullname = FS.joinPath([parent, name], true);
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: true,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureRoot();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        input = input || Module['stdin'];
        output = output || Module['stdout'];
        error = error || Module['stderr'];
        // Default handlers.
        var stdinOverridden = true, stdoutOverridden = true, stderrOverridden = true;
        if (!input) {
          stdinOverridden = false;
          input = function() {
            if (!input.cache || !input.cache.length) {
              var result;
              if (typeof window != 'undefined' &&
                  typeof window.prompt == 'function') {
                // Browser.
                result = window.prompt('Input: ');
                if (result === null) result = String.fromCharCode(0); // cancel ==> EOF
              } else if (typeof readline == 'function') {
                // Command line.
                result = readline();
              }
              if (!result) result = '';
              input.cache = intArrayFromString(result + '\n', true);
            }
            return input.cache.shift();
          };
        }
        var utf8 = new Runtime.UTF8Processor();
        function simpleOutput(val) {
          if (val === null || val === 10) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(utf8.processCChar(val));
          }
        }
        if (!output) {
          stdoutOverridden = false;
          output = simpleOutput;
        }
        if (!output.printer) output.printer = Module['print'];
        if (!output.buffer) output.buffer = [];
        if (!error) {
          stderrOverridden = false;
          error = simpleOutput;
        }
        if (!error.printer) error.printer = Module['print'];
        if (!error.buffer) error.buffer = [];
        // Create the temporary folder, if not already created
        try {
          FS.createFolder('/', 'tmp', true, true);
        } catch(e) {}
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, true);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        FS.createDevice(devFolder, 'tty', input, output);
        FS.createDevice(devFolder, 'null', function(){}, function(){});
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          isTerminal: !stdinOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stdoutOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          isTerminal: !stderrOverridden,
          error: false,
          eof: false,
          ungotten: []
        };
        // TODO: put these low in memory like we used to assert on: assert(Math.max(_stdin, _stdout, _stderr) < 15000); // make sure these are low, we flatten arrays with these
        HEAP32[((_stdin)>>2)]=1;
        HEAP32[((_stdout)>>2)]=2;
        HEAP32[((_stderr)>>2)]=3;
        // Other system paths
        FS.createPath('/', 'dev/shm/tmp', true, true); // temp files
        // Newlib initialization
        for (var i = FS.streams.length; i < Math.max(_stdin, _stdout, _stderr) + 4; i++) {
          FS.streams[i] = null; // Make sure to keep FS.streams dense
        }
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        allocate([ allocate(
          [0, 0, 0, 0, _stdin, 0, 0, 0, _stdout, 0, 0, 0, _stderr, 0, 0, 0],
          'void*', ALLOC_NORMAL) ], 'void*', ALLOC_NONE, __impure_ptr);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr. Careful, they may have been closed
        if (FS.streams[2] && FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output(10);
        if (FS.streams[3] && FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output(10);
      },standardizePath:function (path) {
        if (path.substr(0, 2) == './') path = path.substr(2);
        return path;
      },deleteFile:function (path) {
        path = FS.analyzePath(path);
        if (!path.parentExists || !path.exists) {
          throw 'Invalid path ' + path;
        }
        delete path.parentObject.contents[path.name];
      }};
  function _send(fd, buf, len, flags) {
      var info = FS.streams[fd];
      if (!info) return -1;
      info.sender(HEAPU8.subarray(buf, buf+len));
      return len;
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = HEAPU8[(((buf)+(i))|0)];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (stream && ('socket' in stream)) {
          return _send(fildes, buf, nbyte, 0);
      } else if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(HEAP8[(((buf)+(i))|0)]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      var flush = function(filedes) {
        // Right now we write all data directly, except for output devices.
        if (FS.streams[filedes] && FS.streams[filedes].object.output) {
          if (!FS.streams[filedes].isTerminal) { // don't flush terminals, it would cause a \n to also appear
            FS.streams[filedes].object.output(null);
          }
        }
      };
      try {
        if (stream === 0) {
          for (var i = 0; i < FS.streams.length; i++) if (FS.streams[i]) flush(i);
        } else {
          flush(stream);
        }
        return 0;
      } catch (e) {
        ___setErrNo(ERRNO_CODES.EIO);
        return -1;
      }
    }
  var _llvm_va_start=undefined;
  function _llvm_va_end() {}
  var _sin=Math.sin;
  var _fabsf=Math.abs;
  var _log10f=_log10;
  function _abort() {
      ABORT = true;
      throw 'abort() at ' + (new Error().stack);
    }
  function ___errno_location() {
      return ___errno_state;
    }var ___errno=___errno_location;
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
        case 10: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function _llvm_bswap_i16(x) {
      return ((x&0xff)<<8) | ((x>>8)&0xff);
    }
  var _floorf=Math.floor;
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  var _llvm_memset_p0i8_i64=_memset;
  function _exp2(x) {
      return Math.pow(2, x);
    }
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : console.log("warning: cannot create object URLs");
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        function getMimetype(name) {
          return {
            'jpg': 'image/jpeg',
            'jpeg': 'image/jpeg',
            'png': 'image/png',
            'bmp': 'image/bmp',
            'ogg': 'audio/ogg',
            'wav': 'audio/wav',
            'mp3': 'audio/mpeg'
          }[name.substr(name.lastIndexOf('.')+1)];
        }
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/.exec(name);
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule) {
        var ctx;
        try {
          if (useWebGL) {
            ctx = canvas.getContext('experimental-webgl', {
              alpha: false
            });
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x = event.pageX - (window.scrollX + rect.left);
          var y = event.pageY - (window.scrollY + rect.top);
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
Module["requestFullScreen"] = function(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
var Math_min = Math.min;
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiifii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiifii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env._stderr|0;var n=+env.NaN;var o=+env.Infinity;var p=0;var q=0;var r=0;var s=0;var t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0.0;var C=0;var D=0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=global.Math.floor;var N=global.Math.abs;var O=global.Math.sqrt;var P=global.Math.pow;var Q=global.Math.cos;var R=global.Math.sin;var S=global.Math.tan;var T=global.Math.acos;var U=global.Math.asin;var V=global.Math.atan;var W=global.Math.atan2;var X=global.Math.exp;var Y=global.Math.log;var Z=global.Math.ceil;var _=global.Math.imul;var $=env.abort;var aa=env.assert;var ab=env.asmPrintInt;var ac=env.asmPrintFloat;var ad=env.min;var ae=env.invoke_ii;var af=env.invoke_iiifii;var ag=env.invoke_vi;var ah=env.invoke_vii;var ai=env.invoke_iiii;var aj=env.invoke_v;var ak=env.invoke_iiiii;var al=env.invoke_iii;var am=env.invoke_viiii;var an=env._llvm_va_end;var ao=env._llvm_lifetime_end;var ap=env._fabsf;var aq=env._snprintf;var ar=env._abort;var as=env._fprintf;var at=env._send;var au=env._fflush;var av=env.__reallyNegative;var aw=env._llvm_pow_f32;var ax=env._log;var ay=env._fabs;var az=env._floor;var aA=env.___setErrNo;var aB=env._qsort;var aC=env._sqrt;var aD=env._decodeMP3_unclipped;var aE=env._exit;var aF=env._sprintf;var aG=env._log10;var aH=env._sin;var aI=env._sysconf;var aJ=env._ExitMP3;var aK=env._InitMP3;var aL=env._llvm_bswap_i16;var aM=env._atan;var aN=env._time;var aO=env.__formatString;var aP=env._ceil;var aQ=env._floorf;var aR=env._vfprintf;var aS=env._cos;var aT=env._pwrite;var aU=env._llvm_pow_f64;var aV=env._sbrk;var aW=env.___errno_location;var aX=env._exp2;var aY=env._llvm_lifetime_start;var aZ=env._write;var a_=env._exp;var a$=env._fwrite;var a0=env.__exit;
// EMSCRIPTEN_START_FUNCS
function ba(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7>>3<<3;return b|0}function bb(){return i|0}function bc(a){a=a|0;i=a}function bd(a,b){a=a|0;b=b|0;if((p|0)==0){p=a;q=b}}function be(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function bf(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function bg(a){a=a|0;C=a}function bh(a){a=a|0;D=a}function bi(a){a=a|0;E=a}function bj(a){a=a|0;F=a}function bk(a){a=a|0;G=a}function bl(a){a=a|0;H=a}function bm(a){a=a|0;I=a}function bn(a){a=a|0;J=a}function bo(a){a=a|0;K=a}function bp(a){a=a|0;L=a}function bq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;e=c[a+52132>>2]|0;f=c[a+52128>>2]|0;g=(f|0)==0?255:f-1|0;f=(c[a+39840+(g*48&-1)>>2]|0)-(c[a+292>>2]|0)|0;c[b>>2]=f;if((f|0)>-1){h=1-e+g|0;j=f-(_(((g|0)<(e|0)?h+256|0:h)<<3,c[a+24>>2]|0)|0)|0}else{j=f}h=a+16|0;e=c[a+84744>>2]|0;if((e|0)==0){k=a+120|0;l=c[h>>2]|0}else{g=c[h>>2]|0;k=66168+(g<<6)+(e<<2)|0;l=g}g=c[a+84752>>2]|0;e=c[a+64>>2]|0;h=((_((l*72e3&-1)+72e3|0,c[k>>2]|0)|0)/(e|0)&-1)+g<<3;g=h+j|0;j=h+f|0;f=((j&7|0)!=0&1)+((j|0)/8&-1)|0;c[b>>2]=f;c[b>>2]=(c[a+296>>2]|0)+1+f;if((g|0)>=0){i=d;return g|0}ct(a,100968,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);i=d;return g|0}function br(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;do{if((e|0)>7){f=b+300|0;g=b+296|0;h=b+52132|0;i=b+292|0;j=b+284|0;k=b+24|0;l=8;do{m=c[f>>2]|0;if((m|0)==0){c[f>>2]=8;n=(c[g>>2]|0)+1|0;c[g>>2]=n;o=c[h>>2]|0;if((c[b+39840+(o*48&-1)>>2]|0)==(c[i>>2]|0)){p=(c[j>>2]|0)+n|0;q=b+39840+(o*48&-1)+8|0;o=c[k>>2]|0;cF(p|0,q|0,o)|0;o=c[k>>2]|0;q=(c[g>>2]|0)+o|0;c[g>>2]=q;c[i>>2]=(c[i>>2]|0)+(o<<3);c[h>>2]=(c[h>>2]|0)+1&255;r=q}else{r=n}a[(c[j>>2]|0)+r|0]=0;s=c[f>>2]|0}else{s=m}m=(l|0)<(s|0)?l:s;l=l-m|0;n=s-m|0;c[f>>2]=n;q=(c[j>>2]|0)+(c[g>>2]|0)|0;a[q]=(76>>>(l>>>0)<<n|d[q])&255;t=(c[i>>2]|0)+m|0;c[i>>2]=t;}while((l|0)>0);l=e-8|0;if((l|0)>7){u=8;v=t}else{w=l;break}do{l=c[f>>2]|0;if((l|0)==0){c[f>>2]=8;m=(c[g>>2]|0)+1|0;c[g>>2]=m;q=c[h>>2]|0;if((c[b+39840+(q*48&-1)>>2]|0)==(v|0)){n=(c[j>>2]|0)+m|0;o=b+39840+(q*48&-1)+8|0;q=c[k>>2]|0;cF(n|0,o|0,q)|0;q=c[k>>2]|0;o=(c[g>>2]|0)+q|0;c[g>>2]=o;c[i>>2]=(c[i>>2]|0)+(q<<3);c[h>>2]=(c[h>>2]|0)+1&255;x=o}else{x=m}a[(c[j>>2]|0)+x|0]=0;y=c[f>>2]|0}else{y=l}l=(u|0)<(y|0)?u:y;u=u-l|0;m=y-l|0;c[f>>2]=m;o=(c[j>>2]|0)+(c[g>>2]|0)|0;a[o]=(65>>>(u>>>0)<<m|d[o])&255;v=(c[i>>2]|0)+l|0;c[i>>2]=v;}while((u|0)>0);l=e-16|0;if((l|0)>7){z=8;A=v}else{w=l;break}do{l=c[f>>2]|0;if((l|0)==0){c[f>>2]=8;o=(c[g>>2]|0)+1|0;c[g>>2]=o;m=c[h>>2]|0;if((c[b+39840+(m*48&-1)>>2]|0)==(A|0)){q=(c[j>>2]|0)+o|0;n=b+39840+(m*48&-1)+8|0;m=c[k>>2]|0;cF(q|0,n|0,m)|0;m=c[k>>2]|0;n=(c[g>>2]|0)+m|0;c[g>>2]=n;c[i>>2]=(c[i>>2]|0)+(m<<3);c[h>>2]=(c[h>>2]|0)+1&255;B=n}else{B=o}a[(c[j>>2]|0)+B|0]=0;C=c[f>>2]|0}else{C=l}l=(z|0)<(C|0)?z:C;z=z-l|0;o=C-l|0;c[f>>2]=o;n=(c[j>>2]|0)+(c[g>>2]|0)|0;a[n]=(77>>>(z>>>0)<<o|d[n])&255;A=(c[i>>2]|0)+l|0;c[i>>2]=A;}while((z|0)>0);l=e-24|0;if((l|0)>7){D=8;E=A}else{w=l;break}do{l=c[f>>2]|0;if((l|0)==0){c[f>>2]=8;n=(c[g>>2]|0)+1|0;c[g>>2]=n;o=c[h>>2]|0;if((c[b+39840+(o*48&-1)>>2]|0)==(E|0)){m=(c[j>>2]|0)+n|0;q=b+39840+(o*48&-1)+8|0;o=c[k>>2]|0;cF(m|0,q|0,o)|0;o=c[k>>2]|0;q=(c[g>>2]|0)+o|0;c[g>>2]=q;c[i>>2]=(c[i>>2]|0)+(o<<3);c[h>>2]=(c[h>>2]|0)+1&255;F=q}else{F=n}a[(c[j>>2]|0)+F|0]=0;G=c[f>>2]|0}else{G=l}l=(D|0)<(G|0)?D:G;D=D-l|0;n=G-l|0;c[f>>2]=n;q=(c[j>>2]|0)+(c[g>>2]|0)|0;a[q]=(69>>>(D>>>0)<<n|d[q])&255;E=(c[i>>2]|0)+l|0;c[i>>2]=E;}while((D|0)>0);l=e-32|0;if((l|0)<=31){w=l;break}q=e-40|0;n=(q>>>0<40?q&-8^-8:-48)+e|0;q=0;o=l;l=E;while(1){m=a[100376+q|0]|0;p=8;H=l;do{I=c[f>>2]|0;if((I|0)==0){c[f>>2]=8;J=(c[g>>2]|0)+1|0;c[g>>2]=J;K=c[h>>2]|0;if((c[b+39840+(K*48&-1)>>2]|0)==(H|0)){L=(c[j>>2]|0)+J|0;M=b+39840+(K*48&-1)+8|0;K=c[k>>2]|0;cF(L|0,M|0,K)|0;K=c[k>>2]|0;M=(c[g>>2]|0)+K|0;c[g>>2]=M;c[i>>2]=(c[i>>2]|0)+(K<<3);c[h>>2]=(c[h>>2]|0)+1&255;N=M}else{N=J}a[(c[j>>2]|0)+N|0]=0;O=c[f>>2]|0}else{O=I}I=(p|0)<(O|0)?p:O;p=p-I|0;J=O-I|0;c[f>>2]=J;M=(c[j>>2]|0)+(c[g>>2]|0)|0;a[M]=(m>>p<<J|d[M])&255;H=(c[i>>2]|0)+I|0;c[i>>2]=H;}while((p|0)>0);p=o-8|0;m=q+1|0;if((m|0)<6&(p|0)>7){q=m;o=p;l=H}else{break}}w=n-32|0}else{w=e}}while(0);if((w|0)<=0){return}e=b+52136|0;O=b+300|0;N=b+296|0;E=b+52132|0;D=b+292|0;G=b+284|0;F=b+24|0;A=b+144|0;z=w;w=c[e>>2]|0;do{C=1;do{B=c[O>>2]|0;if((B|0)==0){c[O>>2]=8;v=(c[N>>2]|0)+1|0;c[N>>2]=v;u=c[E>>2]|0;if((c[b+39840+(u*48&-1)>>2]|0)==(c[D>>2]|0)){y=(c[G>>2]|0)+v|0;x=b+39840+(u*48&-1)+8|0;u=c[F>>2]|0;cF(y|0,x|0,u)|0;u=c[F>>2]|0;x=(c[N>>2]|0)+u|0;c[N>>2]=x;c[D>>2]=(c[D>>2]|0)+(u<<3);c[E>>2]=(c[E>>2]|0)+1&255;P=x}else{P=v}a[(c[G>>2]|0)+P|0]=0;Q=c[O>>2]|0}else{Q=B}B=(C|0)<(Q|0)?C:Q;C=C-B|0;v=Q-B|0;c[O>>2]=v;x=(c[G>>2]|0)+(c[N>>2]|0)|0;a[x]=(w>>C<<v|d[x])&255;c[D>>2]=(c[D>>2]|0)+B;}while((C|0)>0);w=(c[A>>2]|0)==0&1^c[e>>2];c[e>>2]=w;z=z-1|0;}while((z|0)>0);return}function bs(a,e,f){a=a|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0.0,J=0.0,K=0.0,L=0,M=0.0,N=0.0,O=0;h=i;i=i+9224|0;j=h|0;k=h+8|0;l=a+296|0;m=c[l>>2]|0;n=m+1|0;if((m|0)<0){o=0;i=h;return o|0}if((f|0)!=0&(n|0)>(f|0)){o=-1;i=h;return o|0}f=c[a+284>>2]|0;cF(e|0,f|0,n)|0;c[l>>2]=-1;c[a+300>>2]=0;l=a+85752|0;if((n|0)>0){f=0;m=b[l>>1]|0;do{m=(c[65048+((((d[e+f|0]|0)^m)&255)<<2)>>2]^(m&65535)>>>8)&65535;b[l>>1]=m;f=f+1|0;}while((f|0)<(n|0))}f=a+85788|0;c[f>>2]=(c[f>>2]|0)+n;if((c[a+136>>2]|0)==0){o=n;i=h;return o|0}f=a+85676|0;m=a+85808|0;l=k|0;p=k+4608|0;q=a+132|0;r=a+128|0;s=a+72|0;t=a+85684|0;a=n;L95:while(1){u=c[m>>2]|0;do{if((u|0)==0){v=0}else{w=aD(u|0,e|0,a|0,54688,9216,j|0)|0;if((w|0)==0){x=c[u+68>>2]|0;if((x|0)==1){y=c[j>>2]|0;z=(y|0)/4&-1;if((y|0)>3){A=0;B=l;C=54688}else{v=z;break}while(1){g[B>>2]=+g[C>>2];y=A+1|0;if((y|0)<(z|0)){A=y;B=B+4|0;C=C+4|0}else{v=z;break}}}else if((x|0)==2){z=((c[j>>2]|0)/4&-1)>>1;if((z|0)>0){D=0;E=l;F=p;G=54688}else{v=z;break}while(1){g[E>>2]=+g[G>>2];g[F>>2]=+g[G+4>>2];y=D+1|0;if((y|0)<(z|0)){D=y;E=E+4|0;F=F+4|0;G=G+8|0}else{v=z;break}}}else{v=-1;break}}else if((w|0)==(-1|0)){v=-1;break}else if((w|0)==1){v=0;break}else{v=-1;break}}}while(0);u=(v|0)==-1?0:v;do{if((u|0)>0){do{if((c[q>>2]|0)!=0){z=0;H=+g[t>>2];while(1){I=+g[k+(z<<2)>>2];do{if(I>H){g[t>>2]=I;J=I}else{K=-0.0-I;if(H>=K){J=H;break}g[t>>2]=K;J=K}}while(0);x=z+1|0;if((x|0)<(u|0)){z=x;H=J}else{break}}if((c[s>>2]|0)>1){L=0;M=J}else{break}while(1){H=+g[k+4608+(L<<2)>>2];do{if(H>M){g[t>>2]=H;N=H}else{I=-0.0-H;if(M>=I){N=M;break}g[t>>2]=I;N=I}}while(0);z=L+1|0;if((z|0)<(u|0)){L=z;M=N}else{break}}}}while(0);if((c[r>>2]|0)==0){break}if((by(c[f>>2]|0,l,p,u,c[s>>2]|0)|0)==0){o=-6;O=92;break L95}}}while(0);if((u|0)==0){o=n;O=93;break}else{a=0}}if((O|0)==92){i=h;return o|0}else if((O|0)==93){i=h;return o|0}return 0}function bt(b,f){b=b|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;h=(c[f+4840>>2]|0)+32|0;i=c[f+4772>>2]|0;j=(c[f+4776>>2]|0)-i|0;if((j|0)<=3){k=0;return k|0}l=c[54152+(h<<4)>>2]|0;m=c[54156+(h<<4)>>2]|0;h=b+300|0;n=b+296|0;o=b+52132|0;p=b+292|0;q=b+284|0;r=b+24|0;s=(j|0)/4&-1;j=0;t=f+2304+(i<<2)|0;u=f+(i<<2)|0;while(1){do{if((c[t>>2]|0)==0){v=0;w=0}else{if(+g[u>>2]>=0.0){v=8;w=0;break}v=8;w=1}}while(0);do{if((c[t+4>>2]|0)==0){x=v;y=w}else{i=v|4;f=w<<1;if(+g[u+4>>2]>=0.0){x=i;y=f;break}x=i;y=f|1}}while(0);do{if((c[t+8>>2]|0)==0){z=x;A=y}else{f=x+2|0;i=y<<1;if(+g[u+8>>2]>=0.0){z=f;A=i;break}z=f;A=i|1}}while(0);do{if((c[t+12>>2]|0)==0){B=z;C=A}else{i=z+1|0;f=A<<1;if(+g[u+12>>2]>=0.0){B=i;C=f;break}B=i;C=f|1}}while(0);f=t+16|0;i=u+16|0;D=(e[l+(B<<1)>>1]|0)+C|0;E=m+B|0;F=a[E]|0;if(F<<24>>24==0){G=0}else{H=F&255;do{F=c[h>>2]|0;if((F|0)==0){c[h>>2]=8;I=(c[n>>2]|0)+1|0;c[n>>2]=I;J=c[o>>2]|0;if((c[b+39840+(J*48&-1)>>2]|0)==(c[p>>2]|0)){K=(c[q>>2]|0)+I|0;L=b+39840+(J*48&-1)+8|0;J=c[r>>2]|0;cF(K|0,L|0,J)|0;J=c[r>>2]|0;L=(c[n>>2]|0)+J|0;c[n>>2]=L;c[p>>2]=(c[p>>2]|0)+(J<<3);c[o>>2]=(c[o>>2]|0)+1&255;M=L}else{M=I}a[(c[q>>2]|0)+M|0]=0;N=c[h>>2]|0}else{N=F}F=(H|0)<(N|0)?H:N;H=H-F|0;I=N-F|0;c[h>>2]=I;L=(c[q>>2]|0)+(c[n>>2]|0)|0;a[L]=(D>>H<<I|(d[L]|0))&255;c[p>>2]=(c[p>>2]|0)+F;}while((H|0)>0);G=d[E]|0}H=G+j|0;D=s-1|0;if((D|0)>0){s=D;j=H;t=f;u=i}else{k=H;break}}return k|0}function bu(b,f,h,i,j){b=b|0;f=f|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0;k=c[54144+(f<<4)>>2]|0;if(!((f|0)!=0&(h|0)<(i|0))){l=0;return l|0}m=f>>>0>15;n=k&65535;o=c[54156+(f<<4)>>2]|0;p=c[54152+(f<<4)>>2]|0;f=b+300|0;q=b+296|0;r=b+52132|0;s=b+292|0;t=b+284|0;u=b+24|0;v=0;w=h;while(1){h=c[j+2304+(w<<2)>>2]|0;x=w+1|0;y=c[j+2304+(x<<2)>>2]|0;if((h|0)==0){z=0;A=0}else{z=+g[j+(w<<2)>>2]<0.0&1;A=-1}do{if(m){if(h>>>0>14){B=15;C=z|(h<<1)+131042&131070;D=n}else{B=h;C=z;D=0}if(y>>>0<=14){E=B;F=C;G=16;H=D;I=132;break}J=(D&65535)+k&65535;K=16;L=C<<k|y+65521&65535;M=B;N=15;I=133}else{E=h;F=z;G=k;H=0;I=132}}while(0);if((I|0)==132){I=0;if((y|0)==0){O=F;P=A;Q=H;R=G;S=E;T=0}else{J=H;K=G;L=F;M=E;N=y;I=133}}if((I|0)==133){I=0;O=+g[j+(x<<2)>>2]<0.0&1|L<<1;P=A-1&65535;Q=J;R=K;S=M;T=N}h=(_(R,S)|0)+T|0;U=Q-P&65535;V=(d[o+h|0]|0)+P&65535;W=e[p+(h<<1)>>1]|0;h=V<<16>>16;if(V<<16>>16>0){V=h;do{X=c[f>>2]|0;if((X|0)==0){c[f>>2]=8;Y=(c[q>>2]|0)+1|0;c[q>>2]=Y;Z=c[r>>2]|0;if((c[b+39840+(Z*48&-1)>>2]|0)==(c[s>>2]|0)){$=(c[t>>2]|0)+Y|0;aa=b+39840+(Z*48&-1)+8|0;Z=c[u>>2]|0;cF($|0,aa|0,Z)|0;Z=c[u>>2]|0;aa=(c[q>>2]|0)+Z|0;c[q>>2]=aa;c[s>>2]=(c[s>>2]|0)+(Z<<3);c[r>>2]=(c[r>>2]|0)+1&255;ab=aa}else{ab=Y}a[(c[t>>2]|0)+ab|0]=0;ac=c[f>>2]|0}else{ac=X}X=(V|0)<(ac|0)?V:ac;V=V-X|0;Y=ac-X|0;c[f>>2]=Y;aa=(c[t>>2]|0)+(c[q>>2]|0)|0;a[aa]=(W>>>(V>>>0)<<Y|(d[aa]|0))&255;c[s>>2]=(c[s>>2]|0)+X;}while((V|0)>0)}V=U&65535;if(Q<<16>>16!=P<<16>>16){W=V;do{x=c[f>>2]|0;if((x|0)==0){c[f>>2]=8;y=(c[q>>2]|0)+1|0;c[q>>2]=y;X=c[r>>2]|0;if((c[b+39840+(X*48&-1)>>2]|0)==(c[s>>2]|0)){aa=(c[t>>2]|0)+y|0;Y=b+39840+(X*48&-1)+8|0;X=c[u>>2]|0;cF(aa|0,Y|0,X)|0;X=c[u>>2]|0;Y=(c[q>>2]|0)+X|0;c[q>>2]=Y;c[s>>2]=(c[s>>2]|0)+(X<<3);c[r>>2]=(c[r>>2]|0)+1&255;ad=Y}else{ad=y}a[(c[t>>2]|0)+ad|0]=0;ae=c[f>>2]|0}else{ae=x}x=(W|0)<(ae|0)?W:ae;W=W-x|0;y=ae-x|0;c[f>>2]=y;Y=(c[t>>2]|0)+(c[q>>2]|0)|0;a[Y]=(O>>W<<y|(d[Y]|0))&255;c[s>>2]=(c[s>>2]|0)+x;}while((W|0)>0)}W=V+v+h|0;U=w+2|0;if((U|0)<(i|0)){v=W;w=U}else{l=W;break}}return l|0}function bv(b,e,f,j,l){b=b|0;e=e|0;f=f|0;j=j|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,O=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a5=0,a6=0,a7=0,a8=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bI=0,bJ=0,bK=0,bL=0,bO=0,bP=0,bQ=0,bR=0.0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0.0,b_=0,b$=0.0,b0=0.0,b1=0,b2=0.0,b3=0.0,b4=0.0,b5=0.0,b6=0.0,b7=0,b8=0,cb=0,cc=0,cd=0,ce=0,cf=0,cg=0,ch=0.0,ci=0.0,cj=0,ck=0,cl=0.0,cm=0.0,cn=0.0,co=0,cp=0,cq=0.0,cr=0.0,cs=0.0,cu=0.0,cv=0,cw=0.0,cx=0.0,cy=0.0,cz=0,cA=0,cB=0.0,cC=0,cD=0,cG=0,cH=0,cI=0,cJ=0,cK=0.0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0.0,cS=0,cT=0.0,cU=0,cV=0,cW=0.0,cX=0.0,cY=0.0,cZ=0.0,c_=0.0,c$=0.0,c0=0,c1=0,c2=0,c3=0.0,c4=0.0,c5=0.0,c6=0.0,c7=0.0,c8=0,c9=0.0,da=0.0,db=0,dc=0.0,dd=0.0,de=0.0,df=0,dg=0,dh=0.0,di=0,dj=0,dk=0,dl=0,dm=0,dn=0,dp=0.0,dq=0,dr=0,ds=0,dt=0,du=0.0,dv=0,dw=0.0,dx=0,dy=0,dz=0.0,dA=0.0,dB=0.0,dC=0,dD=0,dE=0,dF=0.0,dG=0.0,dH=0.0,dI=0,dJ=0,dK=0,dL=0,dM=0,dN=0,dO=0.0,dP=0.0,dQ=0.0,dR=0.0,dS=0.0,dT=0,dU=0,dV=0,dW=0.0,dX=0.0,dY=0.0,dZ=0,d_=0.0,d$=0.0,d0=0,d1=0,d2=0,d3=0.0,d4=0.0,d5=0,d6=0,d7=0,d8=0,d9=0,ea=0,eb=0,ec=0,ed=0,ee=0,ef=0,eg=0,eh=0,ei=0,ej=0,ek=0,el=0,em=0,en=0,eo=0,ep=0,eq=0,er=0,es=0,et=0,eu=0,ev=0,ew=0,ex=0,ey=0,ez=0,eA=0,eB=0,eC=0,eD=0,eE=0,eF=0,eG=0,eH=0,eI=0,eJ=0,eK=0,eL=0,eM=0,eN=0,eO=0,eP=0,eQ=0,eR=0,eS=0,eT=0,eU=0,eV=0,eW=0,eX=0,eY=0,eZ=0,e_=0,e$=0,e0=0,e1=0,e2=0,e3=0,e4=0,e5=0,e6=0,e7=0,e8=0,e9=0,fa=0,fb=0,fc=0,fd=0,fe=0,ff=0,fg=0,fh=0,fi=0,fj=0,fk=0,fl=0,fm=0,fn=0,fo=0,fp=0,fq=0,fr=0,fs=0,ft=0,fu=0,fv=0,fw=0,fx=0,fy=0,fz=0,fA=0,fB=0,fC=0,fD=0,fE=0,fF=0,fG=0.0,fH=0.0,fI=0,fJ=0,fK=0,fL=0,fM=0,fN=0,fO=0.0,fP=0,fQ=0.0,fR=0.0,fS=0.0,fT=0,fU=0,fV=0,fW=0,fX=0,fY=0;m=i;i=i+47160|0;n=m|0;o=m+160|0;p=m+320|0;q=m+344|0;r=m+504|0;s=m+512|0;u=m+576|0;v=m+832|0;w=m+1088|0;x=m+1160|0;y=m+1216|0;z=m+1272|0;A=m+5880|0;B=m+5928|0;C=m+5976|0;D=m+5992|0;E=m+6968|0;F=m+9024|0;G=m+10576|0;H=m+18768|0;I=m+24912|0;J=m+25936|0;K=m+26960|0;L=m+27008|0;M=m+27072|0;O=m+27080|0;Q=m+27096|0;R=m+35152|0;S=m+43208|0;T=m+45160|0;U=m+47112|0;V=m+47120|0;W=m+47152|0;X=W;Y=i;i=i+16|0;Z=i;i=i+16|0;$=i;i=i+8|0;aa=$;ab=i;i=i+8|0;c[W>>2]=1056964608;c[W+4>>2]=1056964608;cE(Y|0,0,16);cE(Z|0,0,16);ac=U|0;c[ac>>2]=e;c[U+4>>2]=f;ad=b+4|0;if((c[ad>>2]|0)==0){ae=b+76|0;af=c[ae>>2]|0;ag=af*576&-1;c[ad>>2]=1;cE(Q|0,0,8056);cE(R|0,0,8056);ad=ag+862|0;if((ad|0)>0){ah=b+72|0;ai=0;aj=0;while(1){do{if((ai|0)<(ag|0)){g[Q+(ai<<2)>>2]=0.0;if((c[ah>>2]|0)!=2){ak=aj;break}g[R+(ai<<2)>>2]=0.0;ak=aj}else{g[Q+(ai<<2)>>2]=+g[e+(aj<<2)>>2];if((c[ah>>2]|0)==2){g[R+(ai<<2)>>2]=+g[f+(aj<<2)>>2]}ak=aj+1|0}}while(0);al=ai+1|0;if((al|0)<(ad|0)){ai=al;aj=ak}else{break}}}if((af|0)>0){ak=b+72|0;aj=0;ai=c[ak>>2]|0;ad=af;while(1){if((ai|0)>0){af=0;do{c[b+304+(aj*10504&-1)+(af*5252&-1)+4788>>2]=2;af=af+1|0;am=c[ak>>2]|0;}while((af|0)<(am|0));an=am;ao=c[ae>>2]|0}else{an=ai;ao=ad}af=aj+1|0;if((af|0)<(ao|0)){aj=af;ai=an;ad=ao}else{break}}}bH(b,Q|0,R|0)}R=b+84752|0;c[R>>2]=0;Q=b+39836|0;ao=(c[Q>>2]|0)-(c[b+39832>>2]|0)|0;c[Q>>2]=ao;if((ao|0)<0){c[Q>>2]=(c[b+64>>2]|0)+ao;c[R>>2]=1}c[$>>2]=0;c[$+4>>2]=0;ao=b+76|0;Q=c[ao>>2]|0;if((Q|0)>0){ad=b+72|0;an=$;$=ab|0;ai=b+180|0;aj=D;ae=L;am=O;ak=b+85800|0;af=b+140|0;ah=b+192|0;e=b+200|0;ag=b+85796|0;al=I|0;ap=b+25660|0;aq=M|0;ar=z;as=C;at=C|0;au=M+4|0;av=A|0;aw=B|0;ax=B+4|0;ay=A+4|0;az=B+8|0;aA=A+8|0;aB=B+12|0;aC=B+16|0;aD=B+20|0;aE=B+24|0;aF=B+28|0;aG=B+32|0;aH=B+36|0;aI=B+40|0;aJ=B+44|0;aK=C+4|0;aL=C+8|0;aM=C+12|0;aN=A+12|0;aO=A+16|0;aP=A+20|0;aQ=A+24|0;aR=A+28|0;aS=A+32|0;aT=A+36|0;aU=A+40|0;aV=A+44|0;aW=b+184|0;aX=E|0;aY=u;aZ=v;a_=w|0;a$=u|0;a0=v|0;a1=u+4|0;a2=b+84908|0;a3=v+4|0;a5=b+85804|0;a6=b+85820|0;a7=J|0;a8=x|0;ba=y|0;bb=x+4|0;bc=y+4|0;bd=x+8|0;be=y+8|0;bf=x+12|0;bg=y+12|0;bh=x+16|0;bi=y+16|0;bj=x+20|0;bk=y+20|0;bl=x+24|0;bm=y+24|0;bn=x+28|0;bo=y+28|0;bp=x+32|0;bv=y+32|0;bw=x+36|0;bx=y+36|0;by=x+40|0;bz=y+40|0;bA=x+44|0;bB=y+44|0;bC=x+48|0;bD=y+48|0;bE=s|0;bF=O|0;bG=ab+4|0;bI=0;bJ=c[ad>>2]|0;while(1){bK=(bJ|0)>0;if(bK){bL=(bI*576&-1)+304|0;bO=0;do{c[aa+(bO<<2)>>2]=(c[U+(bO<<2)>>2]|0)+(bL<<2);bO=bO+1|0;}while((bO|0)<(bJ|0))}bO=Y+(bI<<3)|0;bL=c[ak>>2]|0;bP=(c[af>>2]|0)==0;if(bP){bQ=0}else{bQ=c[a5>>2]|0}if(+g[ah>>2]>0.0){bR=+g[e>>2]*+g[(c[ag>>2]|0)+8>>2]}else{bR=1.0}cE(ae|0,0,64);bS=(c[ai>>2]|0)==1;bT=bS?4:bJ;cF(aj|0,ap|0,976)|0;if(bP){bU=0}else{bU=c[a5>>2]|0}bP=bS?4:bJ;cE(ar|0,0,4608);if(bK){bS=(bP|0)>2;bV=0;do{bW=c[an+(bV<<2)>>2]|0;bX=0;do{g[z+(bV*2304&-1)+(bX<<2)>>2]=+g[bW+(bX+407<<2)>>2]+(+g[bW+(bX+397<<2)>>2]+ +g[bW+(bX+418<<2)>>2])*-1.7303260184043527e-17+(+g[bW+(bX+399<<2)>>2]+ +g[bW+(bX+416<<2)>>2])*-1.3495279640235235e-17+(+g[bW+(bX+401<<2)>>2]+ +g[bW+(bX+414<<2)>>2])*-6.732779685849225e-17+(+g[bW+(bX+403<<2)>>2]+ +g[bW+(bX+412<<2)>>2])*-3.0835000291318875e-17+(+g[bW+(bX+405<<2)>>2]+ +g[bW+(bX+410<<2)>>2])*-1.1044240253100168e-16+((+g[bW+(bX+398<<2)>>2]+ +g[bW+(bX+417<<2)>>2])*-.017031719908118248+0.0+(+g[bW+(bX+400<<2)>>2]+ +g[bW+(bX+415<<2)>>2])*.04180720075964928+(+g[bW+(bX+402<<2)>>2]+ +g[bW+(bX+413<<2)>>2])*-.08763240277767181+(+g[bW+(bX+404<<2)>>2]+ +g[bW+(bX+411<<2)>>2])*.1863476037979126+(+g[bW+(bX+406<<2)>>2]+ +g[bW+(bX+409<<2)>>2])*-.6276379823684692);bX=bX+1|0;}while((bX|0)<576);bX=S+(bI*976&-1)+(bV*488&-1)+244|0;bW=b+26636+(bV*244&-1)|0;cF(bX|0,bW|0,244)|0;bW=S+(bI*976&-1)+(bV*488&-1)|0;bX=b+25660+(bV*244&-1)|0;cF(bW|0,bX|0,244)|0;if(bS){bX=bV+2|0;bW=T+(bI*976&-1)+(bV*488&-1)+244|0;bY=b+26636+(bX*244&-1)|0;cF(bW|0,bY|0,244)|0;bY=T+(bI*976&-1)+(bV*488&-1)|0;bW=b+25660+(bX*244&-1)|0;cF(bY|0,bW|0,244)|0}bV=bV+1|0;}while((bV|0)<(bJ|0))}if((bP|0)>0){bV=(bU|0)==0;bS=0;do{cE(as|0,0,16);bK=z+((bS&1)*2304&-1)|0;if((bS|0)==2){bW=576;bY=0;while(1){bX=z+(bY<<2)|0;bZ=+g[bX>>2];b_=z+2304+(bY<<2)|0;b$=+g[b_>>2];g[bX>>2]=bZ+b$;g[b_>>2]=bZ-b$;b_=bW-1|0;if((b_|0)>0){bW=b_;bY=bY+1|0}else{break}}}b$=+g[b+27636+(bS*36&-1)+24>>2];g[aw>>2]=b$;g[av>>2]=b$/+g[b+27636+(bS*36&-1)+16>>2];bZ=+g[b+27636+(bS*36&-1)+28>>2];g[ax>>2]=bZ;g[ay>>2]=bZ/+g[b+27636+(bS*36&-1)+20>>2];b0=+g[b+27636+(bS*36&-1)+32>>2];g[az>>2]=b0;g[aA>>2]=b0/b$;g[at>>2]=b$+0.0+bZ+b0;bY=bK;bW=0;while(1){b_=bY+256|0;bX=bY;b0=1.0;do{bZ=+N(+(+g[bX>>2]));b0=b0<bZ?bZ:b0;bX=bX+4|0;}while(bX>>>0<b_>>>0);b_=bW+3|0;g[B+(b_<<2)>>2]=b0;g[b+27636+(bS*36&-1)+(bW<<2)>>2]=b0;b1=C+(((bW|0)/3&-1)+1<<2)|0;g[b1>>2]=b0+ +g[b1>>2];b1=bW+1|0;bZ=+g[B+(b1<<2)>>2];do{if(b0>bZ){b2=b0/bZ}else{b$=b0*10.0;if(bZ<=b$){b2=0.0;break}b2=bZ/b$}}while(0);g[A+(b_<<2)>>2]=b2;if((b1|0)<9){bY=bX;bW=b1}else{break}}bZ=+g[aC>>2];b0=+g[aD>>2];b$=+g[aB>>2]+bZ+b0;do{if(b0*6.0<b$){if(bZ*6.0>=b$){b3=.5;break}b3=.25}else{b3=1.0}}while(0);g[K+(bS*12&-1)>>2]=b3;b$=+g[aF>>2];bZ=+g[aG>>2];b0=+g[aE>>2]+b$+bZ;do{if(bZ*6.0<b0){if(b$*6.0>=b0){b4=.5;break}b4=.25}else{b4=1.0}}while(0);g[K+(bS*12&-1)+4>>2]=b4;b0=+g[aI>>2];b$=+g[aJ>>2];bZ=+g[aH>>2]+b0+b$;do{if(b$*6.0<bZ){if(b0*6.0>=bZ){b5=.5;break}b5=.25}else{b5=1.0}}while(0);g[K+(bS*12&-1)+8>>2]=b5;if(!bV){bZ=+g[av>>2];b0=+g[ay>>2];b$=bZ<b0?b0:bZ;bZ=+g[aA>>2];b0=b$<bZ?bZ:b$;b$=+g[aN>>2];bZ=b0<b$?b$:b0;b0=+g[aO>>2];b$=bZ<b0?b0:bZ;bZ=+g[aP>>2];b0=b$<bZ?bZ:b$;b$=+g[aQ>>2];bZ=b0<b$?b$:b0;b0=+g[aR>>2];b$=bZ<b0?b0:bZ;bZ=+g[aS>>2];b0=b$<bZ?bZ:b$;b$=+g[aT>>2];bZ=b0<b$?b$:b0;b0=+g[aU>>2];b$=bZ<b0?b0:bZ;bZ=+g[aV>>2];bW=bU+197112+(bS<<3)|0;h[bU+197144+(bI<<5)+(bS<<3)>>3]=+h[bW>>3];h[bW>>3]=b$<bZ?bZ:b$}b$=+g[(c[ak>>2]|0)+6480+(bS<<2)>>2];bW=0;do{bY=L+(bS<<4)+(((bW|0)/3&-1)<<2)|0;do{if((c[bY>>2]|0)==0){if(+g[A+(bW<<2)>>2]<=b$){break}c[bY>>2]=((bW|0)%3&-1)+1}}while(0);bW=bW+1|0;}while((bW|0)<12);bW=L+(bS<<4)|0;b$=+g[at>>2];bZ=+g[aK>>2];b0=bZ*1.7000000476837158;if((b$>bZ?b$:bZ)<4.0e4&b$<b0&bZ<b$*1.7000000476837158){bY=L+(bS<<4)+4|0;if((c[bW>>2]|0)<=(c[bY>>2]|0)){c[bW>>2]=0}c[bY>>2]=0}b$=+g[aL>>2];b6=b$*1.7000000476837158;if((bZ>b$?bZ:b$)<4.0e4&bZ<b6&b$<b0){c[L+(bS<<4)+8>>2]=0}b0=+g[aM>>2];if((b$>b0?b$:b0)<4.0e4&b$<b0*1.7000000476837158&b0<b6){c[L+(bS<<4)+12>>2]=0}bY=c[bW>>2]|0;b1=c[b+27780+(bS<<2)>>2]|0;if((bY|0)>(b1|0)){b7=bY}else{c[bW>>2]=0;b7=0}bW=L+(bS<<4)+4|0;bY=c[bW>>2]|0;if((b1|0)==3){b8=218}else{if((bY+b7+(c[L+(bS<<4)+8>>2]|0)|0)==(-(c[L+(bS<<4)+12>>2]|0)|0)){cb=1}else{b8=218}}do{if((b8|0)==218){b8=0;do{if((bY|0)==0){cc=0}else{if((b7|0)==0){cc=bY;break}c[bW>>2]=0;cc=0}}while(0);b1=L+(bS<<4)+8|0;if((c[b1>>2]|0)==0){cb=0;break}if((cc|0)!=0){c[b1>>2]=0;cb=0;break}b1=L+(bS<<4)+12|0;if((c[b1>>2]|0)==0){cb=0;break}c[b1>>2]=0;cb=0}}while(0);do{if((bS|0)<2){c[M+(bS<<2)>>2]=cb}else{if((cb|0)!=0){break}c[au>>2]=0;c[aq>>2]=0}}while(0);g[V+(bI<<4)+(bS<<2)>>2]=+g[b+27620+(bS<<2)>>2];bS=bS+1|0;}while((bS|0)<(bP|0))}bP=c[aW>>2]|0;do{if((bP|0)==1){if((c[aq>>2]|0)!=0){if((c[au>>2]|0)!=0){break}}c[au>>2]=0;c[aq>>2]=0}}while(0);bS=c[ad>>2]|0;if((bS|0)>0){bV=0;do{if((bP|0)==2){c[M+(bV<<2)>>2]=1}else if((bP|0)==3){c[M+(bV<<2)>>2]=0}bV=bV+1|0;}while((bV|0)<(bS|0))}bS=(bT|0)>0;if(bS){bV=0;do{bP=bV&1;bW=G+(bP<<12)|0;if((c[af>>2]|0)==0){cd=0}else{cd=c[a5>>2]|0}bY=(bV|0)<2;do{if(bY){b1=bW|0;bX=an+(bV<<2)|0;b_=G+(bP<<12)+2048|0;bK=127;while(1){ce=d[13920+bK|0]|0;cf=c[bX>>2]|0;b6=+g[520+(ce<<2)>>2]*+g[cf+(ce<<2)>>2];cg=ce|512;b0=+g[520+(cg<<2)>>2]*+g[cf+(cg<<2)>>2];b$=b6-b0;bZ=b6+b0;cg=ce|256;b0=+g[520+(cg<<2)>>2]*+g[cf+(cg<<2)>>2];cg=ce|768;b6=+g[520+(cg<<2)>>2]*+g[cf+(cg<<2)>>2];ch=b0-b6;ci=b0+b6;cg=b_-16|0;g[cg>>2]=bZ+ci;g[b_-8>>2]=bZ-ci;g[b_-12>>2]=b$+ch;g[b_-4>>2]=b$-ch;cf=ce+1|0;cj=c[bX>>2]|0;ch=+g[520+(cf<<2)>>2]*+g[cj+(cf<<2)>>2];cf=ce+513|0;b$=+g[520+(cf<<2)>>2]*+g[cj+(cf<<2)>>2];ci=ch-b$;bZ=ch+b$;cf=ce+257|0;b$=+g[520+(cf<<2)>>2]*+g[cj+(cf<<2)>>2];cf=ce+769|0;ch=+g[520+(cf<<2)>>2]*+g[cj+(cf<<2)>>2];b6=b$-ch;b0=b$+ch;g[b_+2032>>2]=bZ+b0;g[b_+2040>>2]=bZ-b0;g[b_+2036>>2]=ci+b6;g[b_+2044>>2]=ci-b6;if((bK|0)<=0){break}b_=cg;bK=bK-1|0}a4[c[a6>>2]&7](b1,512)}else{if((bV|0)!=2){break}bK=bP+1|0;b_=1023;while(1){bX=G+(bP<<12)+(b_<<2)|0;b6=+g[bX>>2];cg=G+(bK<<12)+(b_<<2)|0;ci=+g[cg>>2];g[bX>>2]=(b6+ci)*.7071067690849304;g[cg>>2]=(b6-ci)*.7071067690849304;if((b_|0)>0){b_=b_-1|0}else{break}}}}while(0);ci=+g[bW>>2];g[aX>>2]=ci*ci;b_=511;while(1){bK=512-b_|0;ci=+g[G+(bP<<12)+(bK<<2)>>2];b6=+g[G+(bP<<12)+(b_+512<<2)>>2];g[E+(bK<<2)>>2]=(ci*ci+b6*b6)*.5;if((b_|0)>0){b_=b_-1|0}else{ck=11;cl=0.0;break}}do{cl=cl+ +g[E+(ck<<2)>>2];ck=ck+1|0;}while((ck|0)<513);g[b+27620+(bV<<2)>>2]=cl;if((cd|0)!=0){b_=0;do{bW=cd+90936+(bV<<13)+(b_<<3)|0;h[cd+123704+(bI<<15)+(bV<<13)+(b_<<3)>>3]=+h[bW>>3];h[bW>>3]=+g[E+(b_<<2)>>2];b_=b_+1|0;}while((b_|0)<513)}if(bY){b_=b+27612+(bV<<2)|0;g[b+27804+(bI<<3)+(bV<<2)>>2]=+g[b_>>2];bW=c[ag>>2]|0;bK=0;b6=0.0;do{b6=b6+ +g[E+(bK<<2)>>2]*+g[bW+724+(bK<<2)>>2];bK=bK+1|0;}while((bK|0)<512);g[b_>>2]=b6*8.974871343596633e-12}bK=c[ak>>2]|0;bW=bK+2148|0;bY=c[bW>>2]|0;b1=(bY|0)>0;if(b1){cg=0;bX=0;while(1){cf=c[bK+1716+(bX<<2)>>2]|0;if((cf|0)>0){cj=cg;ci=0.0;b0=0.0;ce=0;while(1){bZ=+g[E+(cj<<2)>>2];cm=ci+bZ;cn=b0<bZ?bZ:b0;co=ce+1|0;if((co|0)<(cf|0)){cj=cj+1|0;ci=cm;b0=cn;ce=co}else{break}}cp=((cf|0)>1?cf:1)+cg|0;cq=cm;cr=cn}else{cp=cg;cq=0.0;cr=0.0}g[I+(bV<<8)+(bX<<2)>>2]=cq;g[u+(bX<<2)>>2]=cr;g[v+(bX<<2)>>2]=cq*+g[bK+512+(bX<<2)>>2];ce=bX+1|0;if((ce|0)<(bY|0)){cg=cp;bX=ce}else{break}}cs=+g[a0>>2];cu=+g[a3>>2]}else{cs=0.0;cu=0.0}b6=cu+cs;if(b6>0.0){b0=+g[a$>>2];ci=+g[a1>>2];bX=~~(((b0<ci?ci:b0)*2.0-b6)*20.0/(b6*+((c[bK+1716>>2]|0)-1+(c[bK+1720>>2]|0)|0)));cv=(bX|0)>8?8:bX&255}else{cv=0}a[a_]=cv;bX=bY-1|0;b6=+g[a3>>2];b0=cs+b6;if((bX|0)>1){cg=(bX|0)>2;b_=1;ce=0;ci=b0;bZ=b6;while(1){cj=b_+1|0;b6=+g[v+(cj<<2)>>2];ch=ci+b6;if(ch>0.0){b$=+g[u+(ce<<2)>>2];cw=+g[u+(b_<<2)>>2];cx=b$<cw?cw:b$;b$=+g[u+(cj<<2)>>2];co=~~(((cx<b$?b$:cx)*3.0-ch)*20.0/(ch*+((c[bK+1716+(ce<<2)>>2]|0)-1+(c[bK+1716+(b_<<2)>>2]|0)+(c[bK+1716+(cj<<2)>>2]|0)|0)));a[w+b_|0]=(co|0)>8?8:co&255}else{a[w+b_|0]=0}cy=bZ+b6;if((cj|0)<(bX|0)){ce=b_;b_=cj;ci=cy;bZ=b6}else{break}}b_=cg?bX:2;cz=b_;cA=b_-1|0;cB=cy}else{cz=1;cA=0;cB=b0}if(cB>0.0){bZ=+g[u+(cA<<2)>>2];ci=+g[u+(cz<<2)>>2];b_=~~(((bZ<ci?ci:bZ)*2.0-cB)*20.0/(cB*+((c[bK+1716+(cA<<2)>>2]|0)-1+(c[bK+1716+(cz<<2)>>2]|0)|0)));a[w+cz|0]=(b_|0)>8?8:b_&255}else{a[w+cz|0]=0}if(b1){b_=bK+2156|0;ce=b+27796+(bP<<2)|0;bY=0;cj=0;while(1){bZ=+g[bK+(bY<<2)>>2]*+g[a2>>2];co=c[bK+1204+(bY<<3)>>2]|0;cC=c[bK+1204+(bY<<3)+4>>2]|0;cD=c[6840+((d[w+bY|0]|0)<<2)>>2]|0;cG=d[w+co|0]|0;cH=c[b_>>2]|0;ci=+g[cH+(cj<<2)>>2]*+g[I+(bV<<8)+(co<<2)>>2]*+g[6880+(cG<<2)>>2];cI=cj+1|0;cJ=co+1|0;if((cJ|0)>(cC|0)){cK=ci;cL=cG;cM=2;cN=cI}else{b6=+g[12386];ch=+g[12388];cx=ci;co=cG;cG=1;cO=cI;cI=cJ;while(1){cJ=d[w+cI|0]|0;cP=cJ+co|0;cQ=cG+1|0;ci=+g[cH+(cO<<2)>>2]*+g[I+(bV<<8)+(cI<<2)>>2]*+g[6880+(cJ<<2)>>2];cJ=cI-bY|0;b$=cx<0.0?0.0:cx;cw=ci<0.0?0.0:ci;do{if(b$>0.0){if(cw<=0.0){cR=b$;break}cS=cw>b$;if(cS){cT=cw/b$}else{cT=b$/cw}if((((cJ|0)>-1?cJ:-cJ|0)|0)>(cD|0)){if(cT<b6){cR=b$+cw;break}else{cR=cS?cw:b$;break}}else{if(cT<ch){cS=(g[k>>2]=cT,c[k>>2]|0);ci=+(cS&16383|0)*6103515625.0e-14;cU=cS>>>14&511;cR=(b$+cw)*+g[5192+(~~((+((cS>>>23&255)-127|0)+((1.0-ci)*+g[49560+(cU<<2)>>2]+ci*+g[49560+(cU+1<<2)>>2]))*4.816479930623698)<<2)>>2];break}else{cR=b$+cw;break}}}else{cR=cw}}while(0);cV=cO+1|0;cJ=cI+1|0;if((cJ|0)>(cC|0)){break}else{cx=cR;co=cP;cG=cQ;cO=cV;cI=cJ}}cK=cR;cL=cP;cM=cQ<<1;cN=cV}cx=+g[6880+(((cL<<1|1|0)/(cM|0)&-1)<<2)>>2]*.5;ch=cK*cx;cI=c[ce>>2]|0;do{if((cI|0)==2){b6=+g[b+21564+(bV<<8)+(bY<<2)>>2];cw=b6*2.0;if(cw>0.0){b$=ch<cw?ch:cw;g[J+(bV<<8)+(bY<<2)>>2]=b$;cW=b6;cX=b$;break}else{b$=ch;cw=+g[I+(bV<<8)+(bY<<2)>>2]*.3;ci=b$<cw?b$:cw;g[J+(bV<<8)+(bY<<2)>>2]=ci;cW=b6;cX=ci;break}}else{ci=+g[b+22588+(bV<<8)+(bY<<2)>>2]*16.0;b6=+g[b+21564+(bV<<8)+(bY<<2)>>2];cw=b6*2.0;b$=ci>0.0?ci:ch;ci=cw>0.0?cw:ch;if((cI|0)==0){cY=ci<b$?ci:b$}else{cY=ci}ci=ch<cY?ch:cY;g[J+(bV<<8)+(bY<<2)>>2]=ci;cW=b6;cX=ci}}while(0);g[b+22588+(bV<<8)+(bY<<2)>>2]=cW;g[b+21564+(bV<<8)+(bY<<2)>>2]=ch;ci=cx*+g[u+(bY<<2)>>2]*+g[bK+256+(bY<<2)>>2];cI=J+(bV<<8)+(bY<<2)|0;if(cX>ci){g[cI>>2]=ci;cZ=ci}else{cZ=cX}if(bZ>1.0){ci=bZ*cZ;g[cI>>2]=ci;c_=ci}else{c_=cZ}ci=+g[I+(bV<<8)+(bY<<2)>>2];if(c_>ci){g[cI>>2]=ci;c$=ci}else{c$=c_}if(bZ<1.0){g[cI>>2]=bZ*c$}c0=bY+1|0;if((c0|0)<(c[bW>>2]|0)){bY=c0;cj=cN}else{break}}if((c0|0)<64){c1=c0;b8=291}}else{c1=0;b8=291}if((b8|0)==291){b8=0;cj=c1+1|0;bY=((cj|0)>64?cj:64)-c1<<2;cE(I+(bV<<8)+(c1<<2)|0,0,bY|0);cE(J+(bV<<8)+(c1<<2)|0,0,bY|0)}bV=bV+1|0;}while((bV|0)<(bT|0))}do{if((c[ai>>2]|0)==1){if(((c[au>>2]|0)+(c[aq>>2]|0)|0)!=2){break}bM(al,a7,bL+768|0,(c[ag>>2]|0)+212|0,bR,+g[ah>>2],c[bL+2148>>2]|0)}}while(0);if(bS){bV=0;do{bY=I+(bV<<8)|0;cj=J+(bV<<8)|0;bN(c[ak>>2]|0,bY,cj,b+26636+(bV*244&-1)|0,b+25660+(bV*244&-1)|0);bN((c[ak>>2]|0)+4320|0,bY,cj,a8,ba);cj=0;do{b0=+g[x+(cj<<2)>>2];ci=+g[y+(cj<<2)>>2]*.015625;g[b+26636+(bV*244&-1)+88+(cj*12&-1)>>2]=b0;g[b+25660+(bV*244&-1)+88+(cj*12&-1)>>2]=ci;g[b+26636+(bV*244&-1)+88+(cj*12&-1)+4>>2]=b0;g[b+25660+(bV*244&-1)+88+(cj*12&-1)+4>>2]=ci;g[b+26636+(bV*244&-1)+88+(cj*12&-1)+8>>2]=b0;g[b+25660+(bV*244&-1)+88+(cj*12&-1)+8>>2]=ci;cj=cj+1|0;}while((cj|0)<13);bV=bV+1|0;}while((bV|0)<(bT|0))}bV=c[aq>>2]|0;cj=bL+2928|0;bY=bL+4308|0;bW=(c[(c[ak>>2]|0)+6500>>2]|0)==0;bK=(bV|0)!=(-(c[au>>2]|0)|0);ce=0;do{if(bS){b_=(ce|0)==0;bP=F+(ce*516&-1)|0;b1=0;do{bX=b1&1;do{if((c[M+(bX<<2)>>2]|0)!=0&bW){if(!b_){break}cg=c[(c[ak>>2]|0)+4308>>2]|0;if((cg|0)>0){c2=0}else{break}do{g[b+24636+(b1<<8)+(c2<<2)>>2]=+g[b+23612+(b1<<8)+(c2<<2)>>2];c2=c2+1|0;}while((c2|0)<(cg|0))}else{if(b_&(b1|0)<2){cg=an+(b1<<2)|0;cI=0;cO=H+(bX*3072&-1)|0;while(1){cG=cI+1|0;co=(_(cG,12582912)|0)>>16;cC=31;cD=H+(bX*3072&-1)+(cI<<10)+512|0;while(1){cH=d[13920+(cC<<2)|0]|0;cf=cH+co|0;cJ=c[cg>>2]|0;ci=+g[8+(cH<<2)>>2]*+g[cJ+(cf<<2)>>2];b0=+g[8+(127-cH<<2)>>2]*+g[cJ+(cf+128<<2)>>2];b6=ci-b0;b$=ci+b0;b0=+g[8+(cH+64<<2)>>2]*+g[cJ+(cf+64<<2)>>2];ci=+g[8+(63-cH<<2)>>2]*+g[cJ+(cf+192<<2)>>2];cw=b0-ci;c3=b0+ci;cJ=cD-16|0;g[cJ>>2]=b$+c3;g[cD-8>>2]=b$-c3;g[cD-12>>2]=b6+cw;g[cD-4>>2]=b6-cw;cU=c[cg>>2]|0;cw=+g[8+(cH+1<<2)>>2]*+g[cU+(cf+1<<2)>>2];b6=+g[8+(126-cH<<2)>>2]*+g[cU+(cf+129<<2)>>2];c3=cw-b6;b$=cw+b6;b6=+g[8+(cH+65<<2)>>2]*+g[cU+(cf+65<<2)>>2];cw=+g[8+(62-cH<<2)>>2]*+g[cU+(cf+193<<2)>>2];ci=b6-cw;b0=b6+cw;g[cD+496>>2]=b$+b0;g[cD+504>>2]=b$-b0;g[cD+500>>2]=c3+ci;g[cD+508>>2]=c3-ci;if((cC|0)<=0){break}cC=cC-1|0;cD=cJ}a4[c[a6>>2]&7](cO|0,128);if((cG|0)<3){cI=cG;cO=cO+1024|0}else{break}}}if((b1|0)==2){cO=bX+1|0;cI=255;while(1){cg=H+(bX*3072&-1)+(ce<<10)+(cI<<2)|0;ci=+g[cg>>2];cD=H+(cO*3072&-1)+(ce<<10)+(cI<<2)|0;c3=+g[cD>>2];g[cg>>2]=(ci+c3)*.7071067690849304;g[cD>>2]=(ci-c3)*.7071067690849304;if((cI|0)>0){cI=cI-1|0}else{break}}}c3=+g[H+(bX*3072&-1)+(ce<<10)>>2];g[bP>>2]=c3*c3;cI=127;while(1){cO=128-cI|0;c3=+g[H+(bX*3072&-1)+(ce<<10)+(cO<<2)>>2];ci=+g[H+(bX*3072&-1)+(ce<<10)+(cI+128<<2)>>2];g[F+(ce*516&-1)+(cO<<2)>>2]=(c3*c3+ci*ci)*.5;if((cI|0)>0){cI=cI-1|0}else{break}}cI=c[ak>>2]|0;cE(aY|0,0,256);cE(aZ|0,0,256);cO=cI+4308|0;cD=c[cO>>2]|0;cg=(cD|0)>0;if(cg){cC=0;co=0;while(1){cJ=c[cI+3876+(cC<<2)>>2]|0;if((cJ|0)>0){ci=0.0;c3=0.0;cf=co;cU=0;while(1){b0=+g[F+(ce*516&-1)+(cf<<2)>>2];c4=c3+b0;c5=ci<b0?b0:ci;cH=cU+1|0;if((cH|0)<(cJ|0)){ci=c5;c3=c4;cf=cf+1|0;cU=cH}else{break}}c6=c5;c7=c4;c8=cJ+co|0}else{c6=0.0;c7=0.0;c8=co}g[I+(b1<<8)+(cC<<2)>>2]=c7;g[u+(cC<<2)>>2]=c6;g[v+(cC<<2)>>2]=c7*+g[cI+2672+(cC<<2)>>2];cU=cC+1|0;if((cU|0)<(cD|0)){cC=cU;co=c8}else{break}}c9=+g[a0>>2];da=+g[a3>>2]}else{c9=0.0;da=0.0}c3=da+c9;if(c3>0.0){ci=+g[a$>>2];b0=+g[a1>>2];co=~~(((ci<b0?b0:ci)*2.0-c3)*20.0/(c3*+((c[cI+3876>>2]|0)-1+(c[cI+3880>>2]|0)|0)));db=(co|0)>8?8:co&255}else{db=0}a[bE]=db;co=cD-1|0;if((co|0)>1){cC=(co|0)>2;cU=1;cf=0;ci=c3;b0=da;while(1){cG=cU+1|0;b$=+g[v+(cG<<2)>>2];cw=ci+b$;if(cw>0.0){b6=+g[u+(cf<<2)>>2];dc=+g[u+(cU<<2)>>2];dd=b6<dc?dc:b6;b6=+g[u+(cG<<2)>>2];cH=~~(((dd<b6?b6:dd)*3.0-cw)*20.0/(cw*+((c[cI+3876+(cf<<2)>>2]|0)-1+(c[cI+3876+(cU<<2)>>2]|0)+(c[cI+3876+(cG<<2)>>2]|0)|0)));a[s+cU|0]=(cH|0)>8?8:cH&255}else{a[s+cU|0]=0}de=b0+b$;if((cG|0)<(co|0)){cf=cU;cU=cG;ci=de;b0=b$}else{break}}cU=cC?co:2;df=cU;dg=cU-1|0;dh=de}else{df=1;dg=0;dh=c3}if(dh>0.0){b0=+g[u+(dg<<2)>>2];ci=+g[u+(df<<2)>>2];cU=~~(((b0<ci?ci:b0)*2.0-dh)*20.0/(dh*+((c[cI+3876+(dg<<2)>>2]|0)-1+(c[cI+3876+(df<<2)>>2]|0)|0)));a[s+df|0]=(cU|0)>8?8:cU&255}else{a[s+df|0]=0}if(cg){cU=cI+4316|0;cf=0;cD=0;while(1){cG=c[cI+3364+(cf<<3)>>2]|0;cH=c[cI+3364+(cf<<3)+4>>2]|0;cS=c[6840+((d[s+cf|0]|0)<<2)>>2]|0;b0=+g[cI+2160+(cf<<2)>>2]*+g[a2>>2];di=d[s+cG|0]|0;dj=c[cU>>2]|0;ci=+g[dj+(cD<<2)>>2]*+g[I+(b1<<8)+(cG<<2)>>2]*+g[6880+(di<<2)>>2];dk=cD+1|0;dl=cG+1|0;if((dl|0)>(cH|0)){dm=di;dn=2;dp=ci;dq=dk}else{b$=+g[12386];cw=+g[12388];cG=di;di=1;dd=ci;dr=dk;dk=dl;while(1){dl=d[s+dk|0]|0;ds=dl+cG|0;dt=di+1|0;ci=+g[dj+(dr<<2)>>2]*+g[I+(b1<<8)+(dk<<2)>>2]*+g[6880+(dl<<2)>>2];dl=dk-cf|0;b6=dd<0.0?0.0:dd;dc=ci<0.0?0.0:ci;do{if(b6>0.0){if(dc<=0.0){du=b6;break}dv=dc>b6;if(dv){dw=dc/b6}else{dw=b6/dc}if((((dl|0)>-1?dl:-dl|0)|0)>(cS|0)){if(dw<b$){du=b6+dc;break}else{du=dv?dc:b6;break}}else{if(dw<cw){dv=(g[k>>2]=dw,c[k>>2]|0);ci=+(dv&16383|0)*6103515625.0e-14;dx=dv>>>14&511;du=(b6+dc)*+g[5192+(~~((+((dv>>>23&255)-127|0)+((1.0-ci)*+g[49560+(dx<<2)>>2]+ci*+g[49560+(dx+1<<2)>>2]))*4.816479930623698)<<2)>>2];break}else{du=b6+dc;break}}}else{du=dc}}while(0);dy=dr+1|0;dl=dk+1|0;if((dl|0)>(cH|0)){break}else{cG=ds;di=dt;dd=du;dr=dy;dk=dl}}dm=ds;dn=dt<<1;dp=du;dq=dy}dd=+g[6880+(((dm<<1|1|0)/(dn|0)&-1)<<2)>>2]*.5;cw=dp*dd;dk=J+(b1<<8)+(cf<<2)|0;g[dk>>2]=cw;dr=b+23612+(b1<<8)+(cf<<2)|0;g[b+24636+(b1<<8)+(cf<<2)>>2]=+g[dr>>2];g[dr>>2]=cw;b$=dd*+g[u+(cf<<2)>>2]*+g[cI+2416+(cf<<2)>>2];if(cw>b$){g[dk>>2]=b$;dz=b$}else{dz=cw}if(b0>1.0){cw=b0*dz;g[dk>>2]=cw;dA=cw}else{dA=dz}cw=+g[I+(b1<<8)+(cf<<2)>>2];if(dA>cw){g[dk>>2]=cw;dB=cw}else{dB=dA}if(b0<1.0){g[dk>>2]=b0*dB}dC=cf+1|0;if((dC|0)<(c[cO>>2]|0)){cf=dC;cD=dq}else{break}}if((dC|0)<64){dD=dC}else{break}}else{dD=0}cD=dD+1|0;cf=((cD|0)>64?cD:64)-dD<<2;cE(I+(b1<<8)+(dD<<2)|0,0,cf|0);cE(J+(b1<<8)+(dD<<2)|0,0,cf|0)}}while(0);b1=b1+1|0;}while((b1|0)<(bT|0))}if(!((c[ai>>2]|0)!=1|bK)){bM(al,a7,cj,(c[ag>>2]|0)+468|0,bR,+g[ah>>2],c[bY>>2]|0)}if(bS){b1=0;do{if(!((c[M+((b1&1)<<2)>>2]|0)!=0&bW)){bN((c[ak>>2]|0)+2160|0,I+(b1<<8)|0,J+(b1<<8)|0,a8,ba);g[b+26636+(b1*244&-1)+88+(ce<<2)>>2]=+g[a8>>2];g[b+25660+(b1*244&-1)+88+(ce<<2)>>2]=+g[ba>>2];g[b+26636+(b1*244&-1)+100+(ce<<2)>>2]=+g[bb>>2];g[b+25660+(b1*244&-1)+100+(ce<<2)>>2]=+g[bc>>2];g[b+26636+(b1*244&-1)+112+(ce<<2)>>2]=+g[bd>>2];g[b+25660+(b1*244&-1)+112+(ce<<2)>>2]=+g[be>>2];g[b+26636+(b1*244&-1)+124+(ce<<2)>>2]=+g[bf>>2];g[b+25660+(b1*244&-1)+124+(ce<<2)>>2]=+g[bg>>2];g[b+26636+(b1*244&-1)+136+(ce<<2)>>2]=+g[bh>>2];g[b+25660+(b1*244&-1)+136+(ce<<2)>>2]=+g[bi>>2];g[b+26636+(b1*244&-1)+148+(ce<<2)>>2]=+g[bj>>2];g[b+25660+(b1*244&-1)+148+(ce<<2)>>2]=+g[bk>>2];g[b+26636+(b1*244&-1)+160+(ce<<2)>>2]=+g[bl>>2];g[b+25660+(b1*244&-1)+160+(ce<<2)>>2]=+g[bm>>2];g[b+26636+(b1*244&-1)+172+(ce<<2)>>2]=+g[bn>>2];g[b+25660+(b1*244&-1)+172+(ce<<2)>>2]=+g[bo>>2];g[b+26636+(b1*244&-1)+184+(ce<<2)>>2]=+g[bp>>2];g[b+25660+(b1*244&-1)+184+(ce<<2)>>2]=+g[bv>>2];g[b+26636+(b1*244&-1)+196+(ce<<2)>>2]=+g[bw>>2];g[b+25660+(b1*244&-1)+196+(ce<<2)>>2]=+g[bx>>2];g[b+26636+(b1*244&-1)+208+(ce<<2)>>2]=+g[by>>2];g[b+25660+(b1*244&-1)+208+(ce<<2)>>2]=+g[bz>>2];g[b+26636+(b1*244&-1)+220+(ce<<2)>>2]=+g[bA>>2];g[b+25660+(b1*244&-1)+220+(ce<<2)>>2]=+g[bB>>2];g[b+26636+(b1*244&-1)+232+(ce<<2)>>2]=+g[bC>>2];g[b+25660+(b1*244&-1)+232+(ce<<2)>>2]=+g[bD>>2]}b1=b1+1|0;}while((b1|0)<(bT|0))}ce=ce+1|0;}while((ce|0)<3);if(bS){ce=0;while(1){bW=b+27780+(ce<<2)|0;bY=0;do{cj=b+25660+(ce*244&-1)+88+(bY*12&-1)|0;bK=D+(ce*244&-1)+88+(bY*12&-1)+4|0;bL=D+(ce*244&-1)+88+(bY*12&-1)+8|0;b1=0;do{bZ=+g[b+25660+(ce*244&-1)+88+(bY*12&-1)+(b1<<2)>>2]*.8;bP=(b1|0)>0;if(bP){dE=O+(b1-1<<2)|0}else{dE=bL}cx=+g[dE>>2];b_=c[L+(ce<<4)+(b1<<2)>>2]|0;if((b_|0)>1){b8=412}else{if((c[L+(ce<<4)+(b1+1<<2)>>2]|0)==1){b8=412}else{dF=bZ}}do{if((b8|0)==412){b8=0;if(bZ<=0.0){dF=0.0;break}dF=bZ*+P(+(cx/bZ),.36000001430511475)}}while(0);ch=dF<bZ?dF:bZ;L612:do{if((b_|0)==1){if(ch<=0.0){dG=0.0;break}dG=ch*+P(+(cx/ch),.18000000715255737)}else{if((b1|0)==0){if((c[bW>>2]|0)==3){b8=422}else{b8=419}}else{b8=419}do{if((b8|0)==419){b8=0;if(!bP){dG=bZ;break L612}if((c[L+(ce<<4)+(b1-1<<2)>>2]|0)!=3){dG=bZ;break L612}if((b1|0)==0){b8=422;break}else if((b1|0)==1){dH=+g[bL>>2];break}else if((b1|0)==2){dH=+g[bF>>2];break}else{dH=cx;break}}}while(0);if((b8|0)==422){b8=0;dH=+g[bK>>2]}if(ch<=0.0){dG=0.0;break}dG=ch*+P(+(dH/ch),.18000000715255737)}}while(0);g[O+(b1<<2)>>2]=+g[K+(ce*12&-1)+(b1<<2)>>2]*(dG<ch?dG:ch);b1=b1+1|0;}while((b1|0)<3);c[cj>>2]=c[am>>2];c[cj+4>>2]=c[am+4>>2];c[cj+8>>2]=c[am+8>>2];bY=bY+1|0;}while((bY|0)<13);bY=ce+1|0;if((bY|0)<(bT|0)){ce=bY}else{dI=0;break}}do{c[b+27780+(dI<<2)>>2]=c[L+(dI<<4)+8>>2];dI=dI+1|0;}while((dI|0)<(bT|0))}ce=c[ad>>2]|0;L635:do{if((ce|0)>0){bY=0;bW=bV;while(1){b1=b+27796+(bY<<2)|0;bK=c[b1>>2]|0;do{if((bW|0)==0){if((bK|0)==0){c[b1>>2]=1;dJ=2;dK=1;break}else if((bK|0)==3){c[b1>>2]=2;dJ=2;dK=2;break}else{dJ=2;dK=bK;break}}else{dJ=(bK|0)==2?3:0;dK=bK}}while(0);c[ab+(bY<<2)>>2]=dK;c[b1>>2]=dJ;bK=bY+1|0;if((bK|0)>=(ce|0)){break L635}bY=bK;bW=c[M+(bK<<2)>>2]|0}}}while(0);if(bS){ce=Z+(bI<<3)-8|0;bV=(bQ|0)==0;bW=(c[$>>2]|0)==2;bY=(c[bG>>2]|0)==2;bK=0;do{if((bK|0)>1){dL=T+(bI*976&-1)+((bK-2|0)*488&-1)|0;dM=bW|bY?2:0;dN=ce}else{dL=S+(bI*976&-1)+(bK*488&-1)|0;dM=c[ab+(bK<<2)>>2]|0;dN=bO}cx=+g[a2>>2];if((dM|0)==2){cj=0;bZ=309.07000732421875;while(1){bL=48512+(cj<<2)|0;b0=+g[dL+88+(cj*12&-1)>>2];do{if(b0>0.0){c3=cx*b0;cw=+g[dL+332+(cj*12&-1)>>2];if(cw<=c3){dO=bZ;break}b$=+g[bL>>2];if(cw>c3*1.0e10){dO=bZ+b$*23.02585092994046;break}else{bP=(g[k>>2]=cw/c3,c[k>>2]|0);c3=+(bP&16383|0)*6103515625.0e-14;b_=bP>>>14&511;dO=bZ+b$*(+((bP>>>23&255)-127|0)+(+g[49560+(b_+1<<2)>>2]*c3+ +g[49560+(b_<<2)>>2]*(1.0-c3)))*.30102999566398114;break}}else{dO=bZ}}while(0);b0=+g[dL+88+(cj*12&-1)+4>>2];do{if(b0>0.0){c3=cx*b0;b$=+g[dL+332+(cj*12&-1)+4>>2];if(b$<=c3){dP=dO;break}cw=+g[bL>>2];if(b$>c3*1.0e10){dP=dO+cw*23.02585092994046;break}else{b1=(g[k>>2]=b$/c3,c[k>>2]|0);c3=+(b1&16383|0)*6103515625.0e-14;b_=b1>>>14&511;dP=dO+cw*(+((b1>>>23&255)-127|0)+(+g[49560+(b_+1<<2)>>2]*c3+ +g[49560+(b_<<2)>>2]*(1.0-c3)))*.30102999566398114;break}}else{dP=dO}}while(0);b0=+g[dL+88+(cj*12&-1)+8>>2];do{if(b0>0.0){c3=cx*b0;cw=+g[dL+332+(cj*12&-1)+8>>2];if(cw<=c3){dQ=dP;break}b$=+g[bL>>2];if(cw>c3*1.0e10){dQ=dP+b$*23.02585092994046;break}else{b_=(g[k>>2]=cw/c3,c[k>>2]|0);c3=+(b_&16383|0)*6103515625.0e-14;b1=b_>>>14&511;dQ=dP+b$*(+((b_>>>23&255)-127|0)+(+g[49560+(b1+1<<2)>>2]*c3+ +g[49560+(b1<<2)>>2]*(1.0-c3)))*.30102999566398114;break}}else{dQ=dP}}while(0);bL=cj+1|0;if(bL>>>0<12){cj=bL;bZ=dQ}else{break}}g[dN+(bK<<2)>>2]=dQ;dR=dQ}else{cj=0;bZ=281.0574951171875;while(1){b0=+g[dL+(cj<<2)>>2];do{if(b0>0.0){c3=cx*b0;b$=+g[dL+244+(cj<<2)>>2];if(b$<=c3){dS=bZ;break}cw=+g[48560+(cj<<2)>>2];if(b$>c3*1.0e10){dS=bZ+cw*23.02585092994046;break}else{bL=(g[k>>2]=b$/c3,c[k>>2]|0);c3=+(bL&16383|0)*6103515625.0e-14;b1=bL>>>14&511;dS=bZ+cw*(+((bL>>>23&255)-127|0)+(+g[49560+(b1+1<<2)>>2]*c3+ +g[49560+(b1<<2)>>2]*(1.0-c3)))*.30102999566398114;break}}else{dS=bZ}}while(0);b1=cj+1|0;if(b1>>>0<21){cj=b1;bZ=dS}else{break}}g[dN+(bK<<2)>>2]=dS;dR=dS}if(!bV){h[bQ+189240+(bI<<5)+(bK<<3)>>3]=dR}bK=bK+1|0;}while((bK|0)<(bT|0))}do{if((c[ai>>2]|0)==1){bZ=+g[V+(bI<<4)+12>>2];cx=+g[V+(bI<<4)+8>>2]+bZ;bT=X+(bI<<2)|0;g[bT>>2]=cx;if(cx<=0.0){break}g[bT>>2]=bZ/cx}}while(0);bT=c[ad>>2]|0;if((bT|0)>0){bK=0;while(1){c[b+304+(bI*10504&-1)+(bK*5252&-1)+4788>>2]=c[ab+(bK<<2)>>2];c[b+304+(bI*10504&-1)+(bK*5252&-1)+4792>>2]=0;bV=bK+1|0;bO=c[ad>>2]|0;if((bV|0)<(bO|0)){bK=bV}else{dT=bO;break}}}else{dT=bT}bK=bI+1|0;bO=c[ao>>2]|0;if((bK|0)<(bO|0)){bI=bK;bJ=dT}else{dU=bO;dV=ag;break}}}else{dU=Q;dV=b+85796|0}Q=c[dV>>2]|0;do{if((c[Q>>2]|0)==0){g[Q+8>>2]=1.0}else{dR=+g[b+27804>>2];dS=+g[b+27812>>2];if((c[b+72>>2]|0)==2){dW=+g[b+27816>>2];dX=+g[b+27808>>2]}else{dW=dS;dX=dR}dQ=dS+dW;dS=dR+dX;if((dU|0)==2){dY=dS>dQ?dS:dQ}else{dY=dS}dS=dY*.5*+g[Q+4>>2];if(dS>.03125){ag=Q+8|0;dQ=+g[ag>>2];do{if(dQ<1.0){dR=+g[Q+12>>2];if(dQ>=dR){break}g[ag>>2]=dR}else{g[ag>>2]=1.0}}while(0);g[(c[dV>>2]|0)+12>>2]=1.0;break}dQ=dS*31.98+625.0e-6;ag=Q+8|0;dR=+g[ag>>2];do{if(dR<dQ){dP=+g[Q+12>>2];if(dP>=dQ){g[ag>>2]=dQ;break}if(dR>=dP){break}g[ag>>2]=dP}else{g[ag>>2]=(dQ*.075+.925)*dR;bT=(c[dV>>2]|0)+8|0;if(+g[bT>>2]>=dQ){break}g[bT>>2]=dQ}}while(0);g[(c[dV>>2]|0)+12>>2]=dQ}}while(0);bH(b,c[ac>>2]|0,f);f=b+84756|0;c[f>>2]=0;do{if((c[b+80>>2]|0)==0){if((c[b+180>>2]|0)!=1){dZ=0;break}ac=c[ao>>2]|0;if((ac|0)>0){Q=c[b+72>>2]|0;dU=(Q|0)>0;ag=0;dY=0.0;dX=0.0;while(1){if(dU){bT=0;dW=dY;dR=dX;while(1){dS=dW+ +g[Z+(ag<<3)+(bT<<2)>>2];dP=dR+ +g[Y+(ag<<3)+(bT<<2)>>2];dT=bT+1|0;if((dT|0)<(Q|0)){bT=dT;dW=dS;dR=dP}else{d_=dS;d$=dP;break}}}else{d_=dY;d$=dX}bT=ag+1|0;if((bT|0)<(ac|0)){ag=bT;dY=d_;dX=d$}else{break}}if(d_>d$){dZ=0;break}}ag=ac-1|0;if((c[b+5092>>2]|0)!=(c[b+10344>>2]|0)){dZ=0;break}if((c[b+304+(ag*10504&-1)+4788>>2]|0)!=(c[b+304+(ag*10504&-1)+10040>>2]|0)){dZ=0;break}c[f>>2]=2;dZ=1}else{c[f>>2]=2;dZ=1}}while(0);ag=dZ?T:S;S=dZ?Z:Y;Y=ag|0;Z=S|0;dZ=b+140|0;do{if((c[dZ>>2]|0)!=0){T=b+85804|0;if((c[T>>2]|0)==0){break}Q=c[ao>>2]|0;if((Q|0)<=0){break}dU=b+72|0;bT=0;dT=c[dU>>2]|0;bJ=Q;while(1){if((dT|0)>0){Q=X+(bT<<2)|0;bI=0;do{h[(c[T>>2]|0)+90904+(bT<<3)>>3]=0.0;h[(c[T>>2]|0)+90920+(bT<<3)>>3]=+g[Q>>2];c[(c[T>>2]|0)+203288+(bT<<3)+(bI<<2)>>2]=c[b+304+(bT*10504&-1)+(bI*5252&-1)+4788>>2];h[(c[T>>2]|0)+189240+(bT<<5)+(bI<<3)>>3]=+g[S+(bT<<3)+(bI<<2)>>2];ad=(c[T>>2]|0)+54040+(bT*9216&-1)+(bI*4608&-1)|0;ab=b+304+(bT*10504&-1)+(bI*5252&-1)|0;cF(ad|0,ab|0,2304)|0;if((c[f>>2]|0)==2){ab=bI+2|0;ad=c[T>>2]|0;h[ad+197144+(bT<<5)+(bI<<3)>>3]=+h[ad+197144+(bT<<5)+(ab<<3)>>3];ad=c[T>>2]|0;V=ad+123704+(bT<<15)+(bI<<13)|0;ai=ad+123704+(bT<<15)+(ab<<13)|0;cF(V|0,ai|0,8192)|0}bI=bI+1|0;d0=c[dU>>2]|0;}while((bI|0)<(d0|0));d1=d0;d2=c[ao>>2]|0}else{d1=dT;d2=bJ}bI=bT+1|0;if((bI|0)<(d2|0)){bT=bI;dT=d1;bJ=d2}else{break}}}}while(0);d2=c[b+104>>2]|0;do{if((d2|0)==0|(d2|0)==3){d1=b+39760|0;d$=+g[d1>>2];g[b+39756>>2]=d$;d0=b+39764|0;d_=+g[d0>>2];g[d1>>2]=d_;d1=b+39768|0;dX=+g[d1>>2];g[d0>>2]=dX;d0=b+39772|0;dY=+g[d0>>2];g[d1>>2]=dY;d1=b+39776|0;dQ=+g[d1>>2];g[d0>>2]=dQ;d0=b+39780|0;dR=+g[d0>>2];g[d1>>2]=dR;d1=b+39784|0;dW=+g[d1>>2];g[d0>>2]=dW;d0=b+39788|0;dP=+g[d0>>2];g[d1>>2]=dP;d1=b+39792|0;dS=+g[d1>>2];g[d0>>2]=dS;d0=b+39796|0;dO=+g[d0>>2];g[d1>>2]=dO;d1=b+39800|0;dG=+g[d1>>2];g[d0>>2]=dG;d0=b+39804|0;dH=+g[d0>>2];g[d1>>2]=dH;d1=b+39808|0;dF=+g[d1>>2];g[d0>>2]=dF;d0=b+39812|0;bR=+g[d0>>2];g[d1>>2]=bR;d1=b+39816|0;dB=+g[d1>>2];g[d0>>2]=dB;d0=b+39820|0;dA=+g[d0>>2];g[d1>>2]=dA;d1=b+39824|0;dz=+g[d1>>2];g[d0>>2]=dz;d0=b+39828|0;dp=+g[d0>>2];g[d1>>2]=dp;d1=c[ao>>2]|0;X=(d1|0)>0;bJ=c[b+72>>2]|0;if(X){dT=(bJ|0)>0;bT=0;du=0.0;while(1){if(dT){dU=0;dw=du;while(1){dh=dw+ +g[S+(bT<<3)+(dU<<2)>>2];T=dU+1|0;if((T|0)<(bJ|0)){dU=T;dw=dh}else{d3=dh;break}}}else{d3=du}dU=bT+1|0;if((dU|0)<(d1|0)){bT=dU;du=d3}else{d4=d3;break}}}else{d4=0.0}g[d0>>2]=d4;du=+(_(d1*3350&-1,bJ)|0)/(dO+(d$+d4)*-.10394349694252014+(d_+dp)*-.18920649588108063+(dX+dz)*-.21623599529266357+(dY+dA)*-.1559150069952011+(dQ+dB)*3.8980449615198e-17+(dR+bR)*.23387250304222107+(dW+dF)*.5045499801635742+(dP+dH)*.7568249702453613+(dS+dG)*.9354900121688843);if(!X){break}bT=(bJ|0)>0;dT=0;do{if(bT){dU=0;do{T=S+(dT<<3)+(dU<<2)|0;g[T>>2]=du*+g[T>>2];dU=dU+1|0;}while((dU|0)<(bJ|0))}dT=dT+1|0;}while((dT|0)<(d1|0))}}while(0);a9[c[b+85812>>2]&15](b,Z,W,Y);Y=b+16|0;W=b+84744|0;Z=c[W>>2]|0;if((Z|0)==0){d5=b+120|0;d6=c[Y>>2]|0}else{S=c[Y>>2]|0;d5=66168+(S<<6)+(Z<<2)|0;d6=S}S=c[R>>2]|0;Z=b+64|0;Y=c[Z>>2]|0;d2=((_((d6*72e3&-1)+72e3|0,c[d5>>2]|0)|0)/(Y|0)&-1)+S<<3;S=b+21320|0;br(b,c[S>>2]|0);Y=b+52128|0;d5=c[Y>>2]|0;c[b+39840+(d5*48&-1)+4>>2]=0;d6=b+24|0;cE(b+39840+(d5*48&-1)+8|0,0,c[d6>>2]|0);d5=c[Y>>2]|0;d1=c[b+39840+(d5*48&-1)+4>>2]|0;if((c[Z>>2]|0)<16e3){Z=d1;dT=12;bJ=d5;do{bT=8-(Z&7)|0;X=(dT|0)<(bT|0)?dT:bT;dT=dT-X|0;d0=(Z>>3)+(b+39840+(bJ*48&-1)+8)|0;a[d0]=(4094>>>(dT>>>0)<<bT-X|(d[d0]|0))&255;Z=X+Z|0;bJ=c[Y>>2]|0}while((dT|0)>0);c[b+39840+(bJ*48&-1)+4>>2]=Z;d7=bJ;d8=Z}else{Z=d1;d1=12;bJ=d5;do{d5=8-(Z&7)|0;dT=(d1|0)<(d5|0)?d1:d5;d1=d1-dT|0;X=(Z>>3)+(b+39840+(bJ*48&-1)+8)|0;a[X]=(4095>>>(d1>>>0)<<d5-dT|(d[X]|0))&255;Z=dT+Z|0;bJ=c[Y>>2]|0}while((d1|0)>0);c[b+39840+(bJ*48&-1)+4>>2]=Z;d7=bJ;d8=Z}Z=b+16|0;bJ=c[Z>>2]|0;d1=d8;d8=1;dT=d7;do{d7=8-(d1&7)|0;X=(d8|0)<(d7|0)?d8:d7;d8=d8-X|0;d5=(d1>>3)+(b+39840+(dT*48&-1)+8)|0;a[d5]=(bJ>>d8<<d7-X|(d[d5]|0))&255;d1=X+d1|0;dT=c[Y>>2]|0}while((d8|0)>0);c[b+39840+(dT*48&-1)+4>>2]=d1;d8=d1;d1=2;bJ=dT;do{dT=8-(d8&7)|0;X=(d1|0)<(dT|0)?d1:dT;d1=d1-X|0;d5=(d8>>3)+(b+39840+(bJ*48&-1)+8)|0;a[d5]=(1>>>(d1>>>0)<<dT-X|(d[d5]|0))&255;d8=X+d8|0;bJ=c[Y>>2]|0}while((d1|0)>0);c[b+39840+(bJ*48&-1)+4>>2]=d8;d1=b+160|0;X=(c[d1>>2]|0)==0&1;d5=d8;d8=1;dT=bJ;do{bJ=8-(d5&7)|0;d7=(d8|0)<(bJ|0)?d8:bJ;d8=d8-d7|0;d0=(d5>>3)+(b+39840+(dT*48&-1)+8)|0;a[d0]=(X>>>(d8>>>0)<<bJ-d7|(d[d0]|0))&255;d5=d7+d5|0;dT=c[Y>>2]|0}while((d8|0)>0);c[b+39840+(dT*48&-1)+4>>2]=d5;d8=c[W>>2]|0;X=d5;d5=4;d7=dT;do{dT=8-(X&7)|0;d0=(d5|0)<(dT|0)?d5:dT;d5=d5-d0|0;bJ=(X>>3)+(b+39840+(d7*48&-1)+8)|0;a[bJ]=(d8>>d5<<dT-d0|(d[bJ]|0))&255;X=d0+X|0;d7=c[Y>>2]|0}while((d5|0)>0);c[b+39840+(d7*48&-1)+4>>2]=X;d5=c[b+20>>2]|0;d8=X;X=2;d0=d7;do{d7=8-(d8&7)|0;bJ=(X|0)<(d7|0)?X:d7;X=X-bJ|0;dT=(d8>>3)+(b+39840+(d0*48&-1)+8)|0;a[dT]=(d5>>X<<d7-bJ|(d[dT]|0))&255;d8=bJ+d8|0;d0=c[Y>>2]|0}while((X|0)>0);c[b+39840+(d0*48&-1)+4>>2]=d8;X=c[R>>2]|0;R=d8;d8=1;d5=d0;do{d0=8-(R&7)|0;bJ=(d8|0)<(d0|0)?d8:d0;d8=d8-bJ|0;dT=(R>>3)+(b+39840+(d5*48&-1)+8)|0;a[dT]=(X>>d8<<d0-bJ|(d[dT]|0))&255;R=bJ+R|0;d5=c[Y>>2]|0}while((d8|0)>0);c[b+39840+(d5*48&-1)+4>>2]=R;d8=c[b+172>>2]|0;X=R;R=1;bJ=d5;do{d5=8-(X&7)|0;dT=(R|0)<(d5|0)?R:d5;R=R-dT|0;d0=(X>>3)+(b+39840+(bJ*48&-1)+8)|0;a[d0]=(d8>>R<<d5-dT|(d[d0]|0))&255;X=dT+X|0;bJ=c[Y>>2]|0}while((R|0)>0);c[b+39840+(bJ*48&-1)+4>>2]=X;R=c[b+180>>2]|0;d8=X;X=2;dT=bJ;do{bJ=8-(d8&7)|0;d0=(X|0)<(bJ|0)?X:bJ;X=X-d0|0;d5=(d8>>3)+(b+39840+(dT*48&-1)+8)|0;a[d5]=(R>>X<<bJ-d0|(d[d5]|0))&255;d8=d0+d8|0;dT=c[Y>>2]|0}while((X|0)>0);c[b+39840+(dT*48&-1)+4>>2]=d8;X=c[f>>2]|0;R=d8;d8=2;d0=dT;do{dT=8-(R&7)|0;d5=(d8|0)<(dT|0)?d8:dT;d8=d8-d5|0;bJ=(R>>3)+(b+39840+(d0*48&-1)+8)|0;a[bJ]=(X>>d8<<dT-d5|(d[bJ]|0))&255;R=d5+R|0;d0=c[Y>>2]|0}while((d8|0)>0);c[b+39840+(d0*48&-1)+4>>2]=R;d8=c[b+164>>2]|0;X=R;R=1;d5=d0;do{d0=8-(X&7)|0;bJ=(R|0)<(d0|0)?R:d0;R=R-bJ|0;dT=(X>>3)+(b+39840+(d5*48&-1)+8)|0;a[dT]=(d8>>R<<d0-bJ|(d[dT]|0))&255;X=bJ+X|0;d5=c[Y>>2]|0}while((R|0)>0);c[b+39840+(d5*48&-1)+4>>2]=X;R=c[b+168>>2]|0;d8=X;X=1;bJ=d5;do{d5=8-(d8&7)|0;dT=(X|0)<(d5|0)?X:d5;X=X-dT|0;d0=(d8>>3)+(b+39840+(bJ*48&-1)+8)|0;a[d0]=(R>>X<<d5-dT|(d[d0]|0))&255;d8=dT+d8|0;bJ=c[Y>>2]|0}while((X|0)>0);c[b+39840+(bJ*48&-1)+4>>2]=d8;X=c[b+176>>2]|0;R=d8;d8=2;dT=bJ;do{bJ=8-(R&7)|0;d0=(d8|0)<(bJ|0)?d8:bJ;d8=d8-d0|0;d5=(R>>3)+(b+39840+(dT*48&-1)+8)|0;a[d5]=(X>>d8<<bJ-d0|(d[d5]|0))&255;R=d0+R|0;dT=c[Y>>2]|0}while((d8|0)>0);d8=b+39840+(dT*48&-1)+4|0;c[d8>>2]=R;if((c[d1>>2]|0)==0){d9=R}else{X=R;R=16;do{d0=8-(X&7)|0;d5=(R|0)<(d0|0)?R:d0;R=R-d5|0;X=d5+X|0;}while((R|0)>0);c[d8>>2]=X;d9=X}X=b+21312|0;d8=c[X>>2]|0;do{if((c[Z>>2]|0)==1){R=d9;d5=9;d0=dT;do{bJ=8-(R&7)|0;d7=(d5|0)<(bJ|0)?d5:bJ;d5=d5-d7|0;bT=(R>>3)+(b+39840+(d0*48&-1)+8)|0;a[bT]=(d8>>d5<<bJ-d7|(d[bT]|0))&255;R=d7+R|0;d0=c[Y>>2]|0}while((d5|0)>0);c[b+39840+(d0*48&-1)+4>>2]=R;d5=b+72|0;d7=c[b+21316>>2]|0;if((c[d5>>2]|0)==2){bT=R;bJ=3;dU=d0;do{T=8-(bT&7)|0;ac=(bJ|0)<(T|0)?bJ:T;bJ=bJ-ac|0;bI=(bT>>3)+(b+39840+(dU*48&-1)+8)|0;a[bI]=(d7>>bJ<<T-ac|(d[bI]|0))&255;bT=ac+bT|0;dU=c[Y>>2]|0}while((bJ|0)>0);c[b+39840+(dU*48&-1)+4>>2]=bT;ea=dU;eb=bT}else{bJ=R;ac=5;bI=d0;do{T=8-(bJ&7)|0;Q=(ac|0)<(T|0)?ac:T;ac=ac-Q|0;ai=(bJ>>3)+(b+39840+(bI*48&-1)+8)|0;a[ai]=(d7>>ac<<T-Q|(d[ai]|0))&255;bJ=Q+bJ|0;bI=c[Y>>2]|0}while((ac|0)>0);c[b+39840+(bI*48&-1)+4>>2]=bJ;ea=bI;eb=bJ}ac=c[d5>>2]|0;if((ac|0)>0){d7=0;d0=ea;R=eb;while(1){bT=c[b+21328+(d7<<4)>>2]|0;dU=R;Q=1;ai=d0;do{T=8-(dU&7)|0;V=(Q|0)<(T|0)?Q:T;Q=Q-V|0;ab=(dU>>3)+(b+39840+(ai*48&-1)+8)|0;a[ab]=(bT>>Q<<T-V|(d[ab]|0))&255;dU=V+dU|0;ai=c[Y>>2]|0}while((Q|0)>0);c[b+39840+(ai*48&-1)+4>>2]=dU;Q=c[b+21328+(d7<<4)+4>>2]|0;bT=dU;V=1;ab=ai;do{T=8-(bT&7)|0;ad=(V|0)<(T|0)?V:T;V=V-ad|0;bQ=(bT>>3)+(b+39840+(ab*48&-1)+8)|0;a[bQ]=(Q>>V<<T-ad|(d[bQ]|0))&255;bT=ad+bT|0;ab=c[Y>>2]|0}while((V|0)>0);c[b+39840+(ab*48&-1)+4>>2]=bT;V=c[b+21328+(d7<<4)+8>>2]|0;Q=bT;ai=1;dU=ab;do{ad=8-(Q&7)|0;bQ=(ai|0)<(ad|0)?ai:ad;ai=ai-bQ|0;T=(Q>>3)+(b+39840+(dU*48&-1)+8)|0;a[T]=(V>>ai<<ad-bQ|(d[T]|0))&255;Q=bQ+Q|0;dU=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(dU*48&-1)+4>>2]=Q;ai=c[b+21328+(d7<<4)+12>>2]|0;V=Q;ab=1;bT=dU;do{bQ=8-(V&7)|0;T=(ab|0)<(bQ|0)?ab:bQ;ab=ab-T|0;ad=(V>>3)+(b+39840+(bT*48&-1)+8)|0;a[ad]=(ai>>ab<<bQ-T|(d[ad]|0))&255;V=T+V|0;bT=c[Y>>2]|0}while((ab|0)>0);c[b+39840+(bT*48&-1)+4>>2]=V;ab=d7+1|0;ai=c[d5>>2]|0;if((ab|0)<(ai|0)){d7=ab;d0=bT;R=V}else{ec=0;ed=ai;ee=bT;break}}}else{ec=0;ed=ac;ee=ea}while(1){if((ed|0)>0){R=0;d0=ee;d7=c[b+39840+(ee*48&-1)+4>>2]|0;while(1){bJ=(c[b+304+(ec*10504&-1)+(R*5252&-1)+4844>>2]|0)+(c[b+304+(ec*10504&-1)+(R*5252&-1)+4768>>2]|0)|0;bI=d7;ai=12;ab=d0;do{dU=8-(bI&7)|0;Q=(ai|0)<(dU|0)?ai:dU;ai=ai-Q|0;T=(bI>>3)+(b+39840+(ab*48&-1)+8)|0;a[T]=(bJ>>ai<<dU-Q|(d[T]|0))&255;bI=Q+bI|0;ab=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(ab*48&-1)+4>>2]=bI;ai=(c[b+304+(ec*10504&-1)+(R*5252&-1)+4772>>2]|0)/2&-1;bJ=bI;Q=9;T=ab;do{dU=8-(bJ&7)|0;ad=(Q|0)<(dU|0)?Q:dU;Q=Q-ad|0;bQ=(bJ>>3)+(b+39840+(T*48&-1)+8)|0;a[bQ]=(ai>>Q<<dU-ad|(d[bQ]|0))&255;bJ=ad+bJ|0;T=c[Y>>2]|0}while((Q|0)>0);c[b+39840+(T*48&-1)+4>>2]=bJ;Q=c[b+304+(ec*10504&-1)+(R*5252&-1)+4780>>2]|0;ai=bJ;ab=8;bI=T;do{ad=8-(ai&7)|0;bQ=(ab|0)<(ad|0)?ab:ad;ab=ab-bQ|0;dU=(ai>>3)+(b+39840+(bI*48&-1)+8)|0;a[dU]=(Q>>ab<<ad-bQ|(d[dU]|0))&255;ai=bQ+ai|0;bI=c[Y>>2]|0}while((ab|0)>0);c[b+39840+(bI*48&-1)+4>>2]=ai;ab=c[b+304+(ec*10504&-1)+(R*5252&-1)+4784>>2]|0;Q=ai;T=4;bJ=bI;do{bQ=8-(Q&7)|0;dU=(T|0)<(bQ|0)?T:bQ;T=T-dU|0;ad=(Q>>3)+(b+39840+(bJ*48&-1)+8)|0;a[ad]=(ab>>T<<bQ-dU|(d[ad]|0))&255;Q=dU+Q|0;bJ=c[Y>>2]|0}while((T|0)>0);T=b+39840+(bJ*48&-1)+4|0;c[T>>2]=Q;ab=b+304+(ec*10504&-1)+(R*5252&-1)+4788|0;if((c[ab>>2]|0)==0){bI=Q;ai=1;do{dU=8-(bI&7)|0;ad=(ai|0)<(dU|0)?ai:dU;ai=ai-ad|0;bI=ad+bI|0;}while((ai|0)>0);c[T>>2]=bI;ai=b+304+(ec*10504&-1)+(R*5252&-1)+4796|0;ad=c[ai>>2]|0;if((ad|0)==14){c[ai>>2]=16;ai=c[Y>>2]|0;ef=16;eg=ai;eh=c[b+39840+(ai*48&-1)+4>>2]|0}else{ef=ad;eg=bJ;eh=bI}ad=eh;ai=5;dU=eg;do{bQ=8-(ad&7)|0;dN=(ai|0)<(bQ|0)?ai:bQ;ai=ai-dN|0;dL=(ad>>3)+(b+39840+(dU*48&-1)+8)|0;a[dL]=(ef>>ai<<bQ-dN|(d[dL]|0))&255;ad=dN+ad|0;dU=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(dU*48&-1)+4>>2]=ad;ai=b+304+(ec*10504&-1)+(R*5252&-1)+4800|0;bI=c[ai>>2]|0;if((bI|0)==14){c[ai>>2]=16;ai=c[Y>>2]|0;ei=16;ej=ai;ek=c[b+39840+(ai*48&-1)+4>>2]|0}else{ei=bI;ej=dU;ek=ad}bI=ek;ai=5;T=ej;do{dN=8-(bI&7)|0;dL=(ai|0)<(dN|0)?ai:dN;ai=ai-dL|0;bQ=(bI>>3)+(b+39840+(T*48&-1)+8)|0;a[bQ]=(ei>>ai<<dN-dL|(d[bQ]|0))&255;bI=dL+bI|0;T=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(T*48&-1)+4>>2]=bI;ai=b+304+(ec*10504&-1)+(R*5252&-1)+4804|0;ad=c[ai>>2]|0;if((ad|0)==14){c[ai>>2]=16;ai=c[Y>>2]|0;el=16;em=ai;en=c[b+39840+(ai*48&-1)+4>>2]|0}else{el=ad;em=T;en=bI}ad=en;ai=5;dU=em;do{dL=8-(ad&7)|0;bQ=(ai|0)<(dL|0)?ai:dL;ai=ai-bQ|0;dN=(ad>>3)+(b+39840+(dU*48&-1)+8)|0;a[dN]=(el>>ai<<dL-bQ|(d[dN]|0))&255;ad=bQ+ad|0;dU=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(dU*48&-1)+4>>2]=ad;ai=c[b+304+(ec*10504&-1)+(R*5252&-1)+4824>>2]|0;bI=ad;T=4;bQ=dU;do{dN=8-(bI&7)|0;dL=(T|0)<(dN|0)?T:dN;T=T-dL|0;dM=(bI>>3)+(b+39840+(bQ*48&-1)+8)|0;a[dM]=(ai>>T<<dN-dL|(d[dM]|0))&255;bI=dL+bI|0;bQ=c[Y>>2]|0}while((T|0)>0);c[b+39840+(bQ*48&-1)+4>>2]=bI;T=c[b+304+(ec*10504&-1)+(R*5252&-1)+4828>>2]|0;ai=bI;dU=3;ad=bQ;do{dL=8-(ai&7)|0;dM=(dU|0)<(dL|0)?dU:dL;dU=dU-dM|0;dN=(ai>>3)+(b+39840+(ad*48&-1)+8)|0;a[dN]=(T>>dU<<dL-dM|(d[dN]|0))&255;ai=dM+ai|0;ad=c[Y>>2]|0}while((dU|0)>0);c[b+39840+(ad*48&-1)+4>>2]=ai;eo=ad;ep=ai}else{dU=Q;T=1;bQ=bJ;do{bI=8-(dU&7)|0;dM=(T|0)<(bI|0)?T:bI;T=T-dM|0;dN=(dU>>3)+(b+39840+(bQ*48&-1)+8)|0;a[dN]=(1>>>(T>>>0)<<bI-dM|(d[dN]|0))&255;dU=dM+dU|0;bQ=c[Y>>2]|0}while((T|0)>0);c[b+39840+(bQ*48&-1)+4>>2]=dU;T=c[ab>>2]|0;bJ=dU;Q=2;ai=bQ;do{ad=8-(bJ&7)|0;dM=(Q|0)<(ad|0)?Q:ad;Q=Q-dM|0;dN=(bJ>>3)+(b+39840+(ai*48&-1)+8)|0;a[dN]=(T>>Q<<ad-dM|(d[dN]|0))&255;bJ=dM+bJ|0;ai=c[Y>>2]|0}while((Q|0)>0);c[b+39840+(ai*48&-1)+4>>2]=bJ;Q=c[b+304+(ec*10504&-1)+(R*5252&-1)+4792>>2]|0;T=bJ;bQ=1;dU=ai;do{ab=8-(T&7)|0;dM=(bQ|0)<(ab|0)?bQ:ab;bQ=bQ-dM|0;dN=(T>>3)+(b+39840+(dU*48&-1)+8)|0;a[dN]=(Q>>bQ<<ab-dM|(d[dN]|0))&255;T=dM+T|0;dU=c[Y>>2]|0}while((bQ|0)>0);c[b+39840+(dU*48&-1)+4>>2]=T;bQ=b+304+(ec*10504&-1)+(R*5252&-1)+4796|0;Q=c[bQ>>2]|0;if((Q|0)==14){c[bQ>>2]=16;bQ=c[Y>>2]|0;eq=16;er=bQ;es=c[b+39840+(bQ*48&-1)+4>>2]|0}else{eq=Q;er=dU;es=T}Q=es;bQ=5;ai=er;do{bJ=8-(Q&7)|0;dM=(bQ|0)<(bJ|0)?bQ:bJ;bQ=bQ-dM|0;dN=(Q>>3)+(b+39840+(ai*48&-1)+8)|0;a[dN]=(eq>>bQ<<bJ-dM|(d[dN]|0))&255;Q=dM+Q|0;ai=c[Y>>2]|0}while((bQ|0)>0);c[b+39840+(ai*48&-1)+4>>2]=Q;bQ=b+304+(ec*10504&-1)+(R*5252&-1)+4800|0;T=c[bQ>>2]|0;if((T|0)==14){c[bQ>>2]=16;bQ=c[Y>>2]|0;et=16;eu=bQ;ev=c[b+39840+(bQ*48&-1)+4>>2]|0}else{et=T;eu=ai;ev=Q}T=ev;bQ=5;dU=eu;do{dM=8-(T&7)|0;dN=(bQ|0)<(dM|0)?bQ:dM;bQ=bQ-dN|0;bJ=(T>>3)+(b+39840+(dU*48&-1)+8)|0;a[bJ]=(et>>bQ<<dM-dN|(d[bJ]|0))&255;T=dN+T|0;dU=c[Y>>2]|0}while((bQ|0)>0);c[b+39840+(dU*48&-1)+4>>2]=T;bQ=c[b+304+(ec*10504&-1)+(R*5252&-1)+4808>>2]|0;Q=T;ai=3;dN=dU;do{bJ=8-(Q&7)|0;dM=(ai|0)<(bJ|0)?ai:bJ;ai=ai-dM|0;ab=(Q>>3)+(b+39840+(dN*48&-1)+8)|0;a[ab]=(bQ>>ai<<bJ-dM|(d[ab]|0))&255;Q=dM+Q|0;dN=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(dN*48&-1)+4>>2]=Q;ai=c[b+304+(ec*10504&-1)+(R*5252&-1)+4812>>2]|0;bQ=Q;dU=3;T=dN;do{dM=8-(bQ&7)|0;ab=(dU|0)<(dM|0)?dU:dM;dU=dU-ab|0;bJ=(bQ>>3)+(b+39840+(T*48&-1)+8)|0;a[bJ]=(ai>>dU<<dM-ab|(d[bJ]|0))&255;bQ=ab+bQ|0;T=c[Y>>2]|0}while((dU|0)>0);c[b+39840+(T*48&-1)+4>>2]=bQ;dU=c[b+304+(ec*10504&-1)+(R*5252&-1)+4816>>2]|0;ai=bQ;dN=3;Q=T;do{ab=8-(ai&7)|0;bJ=(dN|0)<(ab|0)?dN:ab;dN=dN-bJ|0;dM=(ai>>3)+(b+39840+(Q*48&-1)+8)|0;a[dM]=(dU>>dN<<ab-bJ|(d[dM]|0))&255;ai=bJ+ai|0;Q=c[Y>>2]|0}while((dN|0)>0);c[b+39840+(Q*48&-1)+4>>2]=ai;eo=Q;ep=ai}dN=c[b+304+(ec*10504&-1)+(R*5252&-1)+4832>>2]|0;dU=ep;T=1;bQ=eo;do{bJ=8-(dU&7)|0;dM=(T|0)<(bJ|0)?T:bJ;T=T-dM|0;ab=(dU>>3)+(b+39840+(bQ*48&-1)+8)|0;a[ab]=(dN>>T<<bJ-dM|(d[ab]|0))&255;dU=dM+dU|0;bQ=c[Y>>2]|0}while((T|0)>0);c[b+39840+(bQ*48&-1)+4>>2]=dU;T=c[b+304+(ec*10504&-1)+(R*5252&-1)+4836>>2]|0;dN=dU;ai=1;Q=bQ;do{dM=8-(dN&7)|0;ab=(ai|0)<(dM|0)?ai:dM;ai=ai-ab|0;bJ=(dN>>3)+(b+39840+(Q*48&-1)+8)|0;a[bJ]=(T>>ai<<dM-ab|(d[bJ]|0))&255;dN=ab+dN|0;Q=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(Q*48&-1)+4>>2]=dN;ai=c[b+304+(ec*10504&-1)+(R*5252&-1)+4840>>2]|0;T=dN;bQ=1;dU=Q;do{ab=8-(T&7)|0;bJ=(bQ|0)<(ab|0)?bQ:ab;bQ=bQ-bJ|0;dM=(T>>3)+(b+39840+(dU*48&-1)+8)|0;a[dM]=(ai>>bQ<<ab-bJ|(d[dM]|0))&255;T=bJ+T|0;dU=c[Y>>2]|0}while((bQ|0)>0);c[b+39840+(dU*48&-1)+4>>2]=T;bQ=R+1|0;ai=c[d5>>2]|0;if((bQ|0)<(ai|0)){R=bQ;d0=dU;d7=T}else{ew=ai;ex=dU;break}}}else{ew=ed;ex=ee}d7=ec+1|0;if((d7|0)<2){ec=d7;ed=ew;ee=ex}else{ey=ex;break}}}else{d5=d9;ac=8;d7=dT;do{d0=8-(d5&7)|0;R=(ac|0)<(d0|0)?ac:d0;ac=ac-R|0;bT=(d5>>3)+(b+39840+(d7*48&-1)+8)|0;a[bT]=(d8>>ac<<d0-R|(d[bT]|0))&255;d5=R+d5|0;d7=c[Y>>2]|0}while((ac|0)>0);ac=b+39840+(d7*48&-1)+4|0;c[ac>>2]=d5;R=c[b+21316>>2]|0;bT=b+72|0;d0=c[bT>>2]|0;if((d0|0)>0){ez=d5;eA=d0;eB=d7}else{c[ac>>2]=d5;ey=d7;break}do{ac=8-(ez&7)|0;d0=(eA|0)<(ac|0)?eA:ac;eA=eA-d0|0;V=(ez>>3)+(b+39840+(eB*48&-1)+8)|0;a[V]=(R>>eA<<ac-d0|(d[V]|0))&255;ez=d0+ez|0;eB=c[Y>>2]|0}while((eA|0)>0);R=c[bT>>2]|0;c[b+39840+(eB*48&-1)+4>>2]=ez;if((R|0)>0){eC=0;eD=eB;eE=ez}else{ey=eB;break}while(1){R=(c[b+304+(eC*5252&-1)+4844>>2]|0)+(c[b+304+(eC*5252&-1)+4768>>2]|0)|0;d7=eE;d5=12;d0=eD;do{V=8-(d7&7)|0;ac=(d5|0)<(V|0)?d5:V;d5=d5-ac|0;ai=(d7>>3)+(b+39840+(d0*48&-1)+8)|0;a[ai]=(R>>d5<<V-ac|(d[ai]|0))&255;d7=ac+d7|0;d0=c[Y>>2]|0}while((d5|0)>0);c[b+39840+(d0*48&-1)+4>>2]=d7;d5=(c[b+304+(eC*5252&-1)+4772>>2]|0)/2&-1;R=d7;ac=9;ai=d0;do{V=8-(R&7)|0;bQ=(ac|0)<(V|0)?ac:V;ac=ac-bQ|0;Q=(R>>3)+(b+39840+(ai*48&-1)+8)|0;a[Q]=(d5>>ac<<V-bQ|(d[Q]|0))&255;R=bQ+R|0;ai=c[Y>>2]|0}while((ac|0)>0);c[b+39840+(ai*48&-1)+4>>2]=R;ac=c[b+304+(eC*5252&-1)+4780>>2]|0;d5=R;d0=8;d7=ai;do{bQ=8-(d5&7)|0;Q=(d0|0)<(bQ|0)?d0:bQ;d0=d0-Q|0;V=(d5>>3)+(b+39840+(d7*48&-1)+8)|0;a[V]=(ac>>d0<<bQ-Q|(d[V]|0))&255;d5=Q+d5|0;d7=c[Y>>2]|0}while((d0|0)>0);c[b+39840+(d7*48&-1)+4>>2]=d5;d0=c[b+304+(eC*5252&-1)+4784>>2]|0;ac=d5;ai=9;R=d7;do{Q=8-(ac&7)|0;V=(ai|0)<(Q|0)?ai:Q;ai=ai-V|0;bQ=(ac>>3)+(b+39840+(R*48&-1)+8)|0;a[bQ]=(d0>>ai<<Q-V|(d[bQ]|0))&255;ac=V+ac|0;R=c[Y>>2]|0}while((ai|0)>0);ai=b+39840+(R*48&-1)+4|0;c[ai>>2]=ac;d0=b+304+(eC*5252&-1)+4788|0;if((c[d0>>2]|0)==0){d7=ac;d5=1;do{V=8-(d7&7)|0;bQ=(d5|0)<(V|0)?d5:V;d5=d5-bQ|0;d7=bQ+d7|0;}while((d5|0)>0);c[ai>>2]=d7;d5=b+304+(eC*5252&-1)+4796|0;bQ=c[d5>>2]|0;if((bQ|0)==14){c[d5>>2]=16;d5=c[Y>>2]|0;eF=16;eG=d5;eH=c[b+39840+(d5*48&-1)+4>>2]|0}else{eF=bQ;eG=R;eH=d7}bQ=eH;d5=5;V=eG;do{Q=8-(bQ&7)|0;dN=(d5|0)<(Q|0)?d5:Q;d5=d5-dN|0;bJ=(bQ>>3)+(b+39840+(V*48&-1)+8)|0;a[bJ]=(eF>>d5<<Q-dN|(d[bJ]|0))&255;bQ=dN+bQ|0;V=c[Y>>2]|0}while((d5|0)>0);c[b+39840+(V*48&-1)+4>>2]=bQ;d5=b+304+(eC*5252&-1)+4800|0;d7=c[d5>>2]|0;if((d7|0)==14){c[d5>>2]=16;d5=c[Y>>2]|0;eI=16;eJ=d5;eK=c[b+39840+(d5*48&-1)+4>>2]|0}else{eI=d7;eJ=V;eK=bQ}d7=eK;d5=5;ai=eJ;do{dN=8-(d7&7)|0;bJ=(d5|0)<(dN|0)?d5:dN;d5=d5-bJ|0;Q=(d7>>3)+(b+39840+(ai*48&-1)+8)|0;a[Q]=(eI>>d5<<dN-bJ|(d[Q]|0))&255;d7=bJ+d7|0;ai=c[Y>>2]|0}while((d5|0)>0);c[b+39840+(ai*48&-1)+4>>2]=d7;d5=b+304+(eC*5252&-1)+4804|0;bQ=c[d5>>2]|0;if((bQ|0)==14){c[d5>>2]=16;d5=c[Y>>2]|0;eL=16;eM=d5;eN=c[b+39840+(d5*48&-1)+4>>2]|0}else{eL=bQ;eM=ai;eN=d7}bQ=eN;d5=5;V=eM;do{bJ=8-(bQ&7)|0;Q=(d5|0)<(bJ|0)?d5:bJ;d5=d5-Q|0;dN=(bQ>>3)+(b+39840+(V*48&-1)+8)|0;a[dN]=(eL>>d5<<bJ-Q|(d[dN]|0))&255;bQ=Q+bQ|0;V=c[Y>>2]|0}while((d5|0)>0);c[b+39840+(V*48&-1)+4>>2]=bQ;d5=c[b+304+(eC*5252&-1)+4824>>2]|0;d7=bQ;ai=4;Q=V;do{dN=8-(d7&7)|0;bJ=(ai|0)<(dN|0)?ai:dN;ai=ai-bJ|0;dM=(d7>>3)+(b+39840+(Q*48&-1)+8)|0;a[dM]=(d5>>ai<<dN-bJ|(d[dM]|0))&255;d7=bJ+d7|0;Q=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(Q*48&-1)+4>>2]=d7;ai=c[b+304+(eC*5252&-1)+4828>>2]|0;d5=d7;V=3;bQ=Q;do{bJ=8-(d5&7)|0;dM=(V|0)<(bJ|0)?V:bJ;V=V-dM|0;dN=(d5>>3)+(b+39840+(bQ*48&-1)+8)|0;a[dN]=(ai>>V<<bJ-dM|(d[dN]|0))&255;d5=dM+d5|0;bQ=c[Y>>2]|0}while((V|0)>0);c[b+39840+(bQ*48&-1)+4>>2]=d5;eO=bQ;eP=d5}else{V=ac;ai=1;Q=R;do{d7=8-(V&7)|0;dM=(ai|0)<(d7|0)?ai:d7;ai=ai-dM|0;dN=(V>>3)+(b+39840+(Q*48&-1)+8)|0;a[dN]=(1>>>(ai>>>0)<<d7-dM|(d[dN]|0))&255;V=dM+V|0;Q=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(Q*48&-1)+4>>2]=V;ai=c[d0>>2]|0;R=V;ac=2;d5=Q;do{bQ=8-(R&7)|0;dM=(ac|0)<(bQ|0)?ac:bQ;ac=ac-dM|0;dN=(R>>3)+(b+39840+(d5*48&-1)+8)|0;a[dN]=(ai>>ac<<bQ-dM|(d[dN]|0))&255;R=dM+R|0;d5=c[Y>>2]|0}while((ac|0)>0);c[b+39840+(d5*48&-1)+4>>2]=R;ac=c[b+304+(eC*5252&-1)+4792>>2]|0;ai=R;Q=1;V=d5;do{d0=8-(ai&7)|0;dM=(Q|0)<(d0|0)?Q:d0;Q=Q-dM|0;dN=(ai>>3)+(b+39840+(V*48&-1)+8)|0;a[dN]=(ac>>Q<<d0-dM|(d[dN]|0))&255;ai=dM+ai|0;V=c[Y>>2]|0}while((Q|0)>0);c[b+39840+(V*48&-1)+4>>2]=ai;Q=b+304+(eC*5252&-1)+4796|0;ac=c[Q>>2]|0;if((ac|0)==14){c[Q>>2]=16;Q=c[Y>>2]|0;eQ=16;eR=Q;eS=c[b+39840+(Q*48&-1)+4>>2]|0}else{eQ=ac;eR=V;eS=ai}ac=eS;Q=5;d5=eR;do{R=8-(ac&7)|0;dM=(Q|0)<(R|0)?Q:R;Q=Q-dM|0;dN=(ac>>3)+(b+39840+(d5*48&-1)+8)|0;a[dN]=(eQ>>Q<<R-dM|(d[dN]|0))&255;ac=dM+ac|0;d5=c[Y>>2]|0}while((Q|0)>0);c[b+39840+(d5*48&-1)+4>>2]=ac;Q=b+304+(eC*5252&-1)+4800|0;ai=c[Q>>2]|0;if((ai|0)==14){c[Q>>2]=16;Q=c[Y>>2]|0;eT=16;eU=Q;eV=c[b+39840+(Q*48&-1)+4>>2]|0}else{eT=ai;eU=d5;eV=ac}ai=eV;Q=5;V=eU;do{dM=8-(ai&7)|0;dN=(Q|0)<(dM|0)?Q:dM;Q=Q-dN|0;R=(ai>>3)+(b+39840+(V*48&-1)+8)|0;a[R]=(eT>>Q<<dM-dN|(d[R]|0))&255;ai=dN+ai|0;V=c[Y>>2]|0}while((Q|0)>0);c[b+39840+(V*48&-1)+4>>2]=ai;Q=c[b+304+(eC*5252&-1)+4808>>2]|0;ac=ai;d5=3;dN=V;do{R=8-(ac&7)|0;dM=(d5|0)<(R|0)?d5:R;d5=d5-dM|0;d0=(ac>>3)+(b+39840+(dN*48&-1)+8)|0;a[d0]=(Q>>d5<<R-dM|(d[d0]|0))&255;ac=dM+ac|0;dN=c[Y>>2]|0}while((d5|0)>0);c[b+39840+(dN*48&-1)+4>>2]=ac;d5=c[b+304+(eC*5252&-1)+4812>>2]|0;Q=ac;V=3;ai=dN;do{dM=8-(Q&7)|0;d0=(V|0)<(dM|0)?V:dM;V=V-d0|0;R=(Q>>3)+(b+39840+(ai*48&-1)+8)|0;a[R]=(d5>>V<<dM-d0|(d[R]|0))&255;Q=d0+Q|0;ai=c[Y>>2]|0}while((V|0)>0);c[b+39840+(ai*48&-1)+4>>2]=Q;V=c[b+304+(eC*5252&-1)+4816>>2]|0;d5=Q;dN=3;ac=ai;do{d0=8-(d5&7)|0;R=(dN|0)<(d0|0)?dN:d0;dN=dN-R|0;dM=(d5>>3)+(b+39840+(ac*48&-1)+8)|0;a[dM]=(V>>dN<<d0-R|(d[dM]|0))&255;d5=R+d5|0;ac=c[Y>>2]|0}while((dN|0)>0);c[b+39840+(ac*48&-1)+4>>2]=d5;eO=ac;eP=d5}dN=c[b+304+(eC*5252&-1)+4836>>2]|0;V=eP;ai=1;Q=eO;do{R=8-(V&7)|0;dM=(ai|0)<(R|0)?ai:R;ai=ai-dM|0;d0=(V>>3)+(b+39840+(Q*48&-1)+8)|0;a[d0]=(dN>>ai<<R-dM|(d[d0]|0))&255;V=dM+V|0;Q=c[Y>>2]|0}while((ai|0)>0);c[b+39840+(Q*48&-1)+4>>2]=V;ai=c[b+304+(eC*5252&-1)+4840>>2]|0;dN=V;d5=1;ac=Q;do{dM=8-(dN&7)|0;d0=(d5|0)<(dM|0)?d5:dM;d5=d5-d0|0;R=(dN>>3)+(b+39840+(ac*48&-1)+8)|0;a[R]=(ai>>d5<<dM-d0|(d[R]|0))&255;dN=d0+dN|0;ac=c[Y>>2]|0}while((d5|0)>0);c[b+39840+(ac*48&-1)+4>>2]=dN;d5=eC+1|0;if((d5|0)<(c[bT>>2]|0)){eC=d5;eD=ac;eE=dN}else{ey=ac;break}}}}while(0);if((c[d1>>2]|0)!=0){d1=d[b+39840+(ey*48&-1)+10|0]|0;eE=(d1&128|0)!=0?262140:196598;eD=(((eE^d1<<10)&65536|0)==0?eE:eE^32773)<<1;eE=(((eD^d1<<11)&65536|0)==0?eD:eD^32773)<<1;eD=(((eE^d1<<12)&65536|0)==0?eE:eE^32773)<<1;eE=(((eD^d1<<13)&65536|0)==0?eD:eD^32773)<<1;eD=(((eE^d1<<14)&65536|0)==0?eE:eE^32773)<<1;eE=(((eD^d1<<15)&65536|0)==0?eD:eD^32773)<<1;eD=d[b+39840+(ey*48&-1)+11|0]|0;eC=(((eE^d1<<16)&65536|0)==0?eE:eE^32773)<<1;eE=(((eC^eD<<9)&65536|0)==0?eC:eC^32773)<<1;eC=(((eE^eD<<10)&65536|0)==0?eE:eE^32773)<<1;eE=(((eC^eD<<11)&65536|0)==0?eC:eC^32773)<<1;eC=(((eE^eD<<12)&65536|0)==0?eE:eE^32773)<<1;eE=(((eC^eD<<13)&65536|0)==0?eC:eC^32773)<<1;eC=(((eE^eD<<14)&65536|0)==0?eE:eE^32773)<<1;eE=(((eC^eD<<15)&65536|0)==0?eC:eC^32773)<<1;eC=((eE^eD<<16)&65536|0)==0?eE:eE^32773;eE=c[d6>>2]|0;eD=eC&255;d1=eC>>>8&255;if((eE|0)>6){eO=eC;eC=6;do{eP=d[b+39840+(ey*48&-1)+8+eC|0]|0;eT=eO<<1;eU=(((eP<<9^eT)&65536|0)==0?eT:eT^32773)<<1;eT=(((eU^eP<<10)&65536|0)==0?eU:eU^32773)<<1;eU=(((eT^eP<<11)&65536|0)==0?eT:eT^32773)<<1;eT=(((eU^eP<<12)&65536|0)==0?eU:eU^32773)<<1;eU=(((eT^eP<<13)&65536|0)==0?eT:eT^32773)<<1;eT=(((eU^eP<<14)&65536|0)==0?eU:eU^32773)<<1;eU=(((eT^eP<<15)&65536|0)==0?eT:eT^32773)<<1;eO=((eU^eP<<16)&65536|0)==0?eU:eU^32773;eC=eC+1|0;}while((eC|0)<(eE|0));eW=eO>>>8&255;eX=eO&255}else{eW=d1;eX=eD}a[b+39840+(ey*48&-1)+12|0]=eW;a[b+39840+(ey*48&-1)+13|0]=eX}eX=ey+1&255;c[Y>>2]=eX;c[b+39840+(eX*48&-1)>>2]=(c[b+39840+(ey*48&-1)>>2]|0)+d2;ey=b+52132|0;if((c[Y>>2]|0)==(c[ey>>2]|0)){ct(b,100208,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0)}Y=c[d6>>2]<<3;eX=b+72|0;do{if((c[Z>>2]|0)==1){eW=b+300|0;eD=b+296|0;d1=b+292|0;eO=b+284|0;eE=b+21464|0;eC=0;eU=0;eP=c[eX>>2]|0;while(1){if((eP|0)>0){eT=eC;eV=0;while(1){eQ=b+304+(eU*10504&-1)+(eV*5252&-1)|0;eR=c[b+304+(eU*10504&-1)+(eV*5252&-1)+4784>>2]|0;eS=c[11760+(eR<<2)>>2]|0;eL=c[11632+(eR<<2)>>2]|0;eM=b+304+(eU*10504&-1)+(eV*5252&-1)+4868|0;eN=c[eM>>2]|0;L1118:do{if((eN|0)>0){if((eR-4|0)>>>0<12){eY=0;eZ=0;e_=eN}else{eI=0;eJ=0;while(1){eK=((c[b+304+(eU*10504&-1)+(eV*5252&-1)+4608+(eJ<<2)>>2]|0)==-1?0:eS)+eI|0;eF=eJ+1|0;if((eF|0)<(eN|0)){eI=eK;eJ=eF}else{e$=eK;e0=eN;break L1118}}}while(1){eJ=c[b+304+(eU*10504&-1)+(eV*5252&-1)+4608+(eZ<<2)>>2]|0;if((eJ|0)==-1){e1=eY;e2=e_}else{eI=eS;do{eK=c[eW>>2]|0;if((eK|0)==0){c[eW>>2]=8;eF=(c[eD>>2]|0)+1|0;c[eD>>2]=eF;eG=c[ey>>2]|0;if((c[b+39840+(eG*48&-1)>>2]|0)==(c[d1>>2]|0)){eH=(c[eO>>2]|0)+eF|0;eB=b+39840+(eG*48&-1)+8|0;eG=c[d6>>2]|0;cF(eH|0,eB|0,eG)|0;eG=c[d6>>2]|0;eB=(c[eD>>2]|0)+eG|0;c[eD>>2]=eB;c[d1>>2]=(c[d1>>2]|0)+(eG<<3);c[ey>>2]=(c[ey>>2]|0)+1&255;e3=eB}else{e3=eF}a[(c[eO>>2]|0)+e3|0]=0;e4=c[eW>>2]|0}else{e4=eK}eK=(eI|0)<(e4|0)?eI:e4;eI=eI-eK|0;eF=e4-eK|0;c[eW>>2]=eF;eB=(c[eO>>2]|0)+(c[eD>>2]|0)|0;a[eB]=(eJ>>eI<<eF|(d[eB]|0))&255;c[d1>>2]=(c[d1>>2]|0)+eK;}while((eI|0)>0);e1=eY+eS|0;e2=c[eM>>2]|0}eI=eZ+1|0;if((eI|0)<(e2|0)){eY=e1;eZ=eI;e_=e2}else{e$=e1;e0=eI;break}}}else{e$=0;e0=0}}while(0);eM=b+304+(eU*10504&-1)+(eV*5252&-1)+4860|0;eS=c[eM>>2]|0;if((e0|0)<(eS|0)){eN=e$;dU=e0;T=eS;while(1){eS=c[b+304+(eU*10504&-1)+(eV*5252&-1)+4608+(dU<<2)>>2]|0;if((eS|0)==-1){e5=eN;e6=T}else{if((eR|0)==4|(eR|0)==0){e7=T}else{eI=eL;do{eJ=c[eW>>2]|0;if((eJ|0)==0){c[eW>>2]=8;eK=(c[eD>>2]|0)+1|0;c[eD>>2]=eK;eB=c[ey>>2]|0;if((c[b+39840+(eB*48&-1)>>2]|0)==(c[d1>>2]|0)){eF=(c[eO>>2]|0)+eK|0;eG=b+39840+(eB*48&-1)+8|0;eB=c[d6>>2]|0;cF(eF|0,eG|0,eB)|0;eB=c[d6>>2]|0;eG=(c[eD>>2]|0)+eB|0;c[eD>>2]=eG;c[d1>>2]=(c[d1>>2]|0)+(eB<<3);c[ey>>2]=(c[ey>>2]|0)+1&255;e8=eG}else{e8=eK}a[(c[eO>>2]|0)+e8|0]=0;e9=c[eW>>2]|0}else{e9=eJ}eJ=(eI|0)<(e9|0)?eI:e9;eI=eI-eJ|0;eK=e9-eJ|0;c[eW>>2]=eK;eG=(c[eO>>2]|0)+(c[eD>>2]|0)|0;a[eG]=(eS>>eI<<eK|(d[eG]|0))&255;c[d1>>2]=(c[d1>>2]|0)+eJ;}while((eI|0)>0);e7=c[eM>>2]|0}e5=eN+eL|0;e6=e7}eI=dU+1|0;if((eI|0)<(e6|0)){eN=e5;dU=eI;T=e6}else{fa=e5;break}}}else{fa=e$}if((c[b+304+(eU*10504&-1)+(eV*5252&-1)+4788>>2]|0)==2){T=(c[eE>>2]|0)*3&-1;dU=b+304+(eU*10504&-1)+(eV*5252&-1)+4772|0;eN=c[dU>>2]|0;eL=(T|0)>(eN|0)?eN:T;T=bu(b,c[b+304+(eU*10504&-1)+(eV*5252&-1)+4796>>2]|0,0,eL,eQ)|0;fb=(bu(b,c[b+304+(eU*10504&-1)+(eV*5252&-1)+4800>>2]|0,eL,c[dU>>2]|0,eQ)|0)+T|0}else{T=c[b+304+(eU*10504&-1)+(eV*5252&-1)+4772>>2]|0;dU=c[b+304+(eU*10504&-1)+(eV*5252&-1)+4824>>2]|0;eL=c[b+21360+(dU+1<<2)>>2]|0;eN=c[b+21360+(dU+2+(c[b+304+(eU*10504&-1)+(eV*5252&-1)+4828>>2]|0)<<2)>>2]|0;dU=(eL|0)>(T|0)?T:eL;eL=(eN|0)>(T|0)?T:eN;eN=bu(b,c[b+304+(eU*10504&-1)+(eV*5252&-1)+4796>>2]|0,0,dU,eQ)|0;eM=(bu(b,c[b+304+(eU*10504&-1)+(eV*5252&-1)+4800>>2]|0,dU,eL,eQ)|0)+eN|0;fb=eM+(bu(b,c[b+304+(eU*10504&-1)+(eV*5252&-1)+4804>>2]|0,eL,T,eQ)|0)|0}T=fa+eT+fb+(bt(b,eQ)|0)|0;eL=eV+1|0;eM=c[eX>>2]|0;if((eL|0)<(eM|0)){eT=T;eV=eL}else{fc=T;fd=eM;break}}}else{fc=eC;fd=eP}eV=eU+1|0;if((eV|0)<2){eC=fc;eU=eV;eP=fd}else{fe=fc;break}}}else{if((c[eX>>2]|0)<=0){fe=0;break}eP=b+300|0;eU=b+296|0;eC=b+292|0;eE=b+284|0;d1=b+21464|0;eD=0;eO=0;while(1){eW=b+304+(eO*5252&-1)|0;eV=b+304+(eO*5252&-1)+5188|0;if((c[b+304+(eO*5252&-1)+4788>>2]|0)==2){eT=0;ac=0;dN=0;while(1){eM=c[(c[eV>>2]|0)+(eT<<2)>>2]|0;T=(eM|0)/3&-1;eL=c[b+304+(eO*5252&-1)+5192+(eT<<2)>>2]|0;if((eM|0)>2){eM=(eL|0)>0;eN=(T|0)>1?T:1;dU=0;eR=dN;while(1){eI=eR*3&-1;eS=c[b+304+(eO*5252&-1)+4608+(eI<<2)>>2]|0;eJ=(eS|0)>0?eS:0;if(eM){eS=eL;do{eG=c[eP>>2]|0;if((eG|0)==0){c[eP>>2]=8;eK=(c[eU>>2]|0)+1|0;c[eU>>2]=eK;eB=c[ey>>2]|0;if((c[b+39840+(eB*48&-1)>>2]|0)==(c[eC>>2]|0)){eF=(c[eE>>2]|0)+eK|0;eH=b+39840+(eB*48&-1)+8|0;eB=c[d6>>2]|0;cF(eF|0,eH|0,eB)|0;eB=c[d6>>2]|0;eH=(c[eU>>2]|0)+eB|0;c[eU>>2]=eH;c[eC>>2]=(c[eC>>2]|0)+(eB<<3);c[ey>>2]=(c[ey>>2]|0)+1&255;ff=eH}else{ff=eK}a[(c[eE>>2]|0)+ff|0]=0;fg=c[eP>>2]|0}else{fg=eG}eG=(eS|0)<(fg|0)?eS:fg;eS=eS-eG|0;eK=fg-eG|0;c[eP>>2]=eK;eH=(c[eE>>2]|0)+(c[eU>>2]|0)|0;a[eH]=(eJ>>eS<<eK|(d[eH]|0))&255;fh=(c[eC>>2]|0)+eG|0;c[eC>>2]=fh;}while((eS|0)>0);eS=c[b+304+(eO*5252&-1)+4608+(eI+1<<2)>>2]|0;eJ=(eS|0)>0?eS:0;eS=eL;eG=fh;do{eH=c[eP>>2]|0;if((eH|0)==0){c[eP>>2]=8;eK=(c[eU>>2]|0)+1|0;c[eU>>2]=eK;eB=c[ey>>2]|0;if((c[b+39840+(eB*48&-1)>>2]|0)==(eG|0)){eF=(c[eE>>2]|0)+eK|0;ez=b+39840+(eB*48&-1)+8|0;eB=c[d6>>2]|0;cF(eF|0,ez|0,eB)|0;eB=c[d6>>2]|0;ez=(c[eU>>2]|0)+eB|0;c[eU>>2]=ez;c[eC>>2]=(c[eC>>2]|0)+(eB<<3);c[ey>>2]=(c[ey>>2]|0)+1&255;fi=ez}else{fi=eK}a[(c[eE>>2]|0)+fi|0]=0;fj=c[eP>>2]|0}else{fj=eH}eH=(eS|0)<(fj|0)?eS:fj;eS=eS-eH|0;eK=fj-eH|0;c[eP>>2]=eK;ez=(c[eE>>2]|0)+(c[eU>>2]|0)|0;a[ez]=(eJ>>eS<<eK|(d[ez]|0))&255;eG=(c[eC>>2]|0)+eH|0;c[eC>>2]=eG;}while((eS|0)>0);eS=c[b+304+(eO*5252&-1)+4608+(eI+2<<2)>>2]|0;eJ=(eS|0)>0?eS:0;eS=eL;eH=eG;do{ez=c[eP>>2]|0;if((ez|0)==0){c[eP>>2]=8;eK=(c[eU>>2]|0)+1|0;c[eU>>2]=eK;eB=c[ey>>2]|0;if((c[b+39840+(eB*48&-1)>>2]|0)==(eH|0)){eF=(c[eE>>2]|0)+eK|0;eA=b+39840+(eB*48&-1)+8|0;eB=c[d6>>2]|0;cF(eF|0,eA|0,eB)|0;eB=c[d6>>2]|0;eA=(c[eU>>2]|0)+eB|0;c[eU>>2]=eA;c[eC>>2]=(c[eC>>2]|0)+(eB<<3);c[ey>>2]=(c[ey>>2]|0)+1&255;fk=eA}else{fk=eK}a[(c[eE>>2]|0)+fk|0]=0;fl=c[eP>>2]|0}else{fl=ez}ez=(eS|0)<(fl|0)?eS:fl;eS=eS-ez|0;eK=fl-ez|0;c[eP>>2]=eK;eA=(c[eE>>2]|0)+(c[eU>>2]|0)|0;a[eA]=(eJ>>eS<<eK|(d[eA]|0))&255;eH=(c[eC>>2]|0)+ez|0;c[eC>>2]=eH;}while((eS|0)>0)}eS=dU+1|0;if((eS|0)<(T|0)){dU=eS;eR=eR+1|0}else{break}}fm=(_(eL*3&-1,eN)|0)+ac|0;fn=eN+dN|0}else{fm=ac;fn=dN}eR=eT+1|0;if((eR|0)<4){eT=eR;ac=fm;dN=fn}else{break}}dN=(c[d1>>2]|0)*3&-1;ac=b+304+(eO*5252&-1)+4772|0;eT=c[ac>>2]|0;eR=(dN|0)>(eT|0)?eT:dN;dN=bu(b,c[b+304+(eO*5252&-1)+4796>>2]|0,0,eR,eW)|0;fo=(bu(b,c[b+304+(eO*5252&-1)+4800>>2]|0,eR,c[ac>>2]|0,eW)|0)+dN|0;fp=fm}else{dN=0;ac=0;eR=0;while(1){eT=c[(c[eV>>2]|0)+(dN<<2)>>2]|0;dU=c[b+304+(eO*5252&-1)+5192+(dN<<2)>>2]|0;if((eT|0)>0){if((dU|0)>0){T=0;eM=eR;while(1){eQ=c[b+304+(eO*5252&-1)+4608+(eM<<2)>>2]|0;eS=(eQ|0)>0?eQ:0;eQ=dU;do{eH=c[eP>>2]|0;if((eH|0)==0){c[eP>>2]=8;eJ=(c[eU>>2]|0)+1|0;c[eU>>2]=eJ;eG=c[ey>>2]|0;if((c[b+39840+(eG*48&-1)>>2]|0)==(c[eC>>2]|0)){eI=(c[eE>>2]|0)+eJ|0;ez=b+39840+(eG*48&-1)+8|0;eG=c[d6>>2]|0;cF(eI|0,ez|0,eG)|0;eG=c[d6>>2]|0;ez=(c[eU>>2]|0)+eG|0;c[eU>>2]=ez;c[eC>>2]=(c[eC>>2]|0)+(eG<<3);c[ey>>2]=(c[ey>>2]|0)+1&255;fq=ez}else{fq=eJ}a[(c[eE>>2]|0)+fq|0]=0;fr=c[eP>>2]|0}else{fr=eH}eH=(eQ|0)<(fr|0)?eQ:fr;eQ=eQ-eH|0;eJ=fr-eH|0;c[eP>>2]=eJ;ez=(c[eE>>2]|0)+(c[eU>>2]|0)|0;a[ez]=(eS>>eQ<<eJ|(d[ez]|0))&255;c[eC>>2]=(c[eC>>2]|0)+eH;}while((eQ|0)>0);eQ=T+1|0;if((eQ|0)<(eT|0)){T=eQ;eM=eM+1|0}else{break}}}fs=(_(dU,eT)|0)+ac|0;ft=eT+eR|0}else{fs=ac;ft=eR}eM=dN+1|0;if((eM|0)<4){dN=eM;ac=fs;eR=ft}else{break}}eR=c[b+304+(eO*5252&-1)+4772>>2]|0;ac=c[b+304+(eO*5252&-1)+4824>>2]|0;dN=c[b+21360+(ac+1<<2)>>2]|0;eV=c[b+21360+(ac+2+(c[b+304+(eO*5252&-1)+4828>>2]|0)<<2)>>2]|0;ac=(dN|0)>(eR|0)?eR:dN;dN=(eV|0)>(eR|0)?eR:eV;eV=bu(b,c[b+304+(eO*5252&-1)+4796>>2]|0,0,ac,eW)|0;eM=(bu(b,c[b+304+(eO*5252&-1)+4800>>2]|0,ac,dN,eW)|0)+eV|0;fo=eM+(bu(b,c[b+304+(eO*5252&-1)+4804>>2]|0,dN,eR,eW)|0)|0;fp=fs}eR=fp+eD+fo+(bt(b,eW)|0)|0;dN=eO+1|0;if((dN|0)<(c[eX>>2]|0)){eD=eR;eO=dN}else{fe=eR;break}}}}while(0);fo=b+21324|0;br(b,c[fo>>2]|0);fp=fe+Y+(c[fo>>2]|0)|0;c[X>>2]=(c[X>>2]|0)+((d2-fp|0)/8&-1);Y=bq(b,r)|0;r=b+52140|0;if((Y|0)==(c[r>>2]|0)){fu=Y}else{ct(b,101072,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);fu=c[r>>2]|0}Y=c[X>>2]<<3;if((Y|0)!=(fu|0)){fe=c[fo>>2]|0;fo=c[S>>2]|0;S=c[d6>>2]<<3;ct(b,100680,(t=i,i=i+72|0,c[t>>2]=Y,c[t+8>>2]=fu,c[t+16>>2]=fe,c[t+24>>2]=fo,c[t+32>>2]=S,c[t+40>>2]=fp-fe-S,c[t+48>>2]=fp,c[t+56>>2]=(fp|0)%8&-1,c[t+64>>2]=d2,t)|0);ct(b,100568,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);ct(b,100488,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);ct(b,100336,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);ct(b,100280,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);c[r>>2]=c[X>>2]<<3}X=b+292|0;r=c[X>>2]|0;if((r|0)>1e9){d2=0;do{fp=b+39840+(d2*48&-1)|0;c[fp>>2]=(c[fp>>2]|0)-r;d2=d2+1|0;}while((d2|0)<256);c[X>>2]=0}X=bs(b,j,l)|0;do{if((c[b+156>>2]|0)!=0){l=c[66168+(c[Z>>2]<<6)+(c[W>>2]<<2)>>2]|0;j=b+85784|0;c[j>>2]=(c[j>>2]|0)+1;j=b+85760|0;d2=(c[j>>2]|0)+l|0;c[j>>2]=d2;j=b+85764|0;l=(c[j>>2]|0)+1|0;c[j>>2]=l;r=b+85768|0;if((l|0)<(c[r>>2]|0)){break}l=b+85772|0;fp=c[l>>2]|0;S=b+85776|0;fe=c[S>>2]|0;if((fp|0)<(fe|0)){c[(c[b+85780>>2]|0)+(fp<<2)>>2]=d2;d2=(c[l>>2]|0)+1|0;c[l>>2]=d2;c[j>>2]=0;fv=d2;fw=c[S>>2]|0}else{fv=fp;fw=fe}if((fv|0)!=(fw|0)){break}if((fw|0)>1){fe=b+85780|0;fp=1;do{d2=c[fe>>2]|0;c[d2+(((fp|0)/2&-1)<<2)>>2]=c[d2+(fp<<2)>>2];fp=fp+2|0;}while((fp|0)<(c[S>>2]|0));fx=c[l>>2]|0}else{fx=fw}c[r>>2]=c[r>>2]<<1;c[l>>2]=(fx|0)/2&-1}}while(0);do{if((c[dZ>>2]|0)!=0){fx=b+85804|0;if((c[fx>>2]|0)==0){break}fw=c[ao>>2]|0;fv=fw*576&-1;Z=c[eX>>2]|0;if((Z|0)>0){S=0;do{fp=0;do{fe=c[fx>>2]|0;h[fe+24+(S*12800&-1)+(fp<<3)>>3]=+h[fe+24+(S*12800&-1)+(fp+fv<<3)>>3];fp=fp+1|0;}while((fp|0)<272);fp=c[U+(S<<2)>>2]|0;eW=272;do{h[(c[fx>>2]|0)+24+(S*12800&-1)+(eW<<3)>>3]=+g[fp+(eW-272<<2)>>2];eW=eW+1|0;}while((eW|0)<1600);S=S+1|0;fy=c[eX>>2]|0;}while((S|0)<(fy|0));fz=c[ao>>2]|0;fA=fy}else{fz=fw;fA=Z}g[b+84908>>2]=1.0;S=q;if((fz|0)<=0){break}fv=n|0;l=o|0;r=b+212|0;eW=b+216|0;fp=p+12|0;fe=p+8|0;d2=p|0;j=p+4|0;fo=p+16|0;fu=0;Y=fA;d6=fz;while(1){if((Y|0)>0){fs=(fu|0)==1;ft=0;do{fr=b+304+(fu*10504&-1)+(ft*5252&-1)|0;fq=b+304+(fu*10504&-1)+(ft*5252&-1)+4608|0;cF(S|0,fq|0,156)|0;do{if(fs){ey=b+10808+(ft*5252&-1)+4848|0;fm=c[ey>>2]|0;if((fm|0)>0){fB=0;fC=fm}else{break}while(1){fm=b+10808+(ft*5252&-1)+4608+(fB<<2)|0;if((c[fm>>2]|0)<0){c[fm>>2]=c[b+304+(ft*5252&-1)+4608+(fB<<2)>>2];fD=c[ey>>2]|0}else{fD=fC}fm=fB+1|0;if((fm|0)<(fD|0)){fB=fm;fC=fD}else{break}}}}while(0);ch=(c[b+304+(fu*10504&-1)+(ft*5252&-1)+4836>>2]|0)==0?.5:1.0;b9(b,ag+(fu*976&-1)+(ft*488&-1)|0,fr,fv)|0;ca(fr,fv,l,p,0);eT=c[b+304+(fu*10504&-1)+(ft*5252&-1)+4848>>2]|0;dU=b+304+(fu*10504&-1)+(ft*5252&-1)+4788|0;ey=c[dU>>2]|0;if((ey|0)==2){fE=eT}else{fE=(c[b+304+(fu*10504&-1)+(ft*5252&-1)+4792>>2]|0)==0?22:eT}if((fE|0)>0){eT=b+304+(fu*10504&-1)+(ft*5252&-1)+4832|0;d4=-0.0-ch;fm=0;fn=0;while(1){fl=fn+1|0;fk=c[b+21360+(fl<<2)>>2]|0;fj=fk-(c[b+21360+(fn<<2)>>2]|0)|0;if((fm|0)<(fk|0)){fi=fm;d3=0.0;while(1){du=+g[b+304+(fu*10504&-1)+(ft*5252&-1)+(fi<<2)>>2];dG=d3+du*du;fh=fi+1|0;if((fh|0)<(fk|0)){fi=fh;d3=dG}else{fF=fk;fG=dG;break}}}else{fF=fm;fG=0.0}d3=+(fj|0);dG=fG/d3;h[(c[fx>>2]|0)+190712+(fu*704&-1)+(ft*176&-1)+(fn<<3)>>3]=dG*999999986991104.0;h[(c[fx>>2]|0)+201208+(fu*352&-1)+(ft*176&-1)+(fn<<3)>>3]=+g[n+(fn<<2)>>2]*999999986991104.0*+g[o+(fn<<2)>>2]/d3;d3=+g[ag+(fu*976&-1)+(ft*488&-1)+244+(fn<<2)>>2];do{if(d3>0.0){if((c[r>>2]|0)!=0){fH=0.0;break}fH=dG/d3}else{fH=0.0}}while(0);d3=fH*+g[ag+(fu*976&-1)+(ft*488&-1)+(fn<<2)>>2];dG=+g[(c[dV>>2]|0)+24+(fn<<2)>>2];h[(c[fx>>2]|0)+189304+(fu*704&-1)+(ft*176&-1)+(fn<<3)>>3]=(d3>dG?d3:dG)*999999986991104.0;h[(c[fx>>2]|0)+199160+(fu*352&-1)+(ft*176&-1)+(fn<<3)>>3]=0.0;if((c[eT>>2]|0)!=0&(fn|0)>10){h[(c[fx>>2]|0)+199160+(fu*352&-1)+(ft*176&-1)+(fn<<3)>>3]=+(c[14096+(fn<<2)>>2]|0)*d4}if((fn|0)<21){fj=(c[fx>>2]|0)+199160+(fu*352&-1)+(ft*176&-1)+(fn<<3)|0;h[fj>>3]=+h[fj>>3]-ch*+(c[b+304+(fu*10504&-1)+(ft*5252&-1)+4608+(fn<<2)>>2]|0)}if((fl|0)<(fE|0)){fm=fF;fn=fl}else{break}}fI=fF;fJ=fE;fK=c[dU>>2]|0}else{fI=0;fJ=0;fK=ey}do{if((fK|0)==2){fn=c[b+304+(fu*10504&-1)+(ft*5252&-1)+4852>>2]|0;if((fn|0)<13){fL=fI;fM=fJ;fN=fn}else{break}while(1){fn=c[b+21452+(fN<<2)>>2]|0;fm=fN+1|0;eT=c[b+21452+(fm<<2)>>2]|0;fr=eT-fn|0;fj=(fn|0)<(eT|0);d4=+(fr|0);fk=fN*3&-1;fi=(fN|0)<12;fh=fL;fg=0;ff=fM;while(1){if(fj){fc=fh;fd=fn;dG=0.0;while(1){d3=+g[b+304+(fu*10504&-1)+(ft*5252&-1)+(fc<<2)>>2];fO=dG+d3*d3;fb=fd+1|0;if((fb|0)<(eT|0)){fc=fc+1|0;fd=fb;dG=fO}else{break}}fP=fh+fr|0;fQ=fO}else{fP=fh;fQ=0.0}dG=fQ/d4;d3=dG>1.0e-20?dG:9.999999682655225e-21;fd=fg+fk|0;h[(c[fx>>2]|0)+194616+(fu*1248&-1)+(ft*312&-1)+(fd<<3)>>3]=d3*999999986991104.0;h[(c[fx>>2]|0)+201912+(fu*624&-1)+(ft*312&-1)+(fd<<3)>>3]=+g[n+(ff<<2)>>2]*999999986991104.0*+g[o+(ff<<2)>>2]/d4;dG=+g[ag+(fu*976&-1)+(ft*488&-1)+332+(fN*12&-1)+(fg<<2)>>2];if(dG>0.0){fR=d3/dG}else{fR=0.0}if((c[r>>2]|0)==0){if((c[eW>>2]|0)==0){fS=fR}else{b8=836}}else{b8=836}if((b8|0)==836){b8=0;fS=0.0}dG=fS*+g[ag+(fu*976&-1)+(ft*488&-1)+88+(fN*12&-1)+(fg<<2)>>2];d3=+g[(c[dV>>2]|0)+112+(fN<<2)>>2];h[(c[fx>>2]|0)+192120+(fu*1248&-1)+(ft*312&-1)+(fd<<3)>>3]=(dG>d3?dG:d3)*999999986991104.0;h[(c[fx>>2]|0)+199864+(fu*624&-1)+(ft*312&-1)+(fd<<3)>>3]=+(c[b+304+(fu*10504&-1)+(ft*5252&-1)+4808+(fg<<2)>>2]|0)*-2.0;if(fi){fc=(c[fx>>2]|0)+199864+(fu*624&-1)+(ft*312&-1)+(fd<<3)|0;h[fc>>3]=+h[fc>>3]-ch*+(c[b+304+(fu*10504&-1)+(ft*5252&-1)+4608+(ff<<2)>>2]|0)}fc=fg+1|0;if((fc|0)<3){fh=fP;fg=fc;ff=ff+1|0}else{break}}if((fm|0)<13){fL=fP;fM=fM+3|0;fN=fm}else{break}}}}while(0);c[(c[fx>>2]|0)+201112+(fu<<3)+(ft<<2)>>2]=c[b+304+(fu*10504&-1)+(ft*5252&-1)+4780>>2];ey=b+304+(fu*10504&-1)+(ft*5252&-1)+4844|0;c[(c[fx>>2]|0)+203400+(fu<<3)+(ft<<2)>>2]=(c[ey>>2]|0)+(c[b+304+(fu*10504&-1)+(ft*5252&-1)+4768>>2]|0);c[(c[fx>>2]|0)+203416+(fu<<3)+(ft<<2)>>2]=c[ey>>2];c[(c[fx>>2]|0)+203160+(fu<<3)+(ft<<2)>>2]=c[fp>>2];h[(c[fx>>2]|0)+203208+(fu<<4)+(ft<<3)>>3]=+g[fe>>2]*10.0;h[(c[fx>>2]|0)+203240+(fu<<4)+(ft<<3)>>3]=+g[d2>>2]*10.0;h[(c[fx>>2]|0)+203176+(fu<<4)+(ft<<3)>>3]=+g[j>>2]*10.0;c[(c[fx>>2]|0)+203272+(fu<<3)+(ft<<2)>>2]=c[fo>>2];cF(fq|0,S|0,156)|0;ft=ft+1|0;fT=c[eX>>2]|0;}while((ft|0)<(fT|0));fU=fT;fV=c[ao>>2]|0}else{fU=Y;fV=d6}ft=fu+1|0;if((ft|0)<(fV|0)){fu=ft;Y=fU;d6=fV}else{break}}}}while(0);fV=b+84748|0;c[fV>>2]=(c[fV>>2]|0)+1;fV=b+84040+((c[W>>2]|0)*20&-1)+16|0;c[fV>>2]=(c[fV>>2]|0)+1;fV=b+84356|0;c[fV>>2]=(c[fV>>2]|0)+1;if((c[eX>>2]|0)==2){fV=b+84040+((c[W>>2]|0)*20&-1)+(c[f>>2]<<2)|0;c[fV>>2]=(c[fV>>2]|0)+1;fV=b+84340+(c[f>>2]<<2)|0;c[fV>>2]=(c[fV>>2]|0)+1}fV=c[ao>>2]|0;if((fV|0)<=0){i=m;return X|0}f=b+84740|0;fU=0;fT=c[eX>>2]|0;fN=fV;while(1){if((fT|0)>0){fV=0;do{fM=(c[b+304+(fU*10504&-1)+(fV*5252&-1)+4792>>2]|0)==0?c[b+304+(fU*10504&-1)+(fV*5252&-1)+4788>>2]|0:4;fP=b+84360+((c[W>>2]|0)*24&-1)+(fM<<2)|0;c[fP>>2]=(c[fP>>2]|0)+1;fP=b+84360+((c[W>>2]|0)*24&-1)+20|0;c[fP>>2]=(c[fP>>2]|0)+1;fP=b+84720+(fM<<2)|0;c[fP>>2]=(c[fP>>2]|0)+1;c[f>>2]=(c[f>>2]|0)+1;fV=fV+1|0;fW=c[eX>>2]|0;}while((fV|0)<(fW|0));fX=fW;fY=c[ao>>2]|0}else{fX=fT;fY=fN}fV=fU+1|0;if((fV|0)<(fY|0)){fU=fV;fT=fX;fN=fY}else{break}}i=m;return X|0}function bw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0.0,D=0.0,E=0,F=0.0,G=0,H=0.0;c=b<<1;b=a+(c<<2)|0;d=66136;e=4;while(1){f=e>>1;h=e<<1;i=h+e|0;j=e<<2;k=a;l=a+(f<<2)|0;while(1){m=+g[k>>2];n=k+(e<<2)|0;o=+g[n>>2];p=m-o;q=m+o;r=k+(h<<2)|0;o=+g[r>>2];s=k+(i<<2)|0;m=+g[s>>2];t=o-m;u=o+m;g[r>>2]=q-u;g[k>>2]=q+u;g[s>>2]=p-t;g[n>>2]=p+t;t=+g[l>>2];n=l+(e<<2)|0;p=+g[n>>2];u=t-p;q=t+p;s=l+(i<<2)|0;p=+g[s>>2]*1.4142135623730951;r=l+(h<<2)|0;t=+g[r>>2]*1.4142135623730951;g[r>>2]=q-t;g[l>>2]=q+t;g[s>>2]=u-p;g[n>>2]=u+p;n=k+(j<<2)|0;if(n>>>0<b>>>0){k=n;l=l+(j<<2)|0}else{break}}l=d+4|0;if((e|0)>2){k=1;p=+g[d>>2];u=+g[l>>2];while(1){t=u*2.0;q=1.0-u*t;m=p*t;n=a+(k<<2)|0;s=a+(e-k<<2)|0;while(1){r=n+(e<<2)|0;t=+g[r>>2];v=s+(e<<2)|0;o=+g[v>>2];w=m*t-q*o;x=q*t+m*o;o=+g[n>>2];t=o-x;y=o+x;x=+g[s>>2];o=x-w;z=x+w;A=n+(i<<2)|0;w=+g[A>>2];B=s+(i<<2)|0;x=+g[B>>2];C=m*w-q*x;D=q*w+m*x;E=n+(h<<2)|0;x=+g[E>>2];w=x-D;F=x+D;G=s+(h<<2)|0;D=+g[G>>2];x=D-C;H=D+C;C=u*F-p*x;D=p*F+u*x;g[E>>2]=y-D;g[n>>2]=y+D;g[B>>2]=o-C;g[v>>2]=o+C;C=p*H-u*w;o=u*H+p*w;g[G>>2]=z-o;g[s>>2]=z+o;g[A>>2]=t-C;g[r>>2]=t+C;r=n+(j<<2)|0;if(r>>>0<b>>>0){n=r;s=s+(j<<2)|0}else{break}}m=+g[d>>2];q=+g[l>>2];C=u*m+p*q;s=k+1|0;if((s|0)<(f|0)){k=s;p=p*m-u*q;u=C}else{break}}}if((j|0)<(c|0)){d=d+8|0;e=j}else{break}}return}function bx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;if((c|0)==0){return}e=d+4|0;f=d+8|0;h=d+12|0;i=d+16|0;j=d+20|0;k=d+24|0;l=d+28|0;m=d+32|0;n=d+36|0;o=d+40|0;p=d+44|0;q=d+48|0;r=d+52|0;s=d+56|0;t=d+60|0;u=d+64|0;v=d+68|0;w=d+72|0;x=d+76|0;y=d+80|0;z=b;b=c;c=a;while(1){a=b-1|0;g[z>>2]=+g[c>>2]*+g[d>>2]+1.0e-10- +g[z-4>>2]*+g[e>>2]+ +g[c-4>>2]*+g[f>>2]- +g[z-8>>2]*+g[h>>2]+ +g[c-8>>2]*+g[i>>2]- +g[z-12>>2]*+g[j>>2]+ +g[c-12>>2]*+g[k>>2]- +g[z-16>>2]*+g[l>>2]+ +g[c-16>>2]*+g[m>>2]- +g[z-20>>2]*+g[n>>2]+ +g[c-20>>2]*+g[o>>2]- +g[z-24>>2]*+g[p>>2]+ +g[c-24>>2]*+g[q>>2]- +g[z-28>>2]*+g[r>>2]+ +g[c-28>>2]*+g[s>>2]- +g[z-32>>2]*+g[t>>2]+ +g[c-32>>2]*+g[u>>2]- +g[z-36>>2]*+g[v>>2]+ +g[c-36>>2]*+g[w>>2]- +g[z-40>>2]*+g[x>>2]+ +g[c-40>>2]*+g[y>>2];if((a|0)==0){break}else{z=z+4|0;b=a;c=c+4|0}}return}function by(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0.0,ac=0,ad=0,ae=0,af=0;if((e|0)==0){i=1;return i|0}if((f|0)==1){j=b}else if((f|0)==2){j=d}else{i=0;return i|0}d=e>>>0<10;f=a+40|0;k=b;if(d){l=e<<2;cF(f|0,k|0,l)|0;m=a+19420|0;n=j;cF(m|0,n|0,l)|0}else{cF(f|0,k|0,40)|0;f=a+19420|0;l=j;cF(f|0,l|0,40)|0}l=a+38760|0;f=a+38764|0;n=a+80|0;m=a+19460|0;o=a+9728|0;p=a+38784|0;q=a+29108|0;r=a+19376|0;s=a+38756|0;t=a+38768|0;u=a+38776|0;v=a+9732|0;w=a+29112|0;x=a+84|0;y=a+19464|0;z=t;A=0;B=e;while(1){if((B|0)<=0){break}C=c[f>>2]|0;D=(c[l>>2]|0)-C|0;E=(B|0)>(D|0)?D:B;if((A|0)<10){D=10-A|0;F=(E|0)>(D|0)?D:E;G=c[m>>2]|0;H=c[n>>2]|0}else{F=E;G=j;H=b}bx(H+(A<<2)|0,(c[o>>2]|0)+(C<<2)|0,F,101656+((c[p>>2]|0)*84&-1)|0);bx(G+(A<<2)|0,(c[q>>2]|0)+(c[f>>2]<<2)|0,F,101656+((c[p>>2]|0)*84&-1)|0);C=c[f>>2]|0;E=c[p>>2]|0;do{if((F|0)==0){I=C}else{J=+g[102416+(E*20&-1)>>2];K=+g[102420+(E*20&-1)>>2];L=+g[102424+(E*20&-1)>>2];M=+g[102428+(E*20&-1)>>2];N=+g[102432+(E*20&-1)>>2];D=(c[r>>2]|0)+(C<<2)|0;O=F;P=(c[o>>2]|0)+(C<<2)|0;while(1){Q=O-1|0;g[D>>2]=+g[P>>2]*J- +g[D-4>>2]*K+ +g[P-4>>2]*L- +g[D-8>>2]*M+ +g[P-8>>2]*N;if((Q|0)==0){break}else{D=D+4|0;O=Q;P=P+4|0}}P=c[f>>2]|0;O=c[p>>2]|0;N=+g[102416+(O*20&-1)>>2];M=+g[102420+(O*20&-1)>>2];L=+g[102424+(O*20&-1)>>2];K=+g[102428+(O*20&-1)>>2];J=+g[102432+(O*20&-1)>>2];O=(c[s>>2]|0)+(P<<2)|0;D=F;Q=(c[q>>2]|0)+(P<<2)|0;while(1){P=D-1|0;g[O>>2]=+g[Q>>2]*N- +g[O-4>>2]*M+ +g[Q-4>>2]*L- +g[O-8>>2]*K+ +g[Q-8>>2]*J;if((P|0)==0){break}else{O=O+4|0;D=P;Q=Q+4|0}}Q=c[f>>2]|0;D=c[r>>2]|0;O=D+(Q<<2)|0;P=c[s>>2]|0;R=P+(Q<<2)|0;S=(F|0)%8&-1;if((S|0)==0){T=O;U=R}else{V=Q+S|0;W=P+(V<<2)|0;P=O;O=R;R=S;J=+h[t>>3];K=+h[u>>3];while(1){S=R-1|0;L=+g[P>>2];M=J+L*L;h[t>>3]=M;L=+g[O>>2];N=K+L*L;h[u>>3]=N;if((S|0)==0){break}else{P=P+4|0;O=O+4|0;R=S;J=M;K=N}}T=D+(V<<2)|0;U=W}if((F+7|0)>>>0<15){I=Q;break}R=T;O=U;P=(F|0)/8&-1;K=+h[t>>3];J=+h[u>>3];while(1){S=P-1|0;N=+g[R>>2];M=+g[R+4>>2];L=+g[R+8>>2];X=+g[R+12>>2];Y=+g[R+16>>2];Z=+g[R+20>>2];_=+g[R+24>>2];$=+g[R+28>>2];aa=K+(N*N+M*M+L*L+X*X+Y*Y+Z*Z+_*_+$*$);h[t>>3]=aa;$=+g[O>>2];_=+g[O+4>>2];Z=+g[O+8>>2];Y=+g[O+12>>2];X=+g[O+16>>2];L=+g[O+20>>2];M=+g[O+24>>2];N=+g[O+28>>2];ab=J+($*$+_*_+Z*Z+Y*Y+X*X+L*L+M*M+N*N);h[u>>3]=ab;if((S|0)==0){I=Q;break}else{R=R+32|0;O=O+32|0;P=S;K=aa;J=ab}}}}while(0);C=B-F|0;E=F+A|0;P=I+F|0;c[f>>2]=P;O=c[l>>2]|0;if((P|0)==(O|0)){J=+aG(+((+h[t>>3]+ +h[u>>3])/+(P|0)*.5+1.0e-37))*1.0e3;if(J>0.0){ac=~~J}else{ac=0}R=a+38792+((ac>>>0>11999?11999:ac)<<2)|0;c[R>>2]=(c[R>>2]|0)+1;cE(z|0,0,16);R=c[f>>2]|0;cH(v|0,a+9732+(R<<2)|0,40);cH(w|0,a+29112+(R<<2)|0,40);cH(x|0,a+84+(R<<2)|0,40);cH(y|0,a+19464+(R<<2)|0,40);c[f>>2]=0;ad=0;ae=c[l>>2]|0}else{ad=P;ae=O}if((ad|0)>(ae|0)){i=0;af=901;break}else{A=E;B=C}}if((af|0)==901){return i|0}af=a;if(d){d=10-e|0;B=d<<2;cH(af|0,a+(e<<2)|0,B|0);cH(a+19380|0,a+19380+(e<<2)|0,B|0);B=a+(d<<2)|0;A=e<<2;cF(B|0,k|0,A)|0;k=a+19380+(d<<2)|0;d=j;cF(k|0,d|0,A)|0;i=1;return i|0}else{A=e-10|0;e=b+(A<<2)|0;cF(af|0,e|0,40)|0;e=a+19380|0;a=j+(A<<2)|0;cF(e|0,a|0,40)|0;i=1;return i|0}return 0}function bz(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0;g=i;i=i+1024|0;h=g|0;if((d|0)==0){j=0;i=g;return j|0}k=d+288|0;l=c[k>>2]|0;if((l|0)==0){j=0;i=g;return j|0}m=l+85696|0;n=c[m>>2]|0;if((n&4|0)!=0){j=0;i=g;return j|0}o=c[l+85704>>2]|0;if((o|0)==0){p=0}else{p=cG(o|0)|0}o=c[l+85708>>2]|0;if((o|0)==0){q=0}else{q=cG(o|0)|0}o=c[l+85712>>2]|0;if((o|0)==0){r=0}else{r=cG(o|0)|0}o=c[l+85716>>2]|0;if((o|0)==0){s=0}else{s=cG(o|0)|0}do{if(!(p>>>0>30|q>>>0>30|r>>>0>30|s>>>0>30)){if((s>>>0<29|(c[l+85720>>2]|0)==0)&(n&10|0)==0){j=0}else{break}i=g;return j|0}}while(0);n=c[d+4>>2]|0;do{if((n|0)!=-1){d=h|0;u=+(n>>>0>>>0)*1.0e3/+(c[l+60>>2]|0);if(u>4294967295.0){aF(d|0,100192,(t=i,i=i+8|0,c[t>>2]=-1,t)|0)|0}else{if(u<0.0){v=0}else{v=~~u}aF(d|0,100192,(t=i,i=i+8|0,c[t>>2]=v,t)|0)|0}s=c[k>>2]|0;if((s|0)==0){break}r=s+85696|0;q=c[r>>2]|0;p=s+85744|0;o=p;while(1){w=c[o>>2]|0;if((w|0)==0){x=929;break}if((c[w+4>>2]|0)==1414284622){y=w;x=937;break}else{o=w|0}}do{if((x|0)==929){o=cC(36)|0;if((o|0)==0){break}if((c[o-4>>2]&3|0)!=0){cE(o|0,0,36)}w=o;o=s+85748|0;z=c[o>>2]|0;do{if((z|0)==0){x=934}else{if((c[p>>2]|0)==0){x=934;break}c[z>>2]=w}}while(0);if((x|0)==934){c[p>>2]=w}c[o>>2]=w;y=w;x=937}}while(0);if((x|0)==937){c[y+4>>2]=1414284622;p=0;s=88;while(1){a[y+8+p|0]=s;z=p+1|0;if((z|0)>2){break}p=z;s=a[100960+z|0]|0}s=y+12|0;if((s|0)!=0){cD(c[s>>2]|0);c[s>>2]=0}c[y+16>>2]=0;c[y+20>>2]=0;s=y+24|0;do{if((s|0)==0){A=0}else{cD(c[s>>2]|0);c[s>>2]=0;p=0;while(1){B=p+1|0;if((a[h+p|0]|0)==0){break}else{p=B}}if((p|0)==0){A=0;break}w=(B|0)==0?0:B;o=cC(w)|0;if((o|0)==0){c[s>>2]=0;A=0;break}if((c[o-4>>2]&3|0)!=0){cE(o|0,0,w|0)}c[s>>2]=o;cF(o|0,d|0,p)|0;a[(c[s>>2]|0)+p|0]=0;A=p}}while(0);c[y+28>>2]=A;c[y+32>>2]=0;c[r>>2]=c[r>>2]|3}c[r>>2]=q}}while(0);y=l+85728|0;do{if((c[y>>2]|0)==0){C=0;D=10}else{A=c[l+85732>>2]|0;if((A|0)==0){C=0;D=10;break}B=c[l+85740>>2]|0;if((B|0)==2){E=100320}else if((B|0)==3){E=100264}else if((B|0)==1){E=100472}else{C=0;D=10;break}C=E;D=(cG(E|0)|0)+24+A|0}}while(0);E=l+85744|0;A=c[E>>2]|0;if((A|0)==0){F=D}else{B=D;D=A;while(1){A=c[D+4>>2]|0;do{if((A|0)==1129270605|(A|0)==1431520594){h=c[D+16>>2]|0;if((c[D+20>>2]|0)==1){G=(h<<1)+16|0}else{G=h+15|0}h=c[D+28>>2]|0;if((c[D+32>>2]|0)==1){H=(h<<1)+G|0;break}else{H=h+G|0;break}}else{h=A&-16777216;if(!((h|0)==1459617792|(h|0)==0)){h=c[D+16>>2]|0;x=(h|0)!=0;if((c[D+32>>2]|0)!=1){H=(c[D+28>>2]|0)+(x?h+12|0:11)|0;break}if(x){I=(h<<1)+13|0}else{I=11}H=(c[D+28>>2]<<1)+I|0;break}h=c[D+16>>2]|0;do{if((h|0)==0){J=10}else{if((c[D+20>>2]|0)==1){J=(h<<1)+13|0;break}else{J=h+12|0;break}}}while(0);h=c[D+28>>2]|0;if((h|0)==0){H=J;break}if((c[D+32>>2]|0)==1){H=J-1+h|0;break}else{H=h+J|0;break}}}while(0);A=H+B|0;q=c[D>>2]|0;if((q|0)==0){F=A;break}else{B=A;D=q}}}if((c[m>>2]&32|0)==0){K=F}else{K=(c[l+85736>>2]|0)+F|0}if(K>>>0>f>>>0){j=K;i=g;return j|0}if((e|0)==0){j=0;i=g;return j|0}a[e]=73;a[e+1|0]=68;a[e+2|0]=51;a[e+3|0]=3;a[e+4|0]=0;a[e+5|0]=0;f=K-10|0;a[e+6|0]=f>>>21&127;a[e+7|0]=f>>>14&127;a[e+8|0]=f>>>7&127;F=e+10|0;a[e+9|0]=f&127;f=c[E>>2]|0;if((f|0)==0){L=F}else{E=F;F=f;while(1){f=c[F+4>>2]|0;do{if((f|0)==1129270605|(f|0)==1431520594){m=F+20|0;D=F+16|0;B=c[D>>2]|0;if((c[m>>2]|0)==1){M=(B<<1)+16|0}else{M=B+15|0}B=F+32|0;H=F+28|0;J=(c[H>>2]<<((c[B>>2]|0)==1&1))+M|0;if(J>>>0<=10){N=E;break}a[E+3|0]=f&255;a[E+2|0]=f>>>8&255;a[E+1|0]=f>>>16&255;a[E]=f>>>24&255;I=J-10|0;a[E+7|0]=I&255;a[E+6|0]=I>>>8&255;a[E+5|0]=I>>>16&255;a[E+4|0]=I>>>24&255;a[E+8|0]=0;a[E+9|0]=0;I=F+24|0;a[E+10|0]=(c[B>>2]|0)==1&1;a[E+11|0]=a[F+8|0]|0;a[E+12|0]=a[F+9|0]|0;J=E+14|0;a[E+13|0]=a[F+10|0]|0;G=F+12|0;if((c[m>>2]|0)==1){m=c[G>>2]|0;q=c[D>>2]|0;if((q|0)==0){O=J}else{A=b[m>>1]|0;r=A<<16>>16==-2;h=q;p=m;m=J;x=A;while(1){A=h-1|0;k=p+2|0;if(r){v=aL(x|0)|0;P=(v&65535)>>>8&255;Q=v&255}else{P=(x&65535)>>>8&255;Q=x&255}a[m]=Q;a[m+1|0]=P;if((A|0)==0){break}h=A;p=k;m=m+2|0;x=b[k>>1]|0}O=E+((q<<1)+14)|0}a[O]=0;a[O+1|0]=0;R=O+2|0}else{x=c[D>>2]|0;if((x|0)==0){S=J}else{m=J;p=c[G>>2]|0;h=x;while(1){r=h-1|0;a[m]=a[p]|0;if((r|0)==0){break}else{m=m+1|0;p=p+1|0;h=r}}S=E+(x+14)|0}a[S]=0;R=S+1|0}if((c[B>>2]|0)!=1){h=c[H>>2]|0;if((h|0)==0){N=R;break}p=R;m=c[I>>2]|0;G=h;while(1){J=G-1|0;a[p]=a[m]|0;if((J|0)==0){break}else{p=p+1|0;m=m+1|0;G=J}}N=R+h|0;break}G=c[I>>2]|0;m=c[H>>2]|0;if((m|0)==0){N=R;break}p=b[G>>1]|0;B=p<<16>>16==-2;x=m;J=G;G=R;D=p;while(1){p=x-1|0;q=J+2|0;if(B){r=aL(D|0)|0;T=(r&65535)>>>8&255;U=r&255}else{T=(D&65535)>>>8&255;U=D&255}a[G]=U;a[G+1|0]=T;if((p|0)==0){break}x=p;J=q;G=G+2|0;D=b[q>>1]|0}N=R+(m<<1)|0}else{D=f&-16777216;if(!((D|0)==1459617792|(D|0)==0)){D=F+32|0;G=F+16|0;J=c[G>>2]|0;x=(J|0)!=0;if((c[D>>2]|0)==1){if(x){V=(J<<1)+13|0}else{V=11}W=(c[F+28>>2]<<1)+V|0}else{W=(c[F+28>>2]|0)+(x?J+12|0:11)|0}if(W>>>0<=10){N=E;break}a[E+3|0]=f&255;a[E+2|0]=f>>>8&255;a[E+1|0]=f>>>16&255;a[E]=f>>>24&255;J=W-10|0;a[E+7|0]=J&255;a[E+6|0]=J>>>8&255;a[E+5|0]=J>>>16&255;a[E+4|0]=J>>>24&255;a[E+8|0]=0;a[E+9|0]=0;J=F+24|0;x=E+11|0;a[E+10|0]=(c[D>>2]|0)==1&1;B=c[G>>2]|0;do{if((B|0)==0){X=x}else{G=F+12|0;if((c[F+20>>2]|0)!=1){H=x;I=c[G>>2]|0;h=B;while(1){q=h-1|0;a[H]=a[I]|0;if((q|0)==0){break}else{H=H+1|0;I=I+1|0;h=q}}a[E+(B+11)|0]=0;X=E+(B+12)|0;break}h=c[G>>2]|0;I=b[h>>1]|0;H=I<<16>>16==-2;q=B;p=h;h=x;r=I;while(1){I=q-1|0;k=p+2|0;if(H){A=aL(r|0)|0;Y=(A&65535)>>>8&255;Z=A&255}else{Y=(r&65535)>>>8&255;Z=r&255}a[h]=Z;a[h+1|0]=Y;if((I|0)==0){break}q=I;p=k;h=h+2|0;r=b[k>>1]|0}r=B<<1;a[E+(r+11)|0]=0;a[E+(r+12)|0]=0;X=E+(r+13)|0}}while(0);if((c[D>>2]|0)!=1){B=c[F+28>>2]|0;if((B|0)==0){N=X;break}x=X;m=c[J>>2]|0;r=B;while(1){h=r-1|0;a[x]=a[m]|0;if((h|0)==0){break}else{x=x+1|0;m=m+1|0;r=h}}N=X+B|0;break}r=c[J>>2]|0;m=c[F+28>>2]|0;if((m|0)==0){N=X;break}x=b[r>>1]|0;D=x<<16>>16==-2;h=m;p=r;r=X;q=x;while(1){x=h-1|0;H=p+2|0;if(D){G=aL(q|0)|0;_=(G&65535)>>>8&255;$=G&255}else{_=(q&65535)>>>8&255;$=q&255}a[r]=$;a[r+1|0]=_;if((x|0)==0){break}h=x;p=H;r=r+2|0;q=b[H>>1]|0}N=X+(m<<1)|0;break}q=F+16|0;r=c[q>>2]|0;do{if((r|0)==0){aa=10}else{if((c[F+20>>2]|0)==1){aa=(r<<1)+13|0;break}else{aa=r+12|0;break}}}while(0);r=F+28|0;m=c[r>>2]|0;do{if((m|0)==0){ab=aa}else{if((c[F+32>>2]|0)==1){ab=aa-1+m|0;break}else{ab=m+aa|0;break}}}while(0);if(ab>>>0<=10){N=E;break}a[E+3|0]=f&255;a[E+2|0]=f>>>8&255;a[E+1|0]=f>>>16&255;a[E]=f>>>24&255;m=ab-10|0;a[E+7|0]=m&255;a[E+6|0]=m>>>8&255;a[E+5|0]=m>>>16&255;a[E+4|0]=m>>>24&255;a[E+8|0]=0;m=E+10|0;a[E+9|0]=0;do{if((c[q>>2]|0)==0){ac=m}else{p=F+20|0;h=E+11|0;a[m]=(c[p>>2]|0)==1&1;D=F+12|0;if((c[p>>2]|0)!=1){p=c[q>>2]|0;if((p|0)==0){ad=h}else{J=h;B=c[D>>2]|0;H=p;while(1){x=H-1|0;a[J]=a[B]|0;if((x|0)==0){break}else{J=J+1|0;B=B+1|0;H=x}}ad=E+(p+11)|0}a[ad]=0;ac=ad+1|0;break}H=c[D>>2]|0;B=c[q>>2]|0;if((B|0)==0){ae=h}else{J=b[H>>1]|0;x=J<<16>>16==-2;G=B;k=H;H=h;I=J;while(1){J=G-1|0;A=k+2|0;if(x){v=aL(I|0)|0;af=(v&65535)>>>8&255;ag=v&255}else{af=(I&65535)>>>8&255;ag=I&255}a[H]=ag;a[H+1|0]=af;if((J|0)==0){break}G=J;k=A;H=H+2|0;I=b[A>>1]|0}ae=E+((B<<1)+11)|0}a[ae]=0;a[ae+1|0]=0;ac=ae+2|0}}while(0);q=F+24|0;if((c[F+32>>2]|0)!=1){m=c[r>>2]|0;if((m|0)==0){N=ac;break}I=ac;H=c[q>>2]|0;k=m;while(1){G=k-1|0;a[I]=a[H]|0;if((G|0)==0){break}else{I=I+1|0;H=H+1|0;k=G}}N=ac+m|0;break}k=c[q>>2]|0;H=c[r>>2]|0;if((H|0)==0){N=ac;break}I=b[k>>1]|0;if((I<<16>>16|0)==(-2|0)|(I<<16>>16|0)==(-257|0)){G=H-1|0;if((G|0)==0){N=ac;break}else{ah=G;ai=k+2|0}}else{ah=H;ai=k}k=I<<16>>16==-2;I=ai;H=ac;G=ah;while(1){x=G-1|0;h=b[I>>1]|0;if(k){aj=aL(h|0)|0}else{aj=h}a[H]=(aj-32&65535)>223?32:aj&255;if((x|0)==0){break}I=I+2|0;H=H+1|0;G=x}N=ac+ah|0}}while(0);f=c[F>>2]|0;if((f|0)==0){L=N;break}else{E=N;F=f}}}do{if((C|0)==0){ak=L}else{F=c[y>>2]|0;N=c[l+85732>>2]|0;if((F|0)==0|(N|0)==0){ak=L;break}a[L+3|0]=67;a[L+2|0]=73;a[L+1|0]=80;a[L]=65;E=N+4+(cG(C|0)|0)|0;a[L+7|0]=E&255;a[L+6|0]=E>>>8&255;a[L+5|0]=E>>>16&255;a[L+4|0]=E>>>24&255;a[L+8|0]=0;a[L+9|0]=0;E=L+11|0;a[L+10|0]=0;ah=a[C]|0;if(ah<<24>>24==0){al=E}else{ac=E;E=C;aj=ah;while(1){ah=E+1|0;ai=ac+1|0;a[ac]=aj;ae=a[ah]|0;if(ae<<24>>24==0){al=ai;break}else{ac=ai;E=ah;aj=ae}}}a[al]=0;a[al+1|0]=0;a[al+2|0]=0;aj=al+3|0;E=F;ac=N;while(1){ae=ac-1|0;a[aj]=a[E]|0;if((ae|0)==0){break}else{aj=aj+1|0;E=E+1|0;ac=ae}}ak=al+(N+3)|0}}while(0);cE(ak|0,0,K+e-ak|0);j=K;i=g;return j|0}function bA(b){b=b|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0,G=0,H=0.0,I=0.0,J=0,K=0,L=0,M=0,O=0,R=0,S=0,T=0,U=0,V=0,W=0,Z=0,$=0,aa=0,ab=0,ac=0.0,ad=0.0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0.0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0.0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0.0,aC=0.0,aD=0.0,aE=0,aF=0,aH=0,aI=0,aL=0,aM=0.0,aN=0,aO=0,aP=0,aQ=0.0,aR=0.0,aS=0.0,aT=0,aU=0,aV=0,aW=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0.0,a8=0.0,a9=0.0,ba=0.0,bb=0.0,bc=0.0,bd=0.0,be=0.0,bf=0.0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0.0,bt=0,bu=0.0,bv=0,bw=0.0,bx=0.0,by=0,bA=0.0,bB=0.0,bC=0.0,bD=0,bE=0,bF=0,bG=0.0,bH=0.0,bI=0.0,bK=0,bL=0.0,bM=0.0,bN=0.0,bR=0,bS=0.0,bT=0.0,bU=0,bV=0,bW=0.0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0;e=i;i=i+3648|0;f=e|0;h=e+256|0;j=e+512|0;k=e+768|0;l=b+288|0;m=c[l>>2]|0;n=m+16|0;o=m|0;c[o>>2]=0;c[m+124>>2]=c[b+180>>2];p=c[b+32>>2]|0;c[m+140>>2]=p;if((p|0)!=0){c[b+36>>2]=0}if((c[m+85804>>2]|0)!=0){c[b+36>>2]=0}p=b+272|0;c[m+85828>>2]=c[p>>2];q=b+276|0;c[m+85832>>2]=c[q>>2];r=b+280|0;c[m+85836>>2]=c[r>>2];s=m+85756|0;c[s>>2]=c[s>>2]&-16;s=m+85796|0;if((c[s>>2]|0)==0){u=cC(2772)|0;if((u|0)==0){c[s>>2]=0;v=-2;i=e;return v|0}if((c[u-4>>2]&3|0)!=0){cE(u|0,0,2772)}c[s>>2]=u}u=m+85676|0;if((c[u>>2]|0)==0){w=cC(134792)|0;if((w|0)==0){c[u>>2]=0;cp(m);c[l>>2]=0;v=-2;i=e;return v|0}if((c[w-4>>2]&3|0)!=0){cE(w|0,0,134792)}c[u>>2]=w}w=m+160|0;c[w>>2]=c[b+120>>2];c[m+164>>2]=c[b+104>>2];c[m+168>>2]=c[b+108>>2];c[m+172>>2]=c[b+112>>2];c[m+176>>2]=c[b+116>>2];x=c[b+8>>2]|0;y=m+68|0;c[y>>2]=x;z=b+48|0;if((x|0)==1){c[z>>2]=3;A=1}else{A=(c[z>>2]|0)==3?1:2}x=m+72|0;c[x>>2]=A;A=b+52|0;if((c[z>>2]|0)==3){c[A>>2]=0;B=0}else{B=c[A>>2]|0}c[m+80>>2]=B;B=b+156|0;A=c[B>>2]|0;do{if((A|0)==0){C=c[b+168>>2]|0;if((C|0)==128){break}D=b+96|0;if((c[D>>2]|0)!=0){break}c[D>>2]=C}else if(!((A|0)==4|(A|0)==1)){c[b+56>>2]=0}}while(0);A=m+152|0;c[A>>2]=c[b+56>>2];do{if((c[B>>2]|0)==0){C=b+96|0;D=b+100|0;E=+g[D>>2];do{if((c[C>>2]|0)==0){if(E==0.0){if(E!=0.0){F=E;G=1136;break}}else{H=+N(+E);if(H>H*9.999999974752427e-7){F=E;G=1136;break}}g[D>>2]=11.024999618530273;I=11.024999618530273}else{F=E;G=1136}}while(0);if((G|0)==1136){if(F>0.0){I=F}else{break}}D=b+16|0;J=c[D>>2]|0;if((J|0)==0){K=~~(+(c[b+12>>2]|0)*.97);do{if((K|0)<8001){L=8e3}else{if((K|0)<11026){L=11025;break}if((K|0)<12001){L=12e3;break}if((K|0)<16001){L=16e3;break}if((K|0)<22051){L=22050;break}if((K|0)<24001){L=24e3;break}if((K|0)<32001){L=32e3;break}L=(K|0)<44101?44100:48e3}}while(0);c[D>>2]=L;M=L}else{M=J}c[C>>2]=~~(+(_(M<<4,c[x>>2]|0)|0)/(I*1.0e3));K=n|0;if((M|0)==44100){c[K>>2]=1;O=0;R=1}else if((M|0)==48e3){c[K>>2]=1;O=1;R=1}else if((M|0)==32e3){c[K>>2]=1;O=2;R=1}else if((M|0)==22050){c[K>>2]=0;O=0;R=0}else if((M|0)==24e3){c[K>>2]=0;O=1;R=0}else if((M|0)==16e3){c[K>>2]=0;O=2;R=0}else if((M|0)==11025){c[K>>2]=0;O=0;R=0}else if((M|0)==12e3){c[K>>2]=0;O=1;R=0}else if((M|0)==8e3){c[K>>2]=0;O=2;R=0}else{c[K>>2]=0;O=-1;R=0}c[m+20>>2]=O;if((c[A>>2]|0)!=0){break}K=c[C>>2]|0;S=(c[D>>2]|0)<16e3?2:R;T=c[66172+(S<<6)>>2]|0;U=2;while(1){V=c[66168+(S<<6)+(U<<2)>>2]|0;if((V|0)>0){W=V-K|0;Z=T-K|0;$=(((W|0)>0?W:-W|0)|0)<(((Z|0)>0?Z:-Z|0)|0)?V:T}else{$=T}V=U+1|0;if((V|0)<15){T=$;U=V}else{break}}c[C>>2]=$}}while(0);$=b+16|0;R=c[$>>2]|0;L1716:do{if((R|0)==0){O=c[B>>2]|0;if(!((O|0)==1|(O|0)==4)){aa=0;break}O=b+164|0;M=b+160|0;I=+(c[O>>2]|0)+ +g[M>>2];L=c[b+12>>2]|0;U=2;L1726:while(1){ab=c[52784+(U*24&-1)>>2]|0;do{if((L|0)==(ab|0)){F=+g[52788+(U*24&-1)>>2];if(I>=F){break}E=I/F*+g[52796+(U*24&-1)>>2];T=~~E;c[O>>2]=T;g[M>>2]=E- +(T|0)}}while(0);do{if((L|0)>=(ab|0)){ac=+g[52788+(U*24&-1)>>2];if(ac>I){break}ad=+g[52792+(U*24&-1)>>2];if(I<ad){break L1726}}}while(0);T=U+1|0;if((T|0)<9){U=T}else{aa=0;break L1716}}E=+g[52796+(U*24&-1)>>2];F=E+(I-ac)*(+g[52800+(U*24&-1)>>2]-E)/(ad-ac);L=~~F;c[O>>2]=L;g[M>>2]=F- +(L|0);c[$>>2]=ab;L=b+184|0;if((c[L>>2]|0)!=0){aa=ab;break}c[L>>2]=-1;aa=ab}else{if((R|0)<16e3){L=b+168|0;C=c[L>>2]|0;T=(C|0)>8?C:8;c[L>>2]=(T|0)<64?T:64;aa=R;break}T=b+168|0;L=c[T>>2]|0;if((R|0)<32e3){C=(L|0)>8?L:8;c[T>>2]=(C|0)<160?C:160;aa=R;break}else{C=(L|0)>32?L:32;c[T>>2]=(C|0)<320?C:320;aa=R;break}}}while(0);R=b+184|0;ab=c[R>>2]|0;if((ab|0)==0){C=c[B>>2]|0;do{if((C|0)==0){T=c[b+96>>2]&65535;L=0;while(1){if((L|0)>=16){ae=320;af=16;ag=320;ah=16;break}ai=L+1|0;aj=c[49200+(ai<<2)>>2]|0;if((((T|0)>(aj|0)?T:aj)|0)==(T|0)){L=ai}else{G=1186;break}}if((G|0)==1186){ae=aj;af=ai;ag=c[49200+(L<<2)>>2]|0;ah=L}ak=+(c[48780+(((ae-T|0)>(T-ag|0)?ah:af)<<3)>>2]|0)}else if((C|0)==3){M=c[b+168>>2]&65535;O=0;while(1){if((O|0)>=16){al=320;am=16;an=320;ao=16;break}ap=O+1|0;aq=c[49200+(ap<<2)>>2]|0;if((((M|0)>(aq|0)?M:aq)|0)==(M|0)){O=ap}else{G=1191;break}}if((G|0)==1191){al=aq;am=ap;an=c[49200+(O<<2)>>2]|0;ao=O}ak=+(c[48780+(((al-M|0)>(M-an|0)?ao:am)<<3)>>2]|0)}else if((C|0)==2){T=c[b+164>>2]|0;if(T>>>0>=10){ak=19500.0;break}I=+(c[52736+(T<<2)>>2]|0);ak=I+(+(c[52736+(T+1<<2)>>2]|0)-I)*+g[b+160>>2]}else if((C|0)==4|(C|0)==1){T=c[b+164>>2]|0;if(T>>>0>=10){ak=21500.0;break}I=+(c[52688+(T<<2)>>2]|0);ak=I+(+(c[52688+(T+1<<2)>>2]|0)-I)*+g[b+160>>2]}else{T=c[b+164>>2]|0;if(T>>>0>=10){ak=19500.0;break}I=+(c[52640+(T<<2)>>2]|0);ak=I+(+(c[52640+(T+1<<2)>>2]|0)-I)*+g[b+160>>2]}}while(0);do{if((c[z>>2]|0)==3){if(!((C|0)==0|(C|0)==3)){ar=ak;break}ar=ak*1.5}else{ar=ak}}while(0);C=~~ar;c[R>>2]=C;as=C}else{as=ab}if((aa|0)==0){ab=c[b+12>>2]|0;if((as<<1|0)>(ab|0)){C=(ab|0)/2&-1;c[R>>2]=C;at=C}else{at=as}do{if((ab|0)>47999){au=48e3}else{if((ab|0)>44099){au=44100;break}if((ab|0)>31999){au=32e3;break}if((ab|0)>23999){au=24e3;break}if((ab|0)>22049){au=22050;break}if((ab|0)>15999){au=16e3;break}if((ab|0)>11999){au=12e3;break}if((ab|0)>11024){au=11025;break}au=(ab|0)>7999?8e3:44100}}while(0);do{if((at|0)==-1){av=au}else{C=(at|0)<3971?8e3:(at|0)<4511?11025:(at|0)<5421?12e3:(at|0)<7231?16e3:(at|0)<9971?22050:(at|0)<11221?24e3:(at|0)<15251?32e3:(at|0)<15961?44100:au;if((C|0)<=(ab|0)){av=C;break}if((ab|0)>44100){av=48e3;break}if((ab|0)>32e3){av=44100;break}if((ab|0)>24e3){av=32e3;break}if((ab|0)>22050){av=24e3;break}if((ab|0)>16e3){av=22050;break}if((ab|0)>12e3){av=16e3;break}if((ab|0)>11025){av=12e3;break}av=(ab|0)>8e3?11025:8e3}}while(0);c[$>>2]=av;aw=at;ax=av}else{aw=as;ax=aa}aa=c[B>>2]|0;do{if((aa|0)==1|(aa|0)==4){as=(aw|0)>24e3?24e3:aw;av=(ax|0)/2&-1;c[R>>2]=(av|0)<(as|0)?av:as;if((aa|0)==3){G=1230}}else{as=(aw|0)>20500?20500:aw;av=(ax|0)/2&-1;c[R>>2]=(av|0)<(as|0)?av:as;if((aa|0)==3){G=1230;break}else if((aa|0)!=0){break}ar=+(_(ax<<4,c[x>>2]|0)|0);g[b+100>>2]=ar/(+(c[b+96>>2]|0)*1.0e3)}}while(0);if((G|0)==1230){ar=+(_(ax<<4,c[x>>2]|0)|0);g[b+100>>2]=ar/(+(c[b+168>>2]|0)*1.0e3)}ax=b+36|0;aa=b+60|0;if((c[ax>>2]|0)==0){c[aa>>2]=0;aw=b+64|0;c[aw>>2]=0;c[m+132>>2]=0;ay=aw}else{ay=b+64|0}aw=c[aa>>2]|0;c[m+128>>2]=aw;aa=c[ay>>2]|0;ay=m+136|0;c[ay>>2]=aa;if((aa|0)!=0){c[m+132>>2]=1}if((aw|0)==0){az=aa}else{aa=c[u>>2]|0;u=c[$>>2]|0;cE(aa|0,0,40);cE(aa+84|0,0,40);cE(aa+9732|0,0,40);cE(aa+19380|0,0,40);cE(aa+19464|0,0,40);cE(aa+29112|0,0,40);if((u|0)==48e3){c[aa+38784>>2]=0}else if((u|0)==44100){c[aa+38784>>2]=1}else if((u|0)==32e3){c[aa+38784>>2]=2}else if((u|0)==24e3){c[aa+38784>>2]=3}else if((u|0)==22050){c[aa+38784>>2]=4}else if((u|0)==16e3){c[aa+38784>>2]=5}else if((u|0)==12e3){c[aa+38784>>2]=6}else if((u|0)==11025){c[aa+38784>>2]=7}else if((u|0)==8e3){c[aa+38784>>2]=8}else{cp(m);c[l>>2]=0;v=-6;i=e;return v|0}c[aa+38760>>2]=(u+19|0)/20&-1;cE(aa+38792|0,0,48e3);cE(aa+38764|0,0,20);c[aa+80>>2]=aa+40;c[aa+19460>>2]=aa+19420;c[aa+9728>>2]=aa+124;c[aa+29108>>2]=aa+19504;c[aa+19376>>2]=aa+9772;c[aa+38756>>2]=aa+29152;cE(aa+86792|0,0,48e3);az=c[ay>>2]|0}do{if((az|0)!=0){if((c[b+40>>2]|0)!=0){break}ay=m+85808|0;aa=c[ay>>2]|0;if((aa|0)!=0){aJ(aa|0);cD(aa)}aa=cC(22e3)|0;if((aa|0)==0){aK(0)|0;c[ay>>2]=0;break}if((c[aa-4>>2]&3|0)!=0){cE(aa|0,0,22e3)}u=aa;aK(u|0)|0;c[ay>>2]=u;c[aa+21996>>2]=c[r>>2];aa=c[ay>>2]|0;if((aa|0)==0){break}c[aa+21992>>2]=c[q>>2];aa=c[ay>>2]|0;if((aa|0)==0){break}c[aa+21988>>2]=c[p>>2]}}while(0);c[m+144>>2]=c[b+128>>2];p=m+52|0;c[p>>2]=c[R>>2];R=m+56|0;c[R>>2]=c[b+188>>2];c[m+60>>2]=c[b+12>>2];q=c[$>>2]|0;$=m+64|0;c[$>>2]=q;r=m+76|0;c[r>>2]=(q|0)<24001?1:2;c[m+84760>>2]=576;az=c[B>>2]|0;if((az|0)==1|(az|0)==2|(az|0)==4){g[b+100>>2]=+g[53e3+(c[b+164>>2]<<2)>>2]}else if((az|0)==3){ar=+(_(q<<4,c[x>>2]|0)|0);g[b+100>>2]=ar/(+(c[b+168>>2]|0)*1.0e3)}else{ar=+(_(q<<4,c[x>>2]|0)|0);g[b+100>>2]=ar/(+(c[b+96>>2]|0)*1.0e3)}q=c[z>>2]|0;if((q|0)==4){c[z>>2]=1;aA=1}else{aA=q}q=m+180|0;c[q>>2]=aA;aA=c[R>>2]|0;if((aA|0)>0){ar=+(aA|0)*2.0;R=m+256|0;g[R>>2]=ar;z=c[b+196>>2]|0;if((z|0)>-1){ak=+(aA+z|0)*2.0;g[m+260>>2]=ak;aB=ak}else{g[m+260>>2]=ar;aB=ar}ak=+(c[$>>2]|0);g[R>>2]=ar/ak;ar=aB/ak;g[m+260>>2]=ar;aC=ar}else{g[m+256>>2]=0.0;g[m+260>>2]=0.0;aC=0.0}R=m+248|0;g[R>>2]=0.0;z=m+252|0;g[z>>2]=0.0;aA=c[p>>2]|0;do{if((aA|0)>0){p=c[$>>2]|0;if((aA|0)>=((p|0)/2&-1|0)){break}ar=+(aA|0)*2.0;g[z>>2]=ar;az=c[b+192>>2]|0;do{if((az|0)>-1){ak=+(aA-az|0)*2.0;g[R>>2]=ak;if(ak>=0.0){aD=ak;break}g[R>>2]=0.0;aD=0.0}else{g[R>>2]=ar;aD=ar}}while(0);ak=+(p|0);aB=aD/ak;g[R>>2]=aB;I=ar/ak;g[z>>2]=I;if(aB>0.0){aE=0;aF=999;aH=32}else{break}while(1){ak=+(aE|0)/31.0;if(ak<I){aI=aH}else{aI=(aH|0)<(aE|0)?aH:aE}if(aB<ak&ak<I){aL=(aF|0)<(aE|0)?aF:aE}else{aL=aF}az=aE+1|0;if((az|0)<32){aE=az;aF=aL;aH=aI}else{break}}g[R>>2]=(+(((aL|0)==999?aI:aL)|0)+-.75)/31.0;g[z>>2]=+(aI|0)/31.0}}while(0);aI=m+260|0;aL=m+256|0;if(aC>0.0&aC<.021774193548387097){g[aL>>2]=0.0;g[aI>>2]=0.0;cs(m,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aM=+g[aI>>2]}else{aM=aC}do{if(aM>0.0){aC=+g[aL>>2];aH=0;aF=-1;aE=-1;while(1){aD=+(aH|0)/31.0;if(aD>aC){aN=aE}else{aN=(aE|0)>(aH|0)?aE:aH}if(aC<aD&aD<aM){aO=(aF|0)>(aH|0)?aF:aH}else{aO=aF}aA=aH+1|0;if((aA|0)<32){aH=aA;aF=aO;aE=aN}else{break}}aC=+(aN|0);g[aL>>2]=aC/31.0;if((aO|0)==-1){aD=(aC+.75)/31.0;g[aI>>2]=aD;aP=0;aQ=aD;break}else{aD=(+(aO|0)+.75)/31.0;g[aI>>2]=aD;aP=0;aQ=aD;break}}else{aP=0;aQ=aM}}while(0);while(1){aM=+(aP|0)/31.0;aD=+g[aL>>2];do{if(aQ>aD){aC=(aQ-aM)/(aQ-aD+1.0e-20);if(aC>1.0){aR=0.0;break}if(aC<=0.0){aR=1.0;break}aR=+Q(+(aC*1.5707963267948966))}else{aR=1.0}}while(0);aD=+g[z>>2];aC=+g[R>>2];do{if(aD>aC){I=(aM-aC)/(aD-aC+1.0e-20);if(I>1.0){aS=0.0;break}if(I<=0.0){aS=1.0;break}aS=+Q(+(I*1.5707963267948966))}else{aS=1.0}}while(0);g[m+37040+(aP<<2)>>2]=aR*aS;aO=aP+1|0;if((aO|0)>=32){break}aP=aO;aQ=+g[aI>>2]}aI=c[$>>2]|0;aP=n|0;if((aI|0)==44100){c[aP>>2]=1;aT=0;aU=1}else if((aI|0)==48e3){c[aP>>2]=1;aT=1;aU=1}else if((aI|0)==32e3){c[aP>>2]=1;aT=2;aU=1}else if((aI|0)==22050){c[aP>>2]=0;aT=0;aU=0}else if((aI|0)==24e3){c[aP>>2]=0;aT=1;aU=0}else if((aI|0)==16e3){c[aP>>2]=0;aT=2;aU=0}else if((aI|0)==11025){c[aP>>2]=0;aT=0;aU=0}else if((aI|0)==12e3){c[aP>>2]=0;aT=1;aU=0}else if((aI|0)==8e3){c[aP>>2]=0;aT=2;aU=0}else{c[aP>>2]=0;c[m+20>>2]=-1;cp(m);c[l>>2]=0;v=-1;i=e;return v|0}R=m+20|0;c[R>>2]=aT;do{if((c[B>>2]|0)==0){if((c[A>>2]|0)!=0){c[m+84744>>2]=0;break}aT=b+96|0;z=c[aT>>2]|0;aL=(aI|0)<16e3?2:aU;aO=c[66172+(aL<<6)>>2]|0;aN=2;while(1){aE=c[66168+(aL<<6)+(aN<<2)>>2]|0;if((aE|0)>0){aF=aE-z|0;aH=aO-z|0;aV=(((aF|0)>0?aF:-aF|0)|0)<(((aH|0)>0?aH:-aH|0)|0)?aE:aO}else{aV=aO}aE=aN+1|0;if((aE|0)<15){aO=aV;aN=aE}else{break}}c[aT>>2]=aV;aN=(c[$>>2]|0)<16e3?2:c[aP>>2]|0;aO=0;while(1){if((aO|0)>=15){G=1327;break}z=c[66168+(aN<<6)+(aO<<2)>>2]|0;if((z|0)>0&(z|0)==(aV|0)){G=1329;break}else{aO=aO+1|0}}if((G|0)==1327){c[m+84744>>2]=-1}else if((G|0)==1329){c[m+84744>>2]=aO;if((aO|0)>=1){break}}cp(m);c[l>>2]=0;v=-1;i=e;return v|0}else{c[m+84744>>2]=1}}while(0);c[m+52132>>2]=0;c[m+52128>>2]=0;c[m+39840>>2]=0;c[m+284>>2]=cC(147456)|0;c[m+288>>2]=147456;c[m+296>>2]=-1;c[m+300>>2]=0;c[m+292>>2]=0;aV=((c[aP>>2]|0)*3&-1)+(c[R>>2]|0)+(-((c[$>>2]|0)<16e3&1)&6)|0;R=0;do{c[m+21360+(R<<2)>>2]=c[11888+(aV*204&-1)+(R<<2)>>2];R=R+1|0;}while((R|0)<23);R=c[m+21444>>2]|0;aU=((c[m+21448>>2]|0)-R|0)/6&-1;c[m+21508>>2]=R;c[m+21512>>2]=aU+R;c[m+21516>>2]=(aU<<1)+R;c[m+21520>>2]=(aU*3&-1)+R;c[m+21524>>2]=(aU<<2)+R;c[m+21528>>2]=(aU*5&-1)+R;c[m+21532>>2]=576;c[m+21452>>2]=c[11980+(aV*204&-1)>>2];c[m+21456>>2]=c[11984+(aV*204&-1)>>2];c[m+21460>>2]=c[11988+(aV*204&-1)>>2];c[m+21464>>2]=c[11992+(aV*204&-1)>>2];c[m+21468>>2]=c[11996+(aV*204&-1)>>2];c[m+21472>>2]=c[12e3+(aV*204&-1)>>2];c[m+21476>>2]=c[12004+(aV*204&-1)>>2];c[m+21480>>2]=c[12008+(aV*204&-1)>>2];c[m+21484>>2]=c[12012+(aV*204&-1)>>2];c[m+21488>>2]=c[12016+(aV*204&-1)>>2];c[m+21492>>2]=c[12020+(aV*204&-1)>>2];c[m+21496>>2]=c[12024+(aV*204&-1)>>2];R=c[12028+(aV*204&-1)>>2]|0;aU=m+21500|0;c[aU>>2]=R;aI=c[12032+(aV*204&-1)>>2]|0;aV=m+21504|0;c[aV>>2]=aI;A=(aI-R|0)/6&-1;c[m+21536>>2]=R;c[m+21540>>2]=A+R;c[m+21544>>2]=(A<<1)+R;c[m+21548>>2]=(A*3&-1)+R;c[m+21552>>2]=(A<<2)+R;c[m+21556>>2]=(A*5&-1)+R;c[m+21560>>2]=192;R=c[r>>2]|0;A=c[x>>2]|0;aI=(A|0)==1;if((R|0)==2){aN=aI?21:36;c[m+24>>2]=aN;aW=aN}else{aN=aI?13:21;c[m+24>>2]=aN;aW=aN}if((c[w>>2]|0)!=0){c[m+24>>2]=aW|2}c[o>>2]=-487877;o=0;aW=R;R=A;while(1){g[m+39756+(o<<2)>>2]=+(_(aW*700&-1,R)|0);A=o+1|0;if((A|0)>=19){break}o=A;aW=c[r>>2]|0;R=c[x>>2]|0}R=b+220|0;if((c[R>>2]|0)==-1){c[R>>2]=4}r=c[B>>2]|0;do{if((r|0)==1|(r|0)==4){aW=b+124|0;if((c[aW>>2]|0)<0){c[aW>>2]=2}aW=b+244|0;if((c[aW>>2]|0)<0){c[aW>>2]=0}bJ(b,((c[b+164>>2]|0)*-10&-1)+500|0);aW=b+44|0;o=c[aW>>2]|0;do{if((o|0)<0){c[aW>>2]=3;G=1352}else{if((o|0)<5){G=1352;break}if((o|0)<=7){break}c[aW>>2]=7}}while(0);if((G|0)==1352){c[aW>>2]=0}if((c[b+140>>2]|0)==0){c[m+85092>>2]=(c[$>>2]|0)>44e3&1}else{c[m+85092>>2]=0}c[m+85812>>2]=14}else if((r|0)==2){bJ(b,((c[b+164>>2]|0)*-10&-1)+500|0);if((c[b+140>>2]|0)==0){c[m+85092>>2]=(c[$>>2]|0)>44e3&1}else{c[m+85092>>2]=0}o=b+44|0;aO=c[o>>2]|0;do{if((aO|0)>6){c[o>>2]=6}else{if((aO|0)>=0){break}c[o>>2]=3}}while(0);c[m+85812>>2]=10}else{c[m+85092>>2]=0;o=b+44|0;if((c[o>>2]|0)<0){c[o>>2]=3}o=c[B>>2]|0;aO=(o|0)==0;do{if(aO){if((b|0)==0){break}if((c[b>>2]|0)!=-487877){break}c[b+168>>2]=c[b+96>>2]}}while(0);bJ(b,c[b+168>>2]|0);c[B>>2]=o;aW=m+85812|0;if(aO){c[aW>>2]=8;break}else{c[aW>>2]=6;break}}}while(0);aQ=+g[b+200>>2];r=m+84912|0;g[r>>2]=aQ;aS=+g[b+204>>2];aW=m+84916|0;g[aW>>2]=aS;if((c[b+256>>2]|0)!=0){A=b+260|0;g[r>>2]=+g[A>>2]+aQ;g[aW>>2]=+g[A>>2]+aS}if((c[B>>2]|0)==0){aY=b+168|0}else{A=m+112|0;c[A>>2]=1;aW=m+116|0;c[aW>>2]=14;r=c[$>>2]|0;w=(r|0)<16e3;if(w){c[aW>>2]=8}aN=b+172|0;aI=c[aN>>2]|0;aT=c[aP>>2]|0;do{if((aI|0)==0){aZ=r;a_=1;a$=aT}else{z=w?2:aT;aL=c[66172+(z<<6)>>2]|0;aE=2;while(1){aH=c[66168+(z<<6)+(aE<<2)>>2]|0;if((aH|0)>0){aF=aH-aI|0;aA=aL-aI|0;a0=(((aF|0)>0?aF:-aF|0)|0)<(((aA|0)>0?aA:-aA|0)|0)?aH:aL}else{a0=aL}aH=aE+1|0;if((aH|0)<15){aL=a0;aE=aH}else{break}}c[aN>>2]=a0;aE=c[aP>>2]|0;aL=c[$>>2]|0;z=(aL|0)<16e3?2:aE;aO=0;while(1){if((aO|0)>=15){G=1389;break}o=c[66168+(z<<6)+(aO<<2)>>2]|0;if((o|0)>0&(o|0)==(a0|0)){G=1391;break}else{aO=aO+1|0}}if((G|0)==1389){c[A>>2]=-1;v=-1;i=e;return v|0}else if((G|0)==1391){c[A>>2]=aO;if((aO|0)<0){v=-1}else{aZ=aL;a_=aO;a$=aE;break}i=e;return v|0}}}while(0);a0=b+176|0;aI=c[a0>>2]|0;do{if((aI|0)==0){a1=a_;a2=a$}else{aT=(aZ|0)<16e3?2:a$;w=c[66172+(aT<<6)>>2]|0;r=2;while(1){z=c[66168+(aT<<6)+(r<<2)>>2]|0;if((z|0)>0){o=z-aI|0;aH=w-aI|0;a3=(((o|0)>0?o:-o|0)|0)<(((aH|0)>0?aH:-aH|0)|0)?z:w}else{a3=w}z=r+1|0;if((z|0)<15){w=a3;r=z}else{break}}c[a0>>2]=a3;r=c[aP>>2]|0;w=(c[$>>2]|0)<16e3?2:r;aT=0;while(1){if((aT|0)>=15){G=1399;break}aE=c[66168+(w<<6)+(aT<<2)>>2]|0;if((aE|0)>0&(aE|0)==(a3|0)){break}else{aT=aT+1|0}}if((G|0)==1399){c[aW>>2]=-1;v=-1;i=e;return v|0}c[aW>>2]=aT;if((aT|0)<0){v=-1;i=e;return v|0}else{a1=c[A>>2]|0;a2=r;break}}}while(0);c[aN>>2]=c[66168+(a2<<6)+(a1<<2)>>2];c[a0>>2]=c[66168+(c[aP>>2]<<6)+(c[aW>>2]<<2)>>2];a0=c[66168+(c[aP>>2]<<6)+(c[aW>>2]<<2)>>2]|0;aW=b+168|0;a1=c[aW>>2]|0;a2=(a0|0)<(a1|0)?a0:a1;c[aW>>2]=a2;a1=c[66168+(c[aP>>2]<<6)+(c[A>>2]<<2)>>2]|0;c[aW>>2]=(a1|0)>(a2|0)?a1:a2;aY=aW}c[m+100>>2]=c[b+152>>2];c[m+156>>2]=c[ax>>2];ax=m+104|0;c[ax>>2]=c[B>>2];c[m+85096>>2]=c[b+80>>2];c[m+28>>2]=c[b+84>>2];c[m+32>>2]=c[b+88>>2];c[m+36>>2]=c[b+92>>2];aW=m+120|0;c[aW>>2]=c[b+96>>2];c[m+108>>2]=c[aY>>2];g[m+244>>2]=+g[b+100>>2];aY=c[l>>2]|0;a2=b+44|0;a1=c[a2>>2]|0;if((a1|0)==8){c[a2>>2]=7;G=1407}else if((a1|0)==7){G=1407}else if((a1|0)==6){a2=aY+28|0;if((c[a2>>2]|0)==0){c[a2>>2]=1}c[aY+40>>2]=0;c[aY+44>>2]=0;a2=aY+32|0;if((c[a2>>2]|0)==-1){c[a2>>2]=1}c[aY+36>>2]=0;c[aY+48>>2]=0}else if((a1|0)==5){a2=aY+28|0;if((c[a2>>2]|0)==0){c[a2>>2]=1}c[aY+40>>2]=0;c[aY+44>>2]=0;a2=aY+32|0;if((c[a2>>2]|0)==-1){c[a2>>2]=1}c[aY+36>>2]=0;c[aY+48>>2]=0}else if((a1|0)==4){a2=aY+28|0;if((c[a2>>2]|0)==0){c[a2>>2]=1}c[aY+40>>2]=0;c[aY+44>>2]=0;a2=aY+32|0;if((c[a2>>2]|0)==-1){c[a2>>2]=1}c[aY+36>>2]=1;c[aY+48>>2]=0}else if((a1|0)==3){a2=aY+28|0;if((c[a2>>2]|0)==0){c[a2>>2]=1}c[aY+40>>2]=1;c[aY+44>>2]=1;a2=aY+32|0;if((c[a2>>2]|0)==-1){c[a2>>2]=1}c[aY+36>>2]=1;c[aY+48>>2]=0}else if((a1|0)==2){a2=aY+28|0;if((c[a2>>2]|0)==0){c[a2>>2]=1}a2=aY+85096|0;if((c[a2>>2]|0)==0){c[a2>>2]=2}c[aY+40>>2]=1;c[aY+44>>2]=1;a2=aY+32|0;if((c[a2>>2]|0)==-1){c[a2>>2]=1}c[aY+36>>2]=1;c[aY+48>>2]=0}else if((a1|0)==1){a2=aY+28|0;if((c[a2>>2]|0)==0){c[a2>>2]=1}a2=aY+85096|0;if((c[a2>>2]|0)==0){c[a2>>2]=2}c[aY+40>>2]=2;c[aY+44>>2]=1;a2=aY+32|0;if((c[a2>>2]|0)==-1){c[a2>>2]=1}c[aY+36>>2]=1;c[aY+48>>2]=0}else if((a1|0)==0){a1=aY+28|0;if((c[a1>>2]|0)==0){c[a1>>2]=1}a1=aY+85096|0;if((c[a1>>2]|0)==0){c[a1>>2]=2}c[aY+40>>2]=2;c[aY+44>>2]=1;a1=aY+32|0;if((c[a1>>2]|0)==-1){c[a1>>2]=1}c[aY+36>>2]=1;c[aY+48>>2]=1}else{c[aY+28>>2]=0;cE(aY+36|0,0,16)}do{if((G|0)==1407){c[aY+28>>2]=0;cE(aY+36|0,0,16);a1=c[B>>2]|0;if(!((a1|0)==1|(a1|0)==4)){break}c[aY+48>>2]=-1}}while(0);aY=c[b+232>>2]|0;c[c[s>>2]>>2]=(aY|0)<0?3:aY;aS=+P(10.0,+(+g[b+236>>2]/-10.0));g[(c[s>>2]|0)+4>>2]=aS;aY=b+240|0;B=c[aY>>2]|0;if((B|0)==(-1|0)){c[aY>>2]=0;G=1452}else if((B|0)==0){G=1452}else{a4=B;G=1454}do{if((G|0)==1452){if((c[q>>2]|0)>>>0>=2){a4=0;G=1454;break}c[aY>>2]=1;c[m+184>>2]=1;a5=(b|0)==0;G=1455}}while(0);if((G|0)==1454){c[m+184>>2]=a4;if((b|0)==0){a6=1}else{a5=0;G=1455}}do{if((G|0)==1455){if((c[b>>2]|0)!=-487877){a6=a5?1:0;break}a4=b+132|0;if((c[a4>>2]|0)<0){if(a5){a6=1;break}c[a4>>2]=1}else{if(a5){a6=1;break}}a4=b+136|0;if((c[a4>>2]|0)<0){c[a4>>2]=0}a4=b+252|0;if(+g[a4>>2]<0.0){g[a4>>2]=0.0}a4=b+148|0;c[a4>>2]=c[a4>>2]|1;a6=0}}while(0);if((c[R>>2]|0)<0){c[R>>2]=4}a5=b+224|0;if(+g[a5>>2]<0.0){g[a5>>2]=4.0}a4=b+248|0;aS=+g[a4>>2];if(aS<0.0){g[a4>>2]=0.0;a7=0.0}else{a7=aS}a4=b+244|0;if((c[a4>>2]|0)<0){c[a4>>2]=1}g[m+188>>2]=a7;g[m+192>>2]=+g[b+252>>2];a7=0.0- +g[b+228>>2];aY=m+196|0;g[aY>>2]=a7;g[m+200>>2]=+P(10.0,+(a7*.10000000149011612));g[m+204>>2]=+g[a5>>2];c[m+208>>2]=c[R>>2];c[m+212>>2]=c[b+208>>2];c[m+216>>2]=c[b+212>>2];R=m+220|0;c[R>>2]=c[b+216>>2];c[m+84>>2]=c[b+132>>2];c[m+88>>2]=c[b+136>>2];c[m+92>>2]=c[a4>>2];a4=b+148|0;c[m+96>>2]=c[a4>>2]&2;a7=+((c[a4>>2]|0)>>>2&63|0);a5=m+232|0;if(a7<32.0){a8=a7}else{a8=a7+-64.0}g[a5>>2]=a8*.25;a8=+((c[a4>>2]|0)>>>8&63|0);q=m+228|0;if(a8<32.0){a9=a8}else{a9=a8+-64.0}g[q>>2]=a9*.25;a9=+((c[a4>>2]|0)>>>14&63|0);B=m+236|0;if(a9<32.0){ba=a9}else{ba=a9+-64.0}a9=ba*.25;g[B>>2]=a9;ba=+((c[a4>>2]|0)>>>20&63|0);a4=m+240|0;if(ba<32.0){bb=ba}else{bb=ba+-64.0}g[a4>>2]=bb*.25+a9;a9=+g[b+20>>2];bb=a9*0.0;ba=+g[b+24>>2];a8=a9*ba;a7=bb*ba;ba=+g[b+28>>2];aS=bb*ba;bb=a9*ba;do{if((c[y>>2]|0)==2){if((c[x>>2]|0)!=1){bc=a8;bd=a7;be=aS;bf=bb;break}bc=(a8+aS)*.5;bd=(a7+bb)*.5;be=0.0;bf=0.0}else{bc=a8;bd=a7;be=aS;bf=bb}}while(0);g[m+264>>2]=bc;g[m+268>>2]=bd;g[m+272>>2]=be;g[m+276>>2]=bf;x=m+39832|0;c[x>>2]=0;y=m+39836|0;c[y>>2]=0;if((c[ax>>2]|0)==0){ax=_(((c[aP>>2]|0)*72e3&-1)+72e3|0,c[aW>>2]|0)|0;a1=(ax|0)%(c[$>>2]|0)&-1;c[x>>2]=a1;c[y>>2]=a1}L2165:do{if(!a6){if((c[b>>2]|0)!=-487877){break}a1=c[l>>2]|0;if((a1|0)==0){break}y=a1+84040|0;c[a1+84748>>2]=0;do{if((c[b+68>>2]|0)!=0){x=c[l>>2]|0;if((c[x+85696>>2]&5|0)!=1){break}ax=bz(b,0,0)|0;a2=(ax|0)==0?0:ax;A=cC(a2)|0;if((A|0)==0){break}if((c[A-4>>2]&3|0)!=0){cE(A|0,0,a2|0)}a2=bz(b,A,ax)|0;if(a2>>>0>ax>>>0){cD(A);break}if((a2|0)!=0){ax=x+300|0;a0=x+296|0;aN=x+284|0;a3=x+292|0;aI=0;do{a$=d[A+aI|0]|0;aZ=8;while(1){a_=c[ax>>2]|0;if((a_|0)==0){c[ax>>2]=8;w=(c[a0>>2]|0)+1|0;c[a0>>2]=w;a[(c[aN>>2]|0)+w|0]=0;bg=c[ax>>2]|0}else{bg=a_}a_=(aZ|0)<(bg|0)?aZ:bg;w=aZ-a_|0;aE=bg-a_|0;c[ax>>2]=aE;aO=(c[aN>>2]|0)+(c[a0>>2]|0)|0;a[aO]=(a$>>>(w>>>0)<<aE|(d[aO]|0))&255;c[a3>>2]=(c[a3>>2]|0)+a_;if((w|0)>0){aZ=w}else{bh=0;break}}do{aZ=x+39840+(bh*48&-1)|0;c[aZ>>2]=(c[aZ>>2]|0)+8;bh=bh+1|0;}while((bh|0)<256);aI=aI+1|0;}while(aI>>>0<a2>>>0)}cD(A)}}while(0);g[a1+85684>>2]=0.0;cE(y|0,0,704);if((c[a1+156>>2]|0)==0){break}r=k|0;aT=c[l>>2]|0;a2=aT+16|0;aI=c[a2>>2]|0;if((aI|0)==1){bi=128}else{bi=(c[aT+64>>2]|0)<16e3?32:64}x=aT+104|0;if((c[x>>2]|0)==0){bj=c[aT+120>>2]|0}else{bj=bi}a3=_((aI*72e3&-1)+72e3|0,bj)|0;a0=aT+64|0;aN=c[a0>>2]|0;ax=(a3|0)/(aN|0)&-1;a3=(c[aT+24>>2]|0)+156|0;aZ=aT+85792|0;c[aZ>>2]=ax;if((ax|0)<(a3|0)|(ax|0)>2880){c[aT+156>>2]=0;break}c[aT+85784>>2]=0;c[aT+85788>>2]=0;c[aT+85760>>2]=0;c[aT+85764>>2]=0;c[aT+85768>>2]=1;c[aT+85772>>2]=0;ax=aT+85780|0;do{if((c[ax>>2]|0)==0){a3=cC(1600)|0;c[ax>>2]=a3;a$=aT+85776|0;if((a3|0)==0){c[a$>>2]=0;ct(aT,101128,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);c[aT+156>>2]=0;break L2165}else{c[a$>>2]=400;bk=c[a0>>2]|0;bl=c[a2>>2]|0;break}}else{bk=aN;bl=aI}}while(0);cE(r|0,0,2880);aI=k+1|0;aN=(((((bk|0)>15999&1|14)&255)<<1&30|bl&1)<<3|(c[aT+160>>2]|0)==0&1|2)&255;a[aI]=aN;a2=k+2|0;a0=(c[aT+84744>>2]<<2&60|c[aT+20>>2]&3)<<2|c[aT+172>>2]&1;a[a2]=a0&255;a[k+3|0]=((((c[aT+180>>2]<<2&12|c[aT+84756>>2]&3)<<1|c[aT+164>>2]&1)<<1|c[aT+168>>2]&1)<<2|c[aT+176>>2]&3)&255;a[r]=-1;ax=aN&-15;aN=(bl|0)==1;if(aN){bm=128}else{bm=(bk|0)<16e3?32:64}if((c[x>>2]|0)==0){bn=c[aT+120>>2]|0}else{bn=bm}if((c[aT+152>>2]|0)==0){a1=(bk|0)<16e3?2:bl;y=0;while(1){if((y|0)>=15){bo=-1;break}a$=c[66168+(a1<<6)+(y<<2)>>2]|0;if((a$|0)>0&(a$|0)==(bn|0)){bo=y;break}else{y=y+1|0}}bp=bo<<28>>24}else{bp=0}a[aI]=ax|(aN?10:2);a[a2]=(a0&13|bp)&255;y=c[aZ>>2]|0;if((y|0)==0){break}a1=aT+300|0;x=aT+296|0;r=aT+284|0;a$=aT+292|0;a3=1;w=255;while(1){a_=8;while(1){aO=c[a1>>2]|0;if((aO|0)==0){c[a1>>2]=8;aE=(c[x>>2]|0)+1|0;c[x>>2]=aE;a[(c[r>>2]|0)+aE|0]=0;bq=c[a1>>2]|0}else{bq=aO}aO=(a_|0)<(bq|0)?a_:bq;aE=a_-aO|0;aL=bq-aO|0;c[a1>>2]=aL;z=(c[r>>2]|0)+(c[x>>2]|0)|0;a[z]=(w>>>(aE>>>0)<<aL|(d[z]|0))&255;c[a$>>2]=(c[a$>>2]|0)+aO;if((aE|0)>0){a_=aE}else{br=0;break}}do{a_=aT+39840+(br*48&-1)|0;c[a_>>2]=(c[a_>>2]|0)+8;br=br+1|0;}while((br|0)<256);if(a3>>>0>=y>>>0){break L2165}a_=d[k+a3|0]|0;a3=a3+1|0;w=a_}}}while(0);k=m+8|0;if((c[k>>2]|0)==0){c[k>>2]=1;c[m+21312>>2]=0;k=c[s>>2]|0;bf=+(c[$>>2]|0);br=m+224|0;bq=0;while(1){bp=c[m+21360+(bq<<2)>>2]|0;bo=bq+1|0;bn=c[m+21360+(bo<<2)>>2]|0;bl=k+24+(bq<<2)|0;g[bl>>2]=9.999999933815813e+36;if((bp|0)<(bn|0)){bk=bp;be=9.999999933815813e+36;do{bd=+cq(n,bf*+(bk|0)/1152.0);bc=+g[br>>2];if(bc>0.0){bs=bd-bc}else{bs=bd+-100.0}bd=+P(10.0,+((bs+ +g[aY>>2])*.10000000149011612));be=be<bd?be:bd;g[bl>>2]=be;bk=bk+1|0;}while((bk|0)<(bn|0))}if((bo|0)<22){bq=bo}else{bt=0;break}}while(1){bq=c[m+21508+(bt<<2)>>2]|0;bn=bt+1|0;bk=c[m+21508+(bn<<2)>>2]|0;bl=k+164+(bt<<2)|0;g[bl>>2]=9.999999933815813e+36;if((bq|0)<(bk|0)){bp=bq;bs=9.999999933815813e+36;do{be=+cq(n,bf*+(bp|0)/1152.0);bd=+g[br>>2];if(bd>0.0){bu=be-bd}else{bu=be+-100.0}be=+P(10.0,+((bu+ +g[aY>>2])*.10000000149011612));bs=bs<be?bs:be;g[bl>>2]=bs;bp=bp+1|0;}while((bp|0)<(bk|0))}if((bn|0)<6){bt=bn}else{bv=0;break}}while(1){bt=m+21452+(bv<<2)|0;bk=c[bt>>2]|0;bp=bv+1|0;bl=m+21452+(bp<<2)|0;bo=c[bl>>2]|0;bq=k+112+(bv<<2)|0;g[bq>>2]=9.999999933815813e+36;if((bk|0)<(bo|0)){bm=bk;bu=9.999999933815813e+36;while(1){bs=+cq(n,bf*+(bm|0)/384.0);be=+g[br>>2];if(be>0.0){bw=bs-be}else{bw=bs+-100.0}bs=+P(10.0,+((bw+ +g[aY>>2])*.10000000149011612));be=bu<bs?bu:bs;g[bq>>2]=be;bk=bm+1|0;if((bk|0)<(bo|0)){bm=bk;bu=be}else{bx=be;break}}}else{bx=9.999999933815813e+36}g[bq>>2]=bx*+((c[bl>>2]|0)-(c[bt>>2]|0)|0);if((bp|0)<13){bv=bp}else{by=0;break}}while(1){bv=c[m+21536+(by<<2)>>2]|0;bm=by+1|0;bo=c[m+21536+(bm<<2)>>2]|0;bn=k+188+(by<<2)|0;g[bn>>2]=9.999999933815813e+36;if((bv|0)<(bo|0)){bk=bv;bx=9.999999933815813e+36;while(1){bw=+cq(n,bf*+(bk|0)/384.0);bu=+g[br>>2];if(bu>0.0){bA=bw-bu}else{bA=bw+-100.0}bw=+P(10.0,+((bA+ +g[aY>>2])*.10000000149011612));bu=bx<bw?bx:bw;g[bn>>2]=bu;bv=bk+1|0;if((bv|0)<(bo|0)){bk=bv;bx=bu}else{bB=bu;break}}}else{bB=9.999999933815813e+36}g[bn>>2]=bB*+((c[aV>>2]|0)-(c[aU>>2]|0)|0);if((bm|0)<6){by=bm}else{break}}if((c[R>>2]|0)!=0){g[k+24>>2]=9.999999682655225e-21;g[k+28>>2]=9.999999682655225e-21;g[k+32>>2]=9.999999682655225e-21;g[k+36>>2]=9.999999682655225e-21;g[k+40>>2]=9.999999682655225e-21;g[k+44>>2]=9.999999682655225e-21;g[k+48>>2]=9.999999682655225e-21;g[k+52>>2]=9.999999682655225e-21;g[k+56>>2]=9.999999682655225e-21;g[k+60>>2]=9.999999682655225e-21;g[k+64>>2]=9.999999682655225e-21;g[k+68>>2]=9.999999682655225e-21;g[k+72>>2]=9.999999682655225e-21;g[k+76>>2]=9.999999682655225e-21;g[k+80>>2]=9.999999682655225e-21;g[k+84>>2]=9.999999682655225e-21;g[k+88>>2]=9.999999682655225e-21;g[k+92>>2]=9.999999682655225e-21;g[k+96>>2]=9.999999682655225e-21;g[k+100>>2]=9.999999682655225e-21;g[k+104>>2]=9.999999682655225e-21;g[k+108>>2]=9.999999682655225e-21;g[k+164>>2]=9.999999682655225e-21;g[k+168>>2]=9.999999682655225e-21;g[k+172>>2]=9.999999682655225e-21;g[k+176>>2]=9.999999682655225e-21;g[k+180>>2]=9.999999682655225e-21;g[k+184>>2]=9.999999682655225e-21;g[k+112>>2]=9.999999682655225e-21;g[k+116>>2]=9.999999682655225e-21;g[k+120>>2]=9.999999682655225e-21;g[k+124>>2]=9.999999682655225e-21;g[k+128>>2]=9.999999682655225e-21;g[k+132>>2]=9.999999682655225e-21;g[k+136>>2]=9.999999682655225e-21;g[k+140>>2]=9.999999682655225e-21;g[k+144>>2]=9.999999682655225e-21;g[k+148>>2]=9.999999682655225e-21;g[k+152>>2]=9.999999682655225e-21;g[k+156>>2]=9.999999682655225e-21;g[k+160>>2]=9.999999682655225e-21;g[k+188>>2]=9.999999682655225e-21;g[k+192>>2]=9.999999682655225e-21;g[k+196>>2]=9.999999682655225e-21;g[k+200>>2]=9.999999682655225e-21;g[k+204>>2]=9.999999682655225e-21;g[k+208>>2]=9.999999682655225e-21}bB=+cq(n,-1.0);bA=+g[br>>2];if(bA>0.0){bC=bB-bA}else{bC=bB+-100.0}bB=+aG(+(+P(10.0,+((bC+ +g[aY>>2])*.10000000149011612))))*10.0;g[(c[s>>2]|0)+20>>2]=bB;g[3546]=0.0;s=1;do{g[14184+(s<<2)>>2]=+P(+(+(s|0)),1.3333333333333333);s=s+1|0;}while((s|0)<8208);g[16812]=0.0;s=1;bB=+g[3546];while(1){bC=+g[14184+(s<<2)>>2];g[67248+(s<<2)>>2]=+(s|0)+-.5- +P(+((bB+bC)*.5),.75);aY=s+1|0;if((aY|0)<8208){s=aY;bB=bC}else{bD=0;break}}while(1){g[53040+(bD<<2)>>2]=+aX(+(+(bD-210|0)*-.1875));s=bD+1|0;if((s|0)<257){bD=s}else{bE=0;break}}do{g[47016+(bE<<2)>>2]=+aX(+(+(bE-326|0)*.25));bE=bE+1|0;}while((bE|0)<374);c[m+85816>>2]=2;bE=2;do{bD=0;do{bD=bD+1|0;}while((c[m+21360+(bD<<2)>>2]|0)<(bE|0));bm=c[11448+(bD<<3)>>2]|0;bn=bm;while(1){if((c[m+21360+(bn+1<<2)>>2]|0)>(bE|0)){bn=bn-1|0}else{break}}s=((bn|0)<0?bm:bn)&255;a[bE-2+(m+85100)|0]=s;aY=c[11452+(bD<<3)>>2]|0;br=(s<<24>>24)+2|0;s=aY;while(1){if((c[m+21360+(br+s<<2)>>2]|0)>(bE|0)){s=s-1|0}else{break}}a[bE-1+(m+85100)|0]=((s|0)<0?aY:s)&255;bE=bE+2|0;}while((bE|0)<577);c[m+85824>>2]=12;bB=+P(10.0,+((+g[a5>>2]+-.5)*.10000000149011612));g[m+84768>>2]=bB;g[m+84772>>2]=bB;g[m+84776>>2]=bB;g[m+84780>>2]=bB;g[m+84784>>2]=bB;g[m+84788>>2]=bB;g[m+84792>>2]=bB;bB=+P(10.0,+((+g[q>>2]+-.25)*.10000000149011612));g[m+84796>>2]=bB;g[m+84800>>2]=bB;g[m+84804>>2]=bB;g[m+84808>>2]=bB;g[m+84812>>2]=bB;g[m+84816>>2]=bB;g[m+84820>>2]=bB;bB=+P(10.0,+((+g[B>>2]+-.02500000037252903)*.10000000149011612));bE=14;do{g[m+84768+(bE<<2)>>2]=bB;bE=bE+1|0;}while((bE|0)<21);g[m+84852>>2]=+P(10.0,+((+g[a4>>2]+.5)*.10000000149011612));bB=+P(10.0,+((+g[a5>>2]+-2.0)*.10000000149011612));g[m+84856>>2]=bB;g[m+84860>>2]=bB;g[m+84864>>2]=bB;bB=+P(10.0,+((+g[q>>2]+-1.0)*.10000000149011612));g[m+84868>>2]=bB;g[m+84872>>2]=bB;g[m+84876>>2]=bB;g[m+84880>>2]=bB;bB=+P(10.0,+((+g[B>>2]+-.05000000074505806)*.10000000149011612));B=7;do{g[m+84856+(B<<2)>>2]=bB;B=B+1|0;}while((B|0)<12);g[m+84904>>2]=+P(10.0,+((+g[a4>>2]+.5)*.10000000149011612))}a4=c[l>>2]|0;l=a4+16|0;B=a4+64|0;bB=+(c[B>>2]|0);bC=0.0- +g[a4+280>>2];q=a4+85800|0;do{if((c[q>>2]|0)==0){cE(j|0,0,256);a5=cC(6504)|0;do{if((a5|0)!=0){if((c[a5-4>>2]&3|0)==0){break}cE(a5|0,0,6504)}}while(0);c[q>>2]=a5;c[a5+6500>>2]=c[b+144>>2];c[a4+27800>>2]=0;c[a4+27796>>2]=0;s=0;do{aY=0;while(1){g[a4+21564+(s<<8)+(aY<<2)>>2]=100000002004087730000.0;g[a4+22588+(s<<8)+(aY<<2)>>2]=100000002004087730000.0;g[a4+24636+(s<<8)+(aY<<2)>>2]=1.0;g[a4+23612+(s<<8)+(aY<<2)>>2]=1.0;bE=aY+1|0;if((bE|0)<64){aY=bE}else{bF=0;break}}do{g[a4+26636+(s*244&-1)+(bF<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+(bF<<2)>>2]=100000002004087730000.0;bF=bF+1|0;}while((bF|0)<22);aY=a4+27780+(s<<2)|0;bE=0;do{g[a4+26636+(s*244&-1)+88+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+88+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+100+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+100+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+112+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+112+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+124+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+124+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+136+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+136+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+148+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+148+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+160+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+160+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+172+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+172+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+184+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+184+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+196+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+196+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+208+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+208+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+220+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+220+(bE<<2)>>2]=100000002004087730000.0;g[a4+26636+(s*244&-1)+232+(bE<<2)>>2]=100000002004087730000.0;g[a4+25660+(s*244&-1)+232+(bE<<2)>>2]=100000002004087730000.0;c[aY>>2]=0;bE=bE+1|0;}while((bE|0)<3);g[a4+27636+(s*36&-1)>>2]=10.0;g[a4+27636+(s*36&-1)+4>>2]=10.0;g[a4+27636+(s*36&-1)+8>>2]=10.0;g[a4+27636+(s*36&-1)+12>>2]=10.0;g[a4+27636+(s*36&-1)+16>>2]=10.0;g[a4+27636+(s*36&-1)+20>>2]=10.0;g[a4+27636+(s*36&-1)+24>>2]=10.0;g[a4+27636+(s*36&-1)+28>>2]=10.0;g[a4+27636+(s*36&-1)+32>>2]=10.0;s=s+1|0;}while((s|0)<4);g[a4+27616>>2]=0.0;g[a4+27612>>2]=0.0;s=a5;bO(s,bB,1024,576,22,a4+21360|0);bE=f|0;aY=h|0;bP(s,bB,1024,bE,aY);s=a5+2148|0;br=c[s>>2]|0;if((br|0)>0){bD=0;do{bA=+g[f+(bD<<2)>>2];if(bA<13.0){bG=0.0}else{bG=(bA+-13.0)*0.0/11.0+(24.0-bA)*0.0/11.0}g[j+(bD<<2)>>2]=+P(10.0,+(bG/10.0));bD=bD+1|0;}while((bD|0)<(br|0))}bD=a5+1204|0;bn=bD;bm=j|0;if((bQ(a5+2156|0,bD,br,bE,aY,bm)|0)!=0){break}if((c[s>>2]|0)>0){bD=a5+1716|0;n=a4+85796|0;bA=bC;k=a5+256|0;R=0;by=0;while(1){aU=bD+(by<<2)|0;aV=c[aU>>2]|0;if((aV|0)>0){bk=(aV|0)>1?aV:1;bf=+(aV|0);bo=0;bx=1.0e+37;bp=R;while(1){bu=bf*+P(10.0,+((+cq(l,bB*+(bp|0)/1024.0e3*1.0e3)+-20.0)*.1));bH=bx>bu?bu:bx;bt=bo+1|0;if((bt|0)<(aV|0)){bo=bt;bx=bH;bp=bp+1|0}else{break}}bI=bH;bK=R+bk|0}else{bI=9.999999933815813e+36;bK=R}g[(c[n>>2]|0)+212+(by<<2)>>2]=bI;bx=(+g[f+(by<<2)>>2]/10.0+-1.0)*20.0;bf=bx>6.0?30.0:bx;bx=+P(10.0,+((((c[B>>2]|0)<44e3?30.0:bf<bA?bA:bf)+-8.0)/10.0));g[k+(by<<2)>>2]=bx*+(c[aU>>2]|0);bp=by+1|0;if((bp|0)<(c[s>>2]|0)){R=bK;by=bp}else{break}}}by=a5+2160|0;R=by;k=a4+21452|0;bO(R,bB,256,192,13,k);bP(R,bB,256,bE,aY);R=a5+4308|0;n=c[R>>2]|0;if((n|0)>0){bD=a5+3876|0;br=a4+85796|0;bA=bC;bp=a5+2416|0;bo=0;aV=0;while(1){bx=+g[f+(aV<<2)>>2];if(bx<13.0){bL=-8.25}else{bL=(bx+-13.0)*-4.5/11.0+(24.0-bx)*-8.25/11.0}g[j+(aV<<2)>>2]=+P(10.0,+(bL/10.0));bt=bD+(aV<<2)|0;bl=c[bt>>2]|0;if((bl|0)>0){bq=(bl|0)>1?bl:1;bf=+(bl|0);bv=0;bu=1.0e+37;bj=bo;while(1){bw=bf*+P(10.0,+((+cq(l,bB*+(bj|0)/256.0e3*1.0e3)+-20.0)*.1));bM=bu>bw?bw:bu;bi=bv+1|0;if((bi|0)<(bl|0)){bv=bi;bu=bM;bj=bj+1|0}else{break}}bN=bM;bR=bo+bq|0}else{bN=9.999999933815813e+36;bR=bo}g[(c[br>>2]|0)+468+(aV<<2)>>2]=bN;bu=(bx/12.0+-1.0)*7.0;if(bx>12.0){bS=bu*(+Y(+(bu+1.0))*3.1+1.0)}else{bS=bu}if(bx<12.0){bT=bS*(+Y(+(1.0-bS))*2.3+1.0)}else{bT=bS}bu=bT>6.0?30.0:bT;bf=+P(10.0,+((((c[B>>2]|0)<44e3?30.0:bu<bA?bA:bu)+-8.0)/10.0));g[bp+(aV<<2)>>2]=bf*+(c[bt>>2]|0);bj=aV+1|0;bv=c[R>>2]|0;if((bj|0)<(bv|0)){bo=bR;aV=bj}else{bU=bv;break}}}else{bU=n}if((bQ(a5+4316|0,a5+3364|0,bU,bE,aY,bm)|0)!=0){break}g[12388]=3.6517412662506104;g[12386]=31.62277603149414;aV=0;while(1){bA=+(aV|0)+.5;bf=.42- +Q(+(bA*6.283185307179586*.0009765625))*.5;g[520+(aV<<2)>>2]=bf+ +Q(+(bA*12.566370614359172*.0009765625))*.08;bo=aV+1|0;if((bo|0)<1024){aV=bo}else{bV=0;break}}do{g[8+(bV<<2)>>2]=(1.0- +Q(+((+(bV|0)+.5)*6.283185307179586*.00390625)))*.5;bV=bV+1|0;}while((bV|0)<128);c[a4+85820>>2]=2;bA=bB;g[a5+6496>>2]=+X(+(-2.302585092994046/(bA*.01/192.0)));aV=a4+192|0;bf=+g[aV>>2];g[aV>>2]=bf==0.0?(c[a4+96>>2]|0)==0?3.5:1.0:bf;aV=c[s>>2]|0;if((aV|0)>0){bm=aV-1|0;aY=0;do{bE=bn+(aY<<3)+4|0;if((c[bE>>2]|0)>(bm|0)){c[bE>>2]=bm}aY=aY+1|0;}while((aY|0)<(aV|0))}bf=+P(10.0,+(+(c[a4+76>>2]|0)*576.0/bA*-1.2));aV=a4+85796|0;g[(c[aV>>2]|0)+16>>2]=bf;g[(c[aV>>2]|0)+8>>2]=.009999999776482582;g[(c[aV>>2]|0)+12>>2]=1.0;L2384:do{if((c[a4+208>>2]|0)!=-1){bf=+(c[B>>2]|0)*.0009765625;bu=0.0;bw=0.0;aY=0;bm=c[aV>>2]|0;do{bu=bf+bu;g[bm+724+(aY<<2)>>2]=1.0/+P(10.0,+(+cq(l,bu)/10.0));bm=c[aV>>2]|0;bw=bw+ +g[bm+724+(aY<<2)>>2];aY=aY+1|0;}while((aY|0)<512);bu=1.0/bw;aY=511;bt=bm;while(1){bq=bt+724+(aY<<2)|0;g[bq>>2]=bu*+g[bq>>2];bq=aY-1|0;if((bq|0)<=-1){break L2384}aY=bq;bt=c[aV>>2]|0}}}while(0);aV=c[R>>2]|0;bA=+g[b+264>>2];bu=+g[b+268>>2];bw=bA<0.0?4.400000095367432:bA;g[a5+6488>>2]=bw;g[a5+6484>>2]=bw;g[a5+6480>>2]=bw;g[a5+6492>>2]=bu<0.0?25.0:bu;bt=c[b+164>>2]|0;if((bt|0)<4){bW=-7.400000095367432}else{bu=+g[14048+(bt<<2)>>2];bW=bu+ +g[b+160>>2]*(bu- +g[14048+(bt+1<<2)>>2])}bt=by;if((aV|0)>0){aY=0;bm=aV;do{g[bt+(aY<<2)>>2]=+P(10.0,+(bW*(+(bm-aY|0)/+(bm|0))*.10000000149011612));aY=aY+1|0;bm=c[R>>2]|0;}while((aY|0)<(bm|0));if((aY|0)<64){bX=aY;bY=bt;G=1640}}else{bX=0;bY=bt;G=1640}if((G|0)==1640){bm=bX;do{g[bY+(bm<<2)>>2]=1.0;bm=bm+1|0;}while((bm|0)<64)}bm=c[s>>2]|0;bt=a5;if((bm|0)>0){aY=0;R=bm;do{g[bt+(aY<<2)>>2]=+P(10.0,+(bW*(+(R-aY|0)/+(R|0))*.10000000149011612));aY=aY+1|0;R=c[s>>2]|0;}while((aY|0)<(R|0));if((aY|0)<64){bZ=aY;b_=bt;G=1645}}else{bZ=0;b_=bt;G=1645}if((G|0)==1645){R=bZ;do{g[b_+(R<<2)>>2]=1.0;R=R+1|0;}while((R|0)<64)}R=a5+4320|0;bt=R;cF(R|0,a5|0,2160)|0;bO(bt,bB,1024,192,13,k)}}while(0);b_=c[b+124>>2]|0;b=c[aW>>2]|0;do{if((b|0)>320){aW=c[aP>>2]|0;if((b_|0)==1){bZ=c[$>>2]|0;b$=((_((aW*72e3&-1)+72e3|0,b)|0)/(bZ|0)&-1)<<3;break}else{b$=(aW*7680&-1)+7680|0;break}}else{aW=c[$>>2]|0;bZ=c[aP>>2]|0;if((aW|0)<16e3){b0=66200+(bZ<<6)|0}else{b0=66224+(bZ<<6)|0}if((b_|0)==1){b$=((_(c[b0>>2]|0,(bZ*72e3&-1)+72e3|0)|0)/(aW|0)&-1)<<3;break}else if((b_|0)==2){b$=(bZ*7680&-1)+7680|0;break}else{b$=11520;break}}}while(0);c[m+148>>2]=b$;v=0;i=e;return v|0}function bB(a,b,d,e,f,j,k,l){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,O=0,P=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0.0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0.0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0.0,aH=0.0,aI=0.0,aJ=0.0,aK=0.0,aL=0.0,aM=0.0,aN=0,aO=0.0,aP=0.0,aQ=0.0,aR=0.0,aS=0.0,aT=0.0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0;m=i;i=i+16|0;n=m|0;o=m+8|0;if((a|0)==0){p=-3;i=m;return p|0}if((c[a>>2]|0)!=-487877){p=-3;i=m;return p|0}q=c[a+288>>2]|0;if((q|0)==0){p=-3;i=m;return p|0}a=q|0;if((c[a>>2]|0)!=-487877){p=-3;i=m;return p|0}if((e|0)==0){p=0;i=m;return p|0}r=q+52152|0;s=c[r>>2]|0;do{if((s|0)==0){u=1680}else{if((c[q+52148>>2]|0)<(e|0)){cD(s);u=1680;break}else{v=s;w=c[q+52156>>2]|0;u=1693;break}}}while(0);if((u|0)==1680){s=q+52156|0;x=c[s>>2]|0;if((x|0)!=0){cD(x)}x=e<<2;if(e>>>0>65535){y=((x>>>0)/(e>>>0)>>>0|0)==4?x:-1}else{y=x}x=cC(y)|0;do{if((x|0)!=0){if((c[x-4>>2]&3|0)==0){break}cE(x|0,0,y|0)}}while(0);c[r>>2]=x;x=e<<2;if(e>>>0>65535){z=((x>>>0)/(e>>>0)>>>0|0)==4?x:-1}else{z=x}x=cC(z)|0;do{if((x|0)!=0){if((c[x-4>>2]&3|0)==0){break}cE(x|0,0,z|0)}}while(0);z=x;c[s>>2]=z;c[q+52148>>2]=e;x=c[r>>2]|0;if((x|0)==0){A=s;B=z}else{v=x;w=z;u=1693}}do{if((u|0)==1693){z=q+52156|0;if((w|0)==0){cD(v);A=z;B=c[z>>2]|0;break}x=(b|0)==0;do{if((c[q+68>>2]|0)>1){if(x|(d|0)==0){p=0;i=m;return p|0}else{bG(q,b,d,e,k,l);break}}else{if(x){p=0;i=m;return p|0}else{bG(q,b,b,e,k,l);break}}}while(0);x=q+76|0;s=c[x>>2]|0;y=s*576&-1;C=(c[a>>2]|0)!=-487877;if(C){p=C?-3:0;i=m;return p|0}C=q+296|0;D=c[C>>2]|0;E=D+1|0;do{if((D|0)<0){F=0;G=s}else{if((j|0)!=0&(E|0)>(j|0)){p=-1;i=m;return p|0}H=c[q+284>>2]|0;cF(f|0,H|0,E)|0;c[C>>2]=-1;c[q+300>>2]=0;if((E|0)<0){p=E;i=m;return p|0}else{F=E;G=c[x>>2]|0;break}}}while(0);E=c[r>>2]|0;C=c[z>>2]|0;s=(G*576&-1)+752|0;D=q+52160|0;c[n>>2]=D;H=q+68096|0;c[n+4>>2]=H;I=o|0;J=o+4|0;K=q+128|0;L=q+72|0;O=q+84036|0;P=q+84032|0;S=q+136|0;T=q+85676|0;U=(j|0)==0;V=q+64|0;W=q+60|0;X=q+12|0;Y=q+37184|0;Z=q+37188|0;_=q+37168|0;$=E;E=C;C=e;aa=f+F|0;ab=F;L2497:while(1){ac=$;ad=E;ae=C;while(1){if((ae|0)<=0){p=ab;u=1788;break L2497}c[I>>2]=ac;c[J>>2]=ad;af=c[O>>2]|0;ag=(c[x>>2]|0)*576&-1;ah=c[L>>2]|0;ai=c[V>>2]|0;aj=+(ai|0);ak=c[W>>2]|0;L2502:do{if((ak|0)<(~~(aj*.9994999766349792)|0)){u=1713}else{if((~~(aj*1.000499963760376)|0)<(ak|0)){u=1713;break}al=(ag|0)<(ae|0)?ag:ae;am=al<<2;an=0;ao=ac;while(1){ap=(c[n+(an<<2)>>2]|0)+(af<<2)|0;aq=ao;cF(ap|0,aq|0,am)|0;aq=an+1|0;if((aq|0)>=(ah|0)){ar=al;as=al;break L2502}an=aq;ao=c[o+(aq<<2)>>2]|0}}}while(0);L2508:do{if((u|0)==1713){u=0;ao=(ag|0)>0;an=0;al=ak;am=ai;aq=ac;while(1){ap=c[n+(an<<2)>>2]|0;aj=+(al|0)/+(am|0);if((al|0)==0){at=am}else{au=am;av=al;while(1){aw=(au|0)%(av|0)&-1;if((aw|0)==0){at=av;break}else{au=av;av=aw}}}av=(am|0)/(at|0)&-1;au=(av|0)>320?320:av;ax=1.0/aj;aw=ax>1.0;ay=+N(+(aj- +M(+(aj+.5))))<1.0e-4?32:31;az=ay+1|0;if((c[X>>2]|0)==0){aA=az<<2;aB=cC(aA)|0;do{if((aB|0)!=0){if((c[aB-4>>2]&3|0)==0){break}cE(aB|0,0,aA|0)}}while(0);c[Y>>2]=aB;aC=cC(aA)|0;do{if((aC|0)!=0){if((c[aC-4>>2]&3|0)==0){break}cE(aC|0,0,aA|0)}}while(0);c[Z>>2]=aC;aB=au<<1;if((aB|0)<0){cE(_|0,0,16);aD=0}else{aE=0;do{aF=cC(aA)|0;do{if((aF|0)!=0){if((c[aF-4>>2]&3|0)==0){break}cE(aF|0,0,aA|0)}}while(0);c[q+37192+(aE<<2)>>2]=aF;aE=aE+1|0;}while((aE|0)<=(aB|0));cE(_|0,0,16);aG=+(au|0)*2.0;aH=aw?3.1415927410125732:ax*3.141592653589793;aI=+(ay|0);aJ=aH/3.141592653589793;aK=aI*aH;aH=+(ay|0)*3.141592653589793;aE=(av|0)<320;aA=0;do{aL=+(aA-au|0)/aG;aC=q+37192+(aA<<2)|0;aM=0.0;aN=0;while(1){aO=(+(aN|0)-aL)/aI;aP=aO<0.0?0.0:aO;aO=aP>1.0?1.0:aP;aP=aO+-.5;if(+N(+aP)<1.0e-9){aQ=aJ}else{aR=+Q(+(aO*2.0*3.141592653589793));aS=.42-aR*.5+ +Q(+(aO*4.0*3.141592653589793))*.08;aQ=+R(+(aK*aP))*aS/(aH*aP)}aP=aQ;g[(c[aC>>2]|0)+(aN<<2)>>2]=aP;aT=aM+aP;aU=aN+1|0;if((aU|0)>(ay|0)){aV=0;break}else{aM=aT;aN=aU}}do{aN=(c[aC>>2]|0)+(aV<<2)|0;g[aN>>2]=+g[aN>>2]/aT;aV=aV+1|0;}while((aV|0)<=(ay|0));aA=aA+1|0;}while((aA|0)<=(aB|0));aD=aE?av<<1|1:641}c[X>>2]=1;aW=aD}else{aW=0}aB=c[q+37184+(an<<2)>>2]|0;L2548:do{if(ao){aA=q+37168+(an<<3)|0;aw=ay>>>1;aC=ay-aw|0;aH=+(ay&1|0)*.5;aK=+(au|0);aN=0;while(1){aJ=aj*+(aN|0)- +h[aA>>3];aF=~~+M(+aJ);if((aF+aC|0)>=(ae|0)){aX=aF;aY=aN;aZ=aC;a_=aA;break L2548}aU=aF-aw|0;a$=c[q+37192+(~~+M(+(aK+aK*(aJ-(aH+ +(aF|0)))*2.0+.5))<<2)>>2]|0;a0=0;aJ=0.0;do{a1=a0+aU|0;if((a1|0)<0){a2=aB+(a1+az<<2)|0}else{a2=aq+(a1<<2)|0}aJ=aJ+ +g[a2>>2]*+g[a$+(a0<<2)>>2];a0=a0+1|0;}while((a0|0)<=(ay|0));g[ap+(aN+af<<2)>>2]=aJ;a0=aN+1|0;if((a0|0)<(ag|0)){aN=a0}else{aX=aF;aY=a0;aZ=aC;a_=aA;break}}}else{aX=aW;aY=0;aZ=ay-(ay>>>1)|0;a_=q+37168+(an<<3)|0}}while(0);ap=aX+aZ|0;au=(ap|0)>(ae|0)?ae:ap;h[a_>>3]=+h[a_>>3]+(+(au|0)-aj*+(aY|0));do{if((au|0)<(az|0)){ap=az-au|0;do{if((ap|0)>0){g[aB>>2]=+g[aB+(au<<2)>>2];if((ap|0)>1){a3=1}else{a4=1;break}while(1){g[aB+(a3<<2)>>2]=+g[aB+(a3+au<<2)>>2];av=a3+1|0;if((av|0)<(ap|0)){a3=av}else{a4=ap;break}}}else{a4=0}}while(0);if((a4|0)<(az|0)){a5=0;a6=a4}else{break}while(1){g[aB+(a6<<2)>>2]=+g[aq+(a5<<2)>>2];ap=a6+1|0;if((ap|0)<(az|0)){a5=a5+1|0;a6=ap}else{break}}}else{ap=au+(ay^-1)|0;g[aB>>2]=+g[aq+(ap<<2)>>2];if(az>>>0>1){a7=1}else{break}do{g[aB+(a7<<2)>>2]=+g[aq+(ap+a7<<2)>>2];a7=a7+1|0;}while((a7|0)<(az|0))}}while(0);az=an+1|0;if((az|0)>=(ah|0)){ar=aY;as=au;break L2508}an=az;al=c[W>>2]|0;am=c[V>>2]|0;aq=c[o+(az<<2)>>2]|0}}}while(0);do{if((c[K>>2]|0)!=0){if((c[S>>2]|0)!=0){break}ah=c[O>>2]|0;if((by(c[T>>2]|0,q+52160+(ah<<2)|0,q+68096+(ah<<2)|0,ar,c[L>>2]|0)|0)==0){p=-6;u=1789;break L2497}}}while(0);a8=ae-as|0;a9=ac+(as<<2)|0;if((c[L>>2]|0)==2){ba=ad+(as<<2)|0}else{ba=ad}ah=(c[O>>2]|0)+ar|0;c[O>>2]=ah;ag=c[P>>2]|0;if((ag|0)<1){c[P>>2]=1728;bb=1728}else{bb=ag}c[P>>2]=bb+ar;if((ah|0)<(s|0)){ac=a9;ad=ba;ae=a8}else{break}}ae=bv(q,D,H,aa,U?0:j-ab|0)|0;if((ae|0)<0){p=ae;u=1790;break}ad=aa+ae|0;ac=ae+ab|0;ae=(c[O>>2]|0)-y|0;c[O>>2]=ae;c[P>>2]=(c[P>>2]|0)-y;ah=c[L>>2]|0;if((ah|0)>0){bc=0;bd=ae;be=ah}else{$=a9;E=ba;C=a8;aa=ad;ab=ac;continue}while(1){if((bd|0)>0){ah=c[n+(bc<<2)>>2]|0;ae=0;do{g[ah+(ae<<2)>>2]=+g[ah+(ae+y<<2)>>2];ae=ae+1|0;bf=c[O>>2]|0;}while((ae|0)<(bf|0));bg=bf;bh=c[L>>2]|0}else{bg=bd;bh=be}ae=bc+1|0;if((ae|0)<(bh|0)){bc=ae;bd=bg;be=bh}else{$=a9;E=ba;C=a8;aa=ad;ab=ac;continue L2497}}}if((u|0)==1788){i=m;return p|0}else if((u|0)==1789){i=m;return p|0}else if((u|0)==1790){i=m;return p|0}}}while(0);if((B|0)!=0){cD(B)}c[r>>2]=0;c[A>>2]=0;c[q+52148>>2]=0;ct(q,100152,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);p=-2;i=m;return p|0}function bC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return bB(a,b,c,d,e,f,3,32767.0)|0}function bD(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,O=0,P=0.0,Q=0,R=0.0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;h=i;i=i+4752|0;j=h|0;k=h+8|0;l=h+136|0;m=h+144|0;if((b|0)==0){n=-3;i=h;return n|0}if((c[b>>2]|0)!=-487877){n=-3;i=h;return n|0}o=b+288|0;p=c[o>>2]|0;if((p|0)==0){n=-3;i=h;return n|0}if((c[p>>2]|0)!=-487877){n=-3;i=h;return n|0}q=p+84032|0;r=c[q>>2]|0;if((r|0)<1){n=0;i=h;return n|0}s=(c[p+76>>2]|0)*576&-1;u=s+752|0;v=r-1152|0;r=m;cE(r|0,0,4608);w=c[p+64>>2]|0;x=+(w|0);y=c[p+60>>2]|0;if((y|0)<(~~(x*.9994999766349792)|0)){z=1799}else{if((~~(x*1.000499963760376)|0)<(y|0)){z=1799}else{A=1.0;B=v}}if((z|0)==1799){x=+(y|0)/+(w|0);A=x;B=~~(+(v|0)+16.0/x)}v=s-((B|0)%(s|0)&-1)|0;w=((v|0)<576?s:0)+v|0;c[p+84764>>2]=w;v=(w+B|0)/(s|0)&-1;do{if((v|0)>0){s=p+84748|0;B=p+84036|0;w=(f|0)==0;y=m+2304|0;C=v;D=0;E=e;F=c[s>>2]|0;while(1){G=~~(A*+(u-(c[B>>2]|0)|0));H=(G|0)>1152?1152:G;I=bB(b,r,y,(H|0)<1?1:H,E,w?0:f-D|0,0,1.0)|0;J=E+I|0;K=I+D|0;H=c[s>>2]|0;G=C-((F|0)!=(H|0)&1)|0;if((G|0)>0&(I|0)>-1){C=G;D=K;E=J;F=H}else{break}}c[q>>2]=0;if((I|0)<0){n=I}else{L=J;O=K;break}i=h;return n|0}else{c[q>>2]=0;L=e;O=0}}while(0);e=(f|0)==0;q=bq(p,l)|0;if((q|0)>=0){br(p,q);c[p+52140>>2]=0;c[p+21312>>2]=0}q=bs(p,L,e?0:f-O|0)|0;l=p+85680|0;do{if((c[p+128>>2]|0)!=0){K=c[p+85676>>2]|0;J=0;I=0;do{J=(c[K+38792+(I<<2)>>2]|0)+J|0;I=I+1|0;}while(I>>>0<12e3);if((J|0)==0){P=-24601.0}else{I=~~+Z(+(+(J>>>0>>>0)*.050000000000000044));r=12e3;u=0;while(1){Q=r-1|0;if((r|0)==0){break}v=(c[K+38792+(Q<<2)>>2]|0)+u|0;if(v>>>0<I>>>0){r=Q;u=v}else{break}}P=64.81999969482422- +(Q>>>0>>>0)/100.0}u=0;do{r=K+38792+(u<<2)|0;I=K+86792+(u<<2)|0;c[I>>2]=(c[I>>2]|0)+(c[r>>2]|0);c[r>>2]=0;u=u+1|0;}while(u>>>0<12e3);cE(K|0,0,40);cE(K+84|0,0,40);cE(K+9732|0,0,40);cE(K+19380|0,0,40);cE(K+19464|0,0,40);cE(K+29112|0,0,40);cE(K+38764|0,0,20);A=P;x=+N(+P);R=+N(+(P+24601.0));if(x>24601.0){if(R>x*9.999999974752427e-7){z=1820}else{z=1821}}else{if(R>.024600999937888446){z=1820}else{z=1821}}if((z|0)==1820){c[p+85688>>2]=~~+M(+(A*10.0+.5));break}else if((z|0)==1821){c[p+85688>>2]=0;break}}}while(0);do{if((c[p+132>>2]|0)!=0){z=p+85684|0;Q=~~+Z(+(+aG(+(+g[z>>2]/32767.0))*20.0*10.0));c[p+85692>>2]=Q;if((Q|0)>0){g[l>>2]=+M(+(32767.0/+g[z>>2]*100.0))/100.0;break}else{g[l>>2]=-1.0;break}}}while(0);if((q|0)<0){n=q;i=h;return n|0}l=L+q|0;L=q+O|0;O=e?0:f-L|0;if((c[b+68>>2]|0)==0){n=L;i=h;return n|0}n=k|0;b=c[o>>2]|0;o=j|0;do{if((b|0)!=0){j=c[b+85696>>2]|0;if((j&9|0)!=1){break}a[n]=84;a[k+1|0]=65;a[k+2|0]=71;f=j<<1&32;j=c[b+85704>>2]|0;e=k+3|0;q=30;L2676:while(1){z=(j|0)==0;Q=e;u=q;while(1){S=u-1|0;if(!z){T=a[j]|0;if(T<<24>>24!=0){break}}r=Q+1|0;a[Q]=f;if((S|0)==0){U=r;break L2676}else{Q=r;u=S}}u=Q+1|0;a[Q]=T;if((S|0)==0){U=u;break}else{j=j+1|0;e=u;q=S}}q=c[b+85708>>2]|0;e=U;j=30;L2685:while(1){K=(q|0)==0;u=e;z=j;while(1){V=z-1|0;if(!K){W=a[q]|0;if(W<<24>>24!=0){break}}r=u+1|0;a[u]=f;if((V|0)==0){X=r;break L2685}else{u=r;z=V}}z=u+1|0;a[u]=W;if((V|0)==0){X=z;break}else{q=q+1|0;e=z;j=V}}j=c[b+85712>>2]|0;e=X;q=30;L2694:while(1){z=(j|0)==0;K=e;Q=q;while(1){Y=Q-1|0;if(!z){_=a[j]|0;if(_<<24>>24!=0){break}}r=K+1|0;a[K]=f;if((Y|0)==0){$=r;break L2694}else{K=r;Q=Y}}Q=K+1|0;a[K]=_;if((Y|0)==0){$=Q;break}else{j=j+1|0;e=Q;q=Y}}q=b+85700|0;aF(o|0,100200,(t=i,i=i+8|0,c[t>>2]=c[q>>2],t)|0)|0;e=(c[q>>2]|0)!=0?o:0;q=$;j=4;L2703:while(1){Q=(e|0)==0;z=q;u=j;while(1){aa=u-1|0;if(!Q){ab=a[e]|0;if(ab<<24>>24!=0){break}}r=z+1|0;a[z]=f;if((aa|0)==0){ac=r;break L2703}else{z=r;u=aa}}u=z+1|0;a[z]=ab;if((aa|0)==0){ac=u;break}else{e=e+1|0;q=u;j=aa}}j=b+85720|0;q=c[b+85716>>2]|0;e=ac;u=(c[j>>2]|0)!=0?28:30;L2712:while(1){Q=(q|0)==0;K=e;r=u;while(1){ad=r-1|0;if(!Q){ae=a[q]|0;if(ae<<24>>24!=0){break}}I=K+1|0;a[K]=f;if((ad|0)==0){af=I;break L2712}else{K=I;r=ad}}r=K+1|0;a[K]=ae;if((ad|0)==0){af=r;break}else{q=q+1|0;e=r;u=ad}}if((c[j>>2]|0)==0){ag=af}else{a[af]=0;a[af+1|0]=c[j>>2]&255;ag=af+2|0}a[ag]=c[b+85724>>2]&255;u=b+300|0;e=b+296|0;q=b+284|0;f=b+292|0;r=0;do{Q=d[k+r|0]|0;z=8;while(1){I=c[u>>2]|0;if((I|0)==0){c[u>>2]=8;J=(c[e>>2]|0)+1|0;c[e>>2]=J;a[(c[q>>2]|0)+J|0]=0;ah=c[u>>2]|0}else{ah=I}I=(z|0)<(ah|0)?z:ah;J=z-I|0;v=ah-I|0;c[u>>2]=v;m=(c[q>>2]|0)+(c[e>>2]|0)|0;a[m]=(Q>>>(J>>>0)<<v|(d[m]|0))&255;c[f>>2]=(c[f>>2]|0)+I;if((J|0)>0){z=J}else{ai=0;break}}do{z=b+39840+(ai*48&-1)|0;c[z>>2]=(c[z>>2]|0)+8;ai=ai+1|0;}while((ai|0)<256);r=r+1|0;}while(r>>>0<128)}}while(0);ai=p+296|0;b=c[ai>>2]|0;ah=b+1|0;if((b|0)<0){aj=0;ak=(aj|0)<0;al=ak?0:L;am=al+aj|0;i=h;return am|0}if((O|0)!=0&(ah|0)>(O|0)){aj=-1;ak=(aj|0)<0;al=ak?0:L;am=al+aj|0;i=h;return am|0}O=c[p+284>>2]|0;cF(l|0,O|0,ah)|0;c[ai>>2]=-1;c[p+300>>2]=0;aj=ah;ak=(aj|0)<0;al=ak?0:L;am=al+aj|0;i=h;return am|0}function bE(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;if((a|0)==0){b=0;return b|0}d=a|0;if((c[d>>2]|0)!=-487877){b=0;return b|0}e=a+288|0;f=c[e>>2]|0;c[d>>2]=0;if((f|0)==0){g=-3}else{d=f|0;h=(c[d>>2]|0)==-487877?0:-3;c[d>>2]=0;cp(f);c[e>>2]=0;g=h}h=a+284|0;if((c[h>>2]|0)==0){b=g;return b|0}c[h>>2]=0;cD(a);b=g;return b|0}function bF(){var b=0,d=0,e=0;if(!(a[54072]|0)){b=0;do{g[49560+(b<<2)>>2]=+Y(+(+(b|0)*.001953125+1.0))/.6931471805599453;b=b+1|0;}while((b|0)<513)}a[54072]=1;b=cC(304)|0;if((b|0)==0){d=0;return d|0}if((c[b-4>>2]&3|0)!=0){cE(b|0,0,304)}cE(b|0,0,304);c[b>>2]=-487877;e=cC(85840)|0;if((e|0)==0){c[b+288>>2]=0;cD(b);d=0;return d|0}if((c[e-4>>2]&3|0)!=0){cE(e|0,0,85840)}c[b+288>>2]=e;c[b+124>>2]=2;c[b+48>>2]=4;c[b+108>>2]=1;c[b+12>>2]=44100;c[b+8>>2]=2;c[b+4>>2]=-1;c[b+36>>2]=1;c[b+44>>2]=-1;c[b+240>>2]=-1;c[b+88>>2]=-1;c[b+184>>2]=0;c[b+188>>2]=0;c[b+192>>2]=-1;c[b+196>>2]=-1;c[b+156>>2]=0;c[b+164>>2]=4;g[b+224>>2]=-1.0;c[b+168>>2]=128;c[b+172>>2]=0;c[b+176>>2]=0;c[b+180>>2]=0;c[e+112>>2]=1;c[e+116>>2]=13;c[b+132>>2]=-1;c[b+136>>2]=-1;g[b+252>>2]=-1.0;c[e+84920>>2]=180;c[e+84924>>2]=180;c[e+84928>>2]=4;c[e+84932>>2]=4;g[e+84908>>2]=1.0;g[b+264>>2]=-1.0;g[b+268>>2]=-1.0;g[b+20>>2]=1.0;g[b+24>>2]=1.0;g[b+28>>2]=1.0;c[b+232>>2]=-1;c[b+220>>2]=-1;g[b+236>>2]=0.0;c[b+244>>2]=-1;g[b+248>>2]=-1.0;c[e+84032>>2]=1728;c[e+84764>>2]=0;c[e+84036>>2]=528;c[b+60>>2]=0;c[b+64>>2]=0;c[e+136>>2]=0;c[e+128>>2]=0;c[e+132>>2]=0;c[e+85688>>2]=0;c[e+85692>>2]=0;g[e+85680>>2]=-1.0;c[b+292>>2]=1;c[b+296>>2]=1;c[b+300>>2]=1;c[b+152>>2]=0;c[b+68>>2]=1;c[b+276>>2]=4;c[b+280>>2]=4;c[b+272>>2]=4;c[b+284>>2]=1;d=b;return d|0}function bG(a,d,e,f,i,j){a=a|0;d=d|0;e=e|0;f=f|0;i=i|0;j=+j;var k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0.0,t=0;k=c[a+52152>>2]|0;l=c[a+52156>>2]|0;m=+g[a+264>>2]*j;n=+g[a+268>>2]*j;o=+g[a+272>>2]*j;p=+g[a+276>>2]*j;if((i|0)==0){if((f|0)<=0){return}a=0;q=e;r=d;while(1){j=+(b[r>>1]|0);s=+(b[q>>1]|0);g[k+(a<<2)>>2]=m*j+n*s;g[l+(a<<2)>>2]=o*j+p*s;t=a+1|0;if((t|0)<(f|0)){a=t;q=q+2|0;r=r+2|0}else{break}}return}else if((i|0)==1){if((f|0)<=0){return}r=0;q=e;a=d;while(1){s=+(c[a>>2]|0);j=+(c[q>>2]|0);g[k+(r<<2)>>2]=m*s+n*j;g[l+(r<<2)>>2]=o*s+p*j;t=r+1|0;if((t|0)<(f|0)){r=t;q=q+4|0;a=a+4|0}else{break}}return}else if((i|0)==2){if((f|0)<=0){return}a=0;q=e;r=d;while(1){j=+(c[r>>2]|0);s=+(c[q>>2]|0);g[k+(a<<2)>>2]=m*j+n*s;g[l+(a<<2)>>2]=o*j+p*s;t=a+1|0;if((t|0)<(f|0)){a=t;q=q+4|0;r=r+4|0}else{break}}return}else if((i|0)==3){if((f|0)<=0){return}r=d;q=e;a=0;while(1){s=+g[r>>2];j=+g[q>>2];g[k+(a<<2)>>2]=m*s+n*j;g[l+(a<<2)>>2]=o*s+p*j;t=a+1|0;if((t|0)<(f|0)){r=r+4|0;q=q+4|0;a=t}else{break}}return}else if((i|0)==4){if((f|0)<=0){return}i=d;d=e;e=0;while(1){j=+h[i>>3];s=+h[d>>3];g[k+(e<<2)>>2]=m*j+n*s;g[l+(e<<2)>>2]=o*j+p*s;a=e+1|0;if((a|0)<(f|0)){i=i+8|0;d=d+8|0;e=a}else{break}}return}else{return}}function bH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0,P=0.0,Q=0,R=0,S=0,T=0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0;e=i;i=i+72|0;f=e|0;h=a+72|0;if((c[h>>2]|0)<=0){i=e;return}j=a+76|0;k=f|0;l=f+68|0;m=f+36|0;n=f+60|0;o=f+44|0;p=f+56|0;q=f+48|0;r=f+32|0;s=f+4|0;t=f+28|0;u=f+8|0;v=f+24|0;w=f+12|0;x=f+20|0;y=f+16|0;z=f+64|0;A=f+40|0;B=f+52|0;C=b;b=0;while(1){do{if((c[j>>2]|0)>0){D=C+1144|0;E=0;while(1){F=1-E|0;G=a+27824+(b*4608&-1)+(F*2304&-1)|0;H=D;I=0;while(1){bI(H,G);bI(H+128|0,G+128|0);J=G+132|0;g[J>>2]=+g[J>>2]*-1.0;J=G+140|0;g[J>>2]=+g[J>>2]*-1.0;J=G+148|0;g[J>>2]=+g[J>>2]*-1.0;J=G+156|0;g[J>>2]=+g[J>>2]*-1.0;J=G+164|0;g[J>>2]=+g[J>>2]*-1.0;J=G+172|0;g[J>>2]=+g[J>>2]*-1.0;J=G+180|0;g[J>>2]=+g[J>>2]*-1.0;J=G+188|0;g[J>>2]=+g[J>>2]*-1.0;J=G+196|0;g[J>>2]=+g[J>>2]*-1.0;J=G+204|0;g[J>>2]=+g[J>>2]*-1.0;J=G+212|0;g[J>>2]=+g[J>>2]*-1.0;J=G+220|0;g[J>>2]=+g[J>>2]*-1.0;J=G+228|0;g[J>>2]=+g[J>>2]*-1.0;J=G+236|0;g[J>>2]=+g[J>>2]*-1.0;J=G+244|0;g[J>>2]=+g[J>>2]*-1.0;J=G+252|0;g[J>>2]=+g[J>>2]*-1.0;J=I+1|0;if((J|0)<9){G=G+256|0;H=H+256|0;I=J}else{break}}I=a+304+(E*10504&-1)+(b*5252&-1)+4788|0;H=a+304+(E*10504&-1)+(b*5252&-1)+4792|0;G=a+304+(E*10504&-1)+(b*5252&-1)|0;J=0;while(1){K=c[48648+(J<<2)>>2]|0;L=(c[H>>2]|0)!=0&(J|0)<2?0:c[I>>2]|0;M=a+37040+(J<<2)|0;N=+g[M>>2];do{if(N<1.0e-12){cE(G|0,0,72)}else{L2831:do{if(N<1.0){O=0;P=N;while(1){Q=a+27824+(b*4608&-1)+(F*2304&-1)+((O<<5)+K<<2)|0;g[Q>>2]=P*+g[Q>>2];Q=O+1|0;if((Q|0)>=18){break L2831}O=Q;P=+g[M>>2]}}}while(0);if((L|0)!=2){O=-9;do{Q=O+9|0;R=(Q<<5)+K|0;S=(8-O<<5)+K|0;P=+g[4616+(L*144&-1)+(O+27<<2)>>2]*+g[a+27824+(b*4608&-1)+(F*2304&-1)+(R<<2)>>2]+ +g[4616+(L*144&-1)+(O+36<<2)>>2]*+g[a+27824+(b*4608&-1)+(F*2304&-1)+(S<<2)>>2];T=O+18|0;U=+g[4616+(L*144&-1)+(Q<<2)>>2]*+g[a+27824+(b*4608&-1)+(E*2304&-1)+(R<<2)>>2]- +g[4616+(L*144&-1)+(T<<2)>>2]*+g[a+27824+(b*4608&-1)+(E*2304&-1)+(S<<2)>>2];V=+g[4904+(O+12<<2)>>2];g[f+(Q<<2)>>2]=P-V*U;g[f+(T<<2)>>2]=U+P*V;O=O+1|0;}while((O|0)<0);V=+g[l>>2]- +g[m>>2];P=+g[n>>2]- +g[o>>2];U=+g[p>>2]- +g[q>>2];W=+g[k>>2]+ +g[r>>2];X=+g[s>>2]+ +g[t>>2];Y=+g[u>>2]+ +g[v>>2];Z=+g[w>>2]+ +g[x>>2];_=W+Y-Z;g[G+68>>2]=_-(X- +g[y>>2]);$=_*.5+(X- +g[y>>2]);_=(V-P-U)*.8660253882408142;g[G+20>>2]=_+$;g[G+24>>2]=_-$;$=(+g[z>>2]- +g[A>>2])*.8660253882408142;_=X*.5+ +g[y>>2];X=U*.3420201539993286+(P*.6427876353263855+(V*.9848077297210693+$));aa=Z*.9396926164627075+(W*.1736481785774231+_-Y*-.7660444378852844);g[G+4>>2]=X+aa;g[G+8>>2]=X-aa;aa=U*.9848077297210693+(V*.6427876353263855-$-P*.3420201539993286);X=Z*-.1736481785774231+(W*.7660444378852844+_-Y*.9396926164627075);g[G+36>>2]=aa+X;g[G+40>>2]=aa-X;X=P*.9848077297210693+(V*.3420201539993286-$)-U*.6427876353263855;U=Y*-.1736481785774231+(W*.9396926164627075-_)-Z*-.7660444378852844;g[G+52>>2]=X+U;g[G+56>>2]=X-U;U=+g[r>>2]- +g[k>>2];X=+g[v>>2]- +g[u>>2];Z=+g[x>>2]- +g[w>>2];_=+g[l>>2]+ +g[m>>2];W=+g[z>>2]+ +g[A>>2];Y=+g[n>>2]+ +g[o>>2];$=+g[p>>2]+ +g[q>>2];V=_+Y+$;g[G>>2]=V+(W+ +g[B>>2]);P=V*.5-(W+ +g[B>>2]);V=(U-X+Z)*.8660253882408142;g[G+44>>2]=V+P;g[G+48>>2]=P-V;V=(+g[t>>2]- +g[s>>2])*.8660253882408142;P=+g[B>>2]-W*.5;W=$*-.7660444378852844+(Y*-.1736481785774231+(_*.9396926164627075-P));aa=Z*.6427876353263855+(X*.9848077297210693+(U*.3420201539993286+V));g[G+12>>2]=W+aa;g[G+16>>2]=W-aa;aa=_*.7660444378852844+P-Y*.9396926164627075-$*-.1736481785774231;W=U*.6427876353263855+V-X*.3420201539993286-Z*.9848077297210693;g[G+28>>2]=aa+W;g[G+32>>2]=aa-W;W=_*.1736481785774231+P-Y*-.7660444378852844-$*.9396926164627075;$=X*.6427876353263855+(U*.9848077297210693-V)-Z*.3420201539993286;g[G+60>>2]=W+$;g[G+64>>2]=W-$;break}O=K+288|0;T=K+480|0;Q=-3;while(1){S=Q+3|0;$=+g[4904+(S<<2)>>2];R=Q<<5;ab=O+R|0;ac=(8-Q<<5)+K|0;ad=Q*3&-1;g[G+(ad+9<<2)>>2]=$*+g[a+27824+(b*4608&-1)+(E*2304&-1)+(ab<<2)>>2]- +g[a+27824+(b*4608&-1)+(E*2304&-1)+(ac<<2)>>2];ae=a+27824+(b*4608&-1)+(E*2304&-1)+((14-Q<<5)+K<<2)|0;af=a+27824+(b*4608&-1)+(E*2304&-1)+(T+R<<2)|0;g[G+(ad+18<<2)>>2]=$*+g[ae>>2]+ +g[af>>2];g[G+(ad+10<<2)>>2]=$*+g[af>>2]- +g[ae>>2];ae=a+27824+(b*4608&-1)+(F*2304&-1)+((2-Q<<5)+K<<2)|0;af=a+27824+(b*4608&-1)+(F*2304&-1)+((S<<5)+K<<2)|0;g[G+(ad+19<<2)>>2]=$*+g[ae>>2]+ +g[af>>2];g[G+(ad+11<<2)>>2]=$*+g[af>>2]- +g[ae>>2];g[G+(ad+20<<2)>>2]=$*+g[a+27824+(b*4608&-1)+(F*2304&-1)+(ac<<2)>>2]+ +g[a+27824+(b*4608&-1)+(F*2304&-1)+(ab<<2)>>2];ab=Q+1|0;if((ab|0)<0){Q=ab}else{ag=0;ah=G;break}}while(1){Q=ah+24|0;$=+g[Q>>2];T=ah+60|0;W=+g[T>>2];Z=$*.13165250420570374-W;V=+g[ah>>2];O=ah+36|0;U=+g[O>>2];X=V*.7673270106315613-U;Y=$+W*.13165250420570374;W=V+U*.7673270106315613;U=Y+W;ab=ah+12|0;V=+g[ab>>2];ac=ah+48|0;$=+g[ac>>2];P=Z+X;_=(V*.4142135679721832-$)*2.069978111953089e-11;g[ah>>2]=P*1.90752519173728e-11+_;aa=(V+$*.4142135679721832)*2.069978111953089e-11;g[T>>2]=(-0.0-U)*1.90752519173728e-11+aa;$=(Z-X)*.8660254037844387*1.907525191737281e-11;X=U*.5*1.907525191737281e-11+aa;g[ab>>2]=$-X;g[Q>>2]=$+X;X=P*.5*1.907525191737281e-11-_;_=(W-Y)*.8660254037844387*1.907525191737281e-11;g[O>>2]=_+X;g[ac>>2]=X-_;ac=ag+1|0;if((ac|0)<3){ag=ac;ah=ah+4|0}else{break}}}}while(0);L2846:do{if(!((L|0)==2|(J|0)==0)){K=7;while(1){M=G+(K<<2)|0;N=+g[M>>2];_=+g[4904+(K+20<<2)>>2];ac=G+((K^-1)<<2)|0;X=+g[ac>>2];Y=+g[4904+(K+28<<2)>>2];g[ac>>2]=N*_+X*Y;g[M>>2]=N*Y-_*X;if((K|0)<=0){break L2846}K=K-1|0}}}while(0);L=J+1|0;if((L|0)<32){G=G+72|0;J=L}else{break}}J=E+1|0;ai=c[j>>2]|0;if((J|0)<(ai|0)){D=D+2304|0;E=J}else{break}}if((ai|0)!=1){break}E=a+27824+(b*4608&-1)|0;D=a+27824+(b*4608&-1)+2304|0;cF(E|0,D|0,2304)|0}}while(0);D=b+1|0;if((D|0)<(c[h>>2]|0)){C=d;b=D}else{break}}i=e;return}function bI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0,L=0.0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0.0,W=0.0,X=0,Y=0,Z=0.0,_=0.0,$=0,aa=0,ab=0.0,ac=0.0,ad=0,ae=0,af=0.0,ag=0.0,ah=0,ai=0,aj=0.0,ak=0.0,al=0.0,am=0.0,an=0.0,ao=0.0,ap=0.0,aq=0.0,ar=0.0,as=0.0;c=a-248|0;d=63944;e=-15;f=a;while(1){h=+g[d-40>>2];i=+g[d-36>>2];j=+g[d-32>>2];k=+g[d-28>>2];l=+g[d-24>>2];m=+g[d-20>>2];n=+g[d-16>>2];o=+g[d-12>>2];p=+g[d-8>>2];q=+g[d-4>>2];r=+g[d>>2];s=+g[d+4>>2];t=+g[d+8>>2];u=+g[d+12>>2];v=+g[d+16>>2];w=+g[d+20>>2];x=h*+g[f+896>>2]+i*+g[f+640>>2]+j*+g[f+384>>2]+k*+g[f+128>>2]+l*+g[f-128>>2]+m*+g[f-384>>2]+n*+g[f-640>>2]+o*+g[f-896>>2]-p*+g[c+1024>>2]-q*+g[c+768>>2]-r*+g[c+512>>2]-s*+g[c+256>>2]-t*+g[c>>2]-u*+g[c-256>>2]-v*+g[c-512>>2]-w*+g[c-768>>2];y=(h*+g[c-896>>2]+i*+g[c-640>>2]+j*+g[c-384>>2]+k*+g[c-128>>2]+l*+g[c+128>>2]+m*+g[c+384>>2]+n*+g[c+640>>2]+o*+g[c+896>>2]+p*+g[f-1024>>2]+q*+g[f-768>>2]+r*+g[f-512>>2]+s*+g[f-256>>2]+t*+g[f>>2]+u*+g[f+256>>2]+v*+g[f+512>>2]+w*+g[f+768>>2])*+g[d+24>>2];z=e<<1;g[b+(z+30<<2)>>2]=x+y;g[b+(z+31<<2)>>2]=+g[d+28>>2]*(x-y);z=e+1|0;if((z|0)<0){c=c+4|0;d=d+72|0;e=z;f=f-4|0}else{break}}y=+g[a-124>>2]*10612.802734375+(+g[a-252>>2]- +g[a+4>>2])*5302.158203125+(+g[a-380>>2]+ +g[a+132>>2])*929.7763061523438+(+g[a-508>>2]- +g[a+260>>2])*728.8010864257812+(+g[a-636>>2]+ +g[a+388>>2])*288.09765625+(+g[a-764>>2]- +g[a+516>>2])*64.91738891601562+(+g[a-892>>2]+ +g[a+644>>2])*30.125003814697266+(+g[a-1020>>2]- +g[a+772>>2])*4.101456642150879;x=+g[a-188>>2]*12804.7978515625+ +g[a-444>>2]*1945.5516357421875+ +g[a-700>>2]*313.42449951171875+ +g[a-956>>2]*20.801593780517578- +g[a+68>>2]*1995.1556396484375- +g[a+324>>2]*9.000839233398438- +g[a+580>>2]*-29.202180862426758- +g[a+836>>2];w=x-y;v=x+y;a=b+56|0;y=+g[a>>2];f=b+60|0;x=+g[f>>2]-y;u=y+v;t=w+x;s=w-x;x=v-y;e=b+112|0;y=+g[e>>2];v=+g[b>>2];w=y+v;r=(y-v)*1.9615705013275146;d=b+116|0;v=+g[d>>2];c=b+4|0;y=+g[c>>2];q=v+y;p=(v-y)*1.9615705013275146;z=b+104|0;y=+g[z>>2];A=b+8|0;v=+g[A>>2];o=y+v;n=(y-v)*1.8477590084075928;B=b+108|0;v=+g[B>>2];C=b+12|0;y=+g[C>>2];m=v+y;l=(v-y)*1.8477590084075928;D=b+96|0;y=+g[D>>2];E=b+16|0;v=+g[E>>2];k=y+v;j=(y-v)*1.662939190864563;F=b+100|0;v=+g[F>>2];G=b+20|0;y=+g[G>>2];i=v+y;h=(v-y)*1.662939190864563;H=b+88|0;y=+g[H>>2];I=b+24|0;v=+g[I>>2];J=y+v;K=b+92|0;L=+g[K>>2];M=b+28|0;N=+g[M>>2];O=L+N;P=O-J;Q=(y-v)*1.4142135623730951-P;v=(L-N)*1.4142135623730951-O-Q;O=u-J;N=J+u;u=t-P;J=P+t;t=s-Q;P=Q+s;s=x-v;Q=v+x;R=b+80|0;x=+g[R>>2];S=b+32|0;v=+g[S>>2];L=x+v;y=(x-v)*1.111140489578247;T=b+84|0;v=+g[T>>2];U=b+36|0;x=+g[U>>2];V=v+x;W=(v-x)*1.111140489578247;X=b+72|0;x=+g[X>>2];Y=b+40|0;v=+g[Y>>2];Z=x+v;_=(x-v)*.7653668522834778;$=b+76|0;v=+g[$>>2];aa=b+44|0;x=+g[aa>>2];ab=v+x;ac=(v-x)*.7653668522834778;ad=b+64|0;x=+g[ad>>2];ae=b+48|0;v=+g[ae>>2];af=x+v;ag=(x-v)*.39018064737319946;ah=b+68|0;v=+g[ah>>2];ai=b+52|0;x=+g[ai>>2];aj=v+x;ak=(v-x)*.39018064737319946;x=y+j;v=(j-y)*.7653668522834778;y=W+h;j=(h-W)*.7653668522834778;W=k+L;h=(k-L)*.7653668522834778;L=i+V;k=(i-V)*.7653668522834778;V=w+af;i=(w-af)*1.8477590084075928;af=q+aj;w=(q-aj)*1.8477590084075928;aj=ag+r;q=(ag-r)*1.8477590084075928;r=ak+p;ag=(p-ak)*1.8477590084075928;ak=o+Z;p=m+ab;al=_+n;am=ac+l;an=am-p;ao=p-ak;p=N-ak;ap=ak+N;N=(m-ab)*1.4142135623730951-an;ab=al-ao;m=J-ao;ak=ao+J;J=an-ab;an=P-ab;ao=ab+P;P=(o-Z)*1.4142135623730951-J;Z=Q-J;o=J+Q;Q=N-P;J=s-P;ab=P+s;s=(n-_)*1.4142135623730951-al-Q;al=t-Q;_=Q+t;t=(l-ac)*1.4142135623730951-am-N-s;N=u-s;am=s+u;u=O-t;s=t+O;O=V+W;t=af+L;ac=aj+x;l=r+y;Q=h+i;n=k+w;P=j+ag;aq=v-q;ar=aq-ac;as=(aj-x)*1.4142135623730951-ar;x=P-l;aj=(r-y)*1.4142135623730951-x;y=l-t;l=n-y;r=x-l;x=(af-L)*1.4142135623730951-r;L=aj-x;af=(k-w)*-1.4142135623730951-n-L;n=t-O;t=ac-n;ac=y-t;y=Q-ac;w=l-y;l=ar-w;ar=r-l;r=(V-W)*1.4142135623730951-ar;W=x-r;x=as-W;V=L-x;L=(h-i)*-1.4142135623730951-Q-V;Q=af-L;i=(v+q)*-1.4142135623730951-aq-as-Q;as=(j-ag)*-1.4142135623730951-P-aj-af-i;g[b>>2]=O+ap;g[b+124>>2]=ap-O;g[c>>2]=n+ak;g[b+120>>2]=ak-n;g[ad>>2]=t+ao;g[f>>2]=ao-t;g[ah>>2]=ac+o;g[a>>2]=o-ac;g[S>>2]=y+ab;g[K>>2]=ab-y;g[U>>2]=w+_;g[H>>2]=_-w;g[D>>2]=l+am;g[M>>2]=am-l;g[F>>2]=ar+s;g[I>>2]=s-ar;g[E>>2]=r+u;g[B>>2]=u-r;g[G>>2]=W+N;g[z>>2]=N-W;g[R>>2]=x+al;g[aa>>2]=al-x;g[T>>2]=V+J;g[Y>>2]=J-V;g[ae>>2]=L+Z;g[$>>2]=Z-L;g[ai>>2]=Q+an;g[X>>2]=an-Q;g[e>>2]=i+m;g[C>>2]=m-i;g[d>>2]=as+p;g[A>>2]=p-as;return}function bJ(a,b){a=a|0;b=b|0;var d=0,e=0;do{if((b|0)==1e3){do{if((a|0)!=0){if((c[a>>2]|0)!=-487877){break}c[a+156>>2]=4}}while(0);c[a+152>>2]=470;d=1997}else if((b|0)==1006|(b|0)==1007){do{if((a|0)!=0){if((c[a>>2]|0)!=-487877){break}c[a+156>>2]=4}}while(0);c[a+152>>2]=460;d=1996}else if((b|0)==1001|(b|0)==1004){do{if((a|0)!=0){if((c[a>>2]|0)!=-487877){break}c[a+156>>2]=4}}while(0);c[a+152>>2]=480;d=1998}else if((b|0)==1002|(b|0)==1005){do{if((a|0)!=0){if((c[a>>2]|0)!=-487877){break}c[a+156>>2]=4}}while(0);c[a+152>>2]=500;d=2e3}else if((b|0)==1003){c[a+152>>2]=320;bK(a,320)|0;if((a|0)==0){return}if((c[a>>2]|0)!=-487877){return}c[a+156>>2]=0;return}else{e=a+152|0;c[e>>2]=b;if((b|0)==410){bL(a,9);return}else if((b|0)==420){bL(a,8);return}else if((b|0)==430){bL(a,7);return}else if((b|0)==440){bL(a,6);return}else if((b|0)==450){bL(a,5);return}else if((b|0)==460){d=1996;break}else if((b|0)==470){d=1997;break}else if((b|0)==480){d=1998;break}else if((b|0)==490){bL(a,1);return}else if((b|0)==500){d=2e3;break}else{if((b-8|0)>>>0<313){bK(a,b)|0;return}else{c[e>>2]=0;return}}}}while(0);if((d|0)==1996){bL(a,4);return}else if((d|0)==1997){bL(a,3);return}else if((d|0)==1998){bL(a,2);return}else if((d|0)==2e3){bL(a,0);return}}function bK(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=b&65535;e=0;while(1){if((e|0)>=16){f=320;h=16;i=320;j=16;break}k=e+1|0;l=c[49200+(k<<2)>>2]|0;if((((d|0)>(l|0)?d:l)|0)==(d|0)){e=k}else{m=2023;break}}if((m|0)==2023){f=l;h=k;i=c[49200+(e<<2)>>2]|0;j=e}e=(f-d|0)>(d-i|0)?j:h;L2926:do{if((a|0)!=0){h=c[a>>2]|0;j=(h|0)==-487877;if(j){c[a+156>>2]=3;i=(b|0)<320?b:320;d=(i|0)>8?i:8;c[a+168>>2]=d;c[a+96>>2]=d}if((e-12|0)>>>0>4|j^1){n=h}else{h=a+148|0;c[h>>2]=c[h>>2]|2;n=-487877}do{if(e>>>0>12){h=(n|0)==-487877;if(h){o=h}else{break L2926}}else{if((n|0)==-487877){c[a+84>>2]=2;o=1;break}else{break L2926}}}while(0);h=a+132|0;if((c[h>>2]|0)==-1){c[h>>2]=c[66364+(e*52&-1)>>2]}h=a+136|0;if((c[h>>2]|0)==-1){c[h>>2]=c[66368+(e*52&-1)>>2]}h=a+252|0;if(+g[h>>2]+1.0==0.0){g[h>>2]=+g[66376+(e*52&-1)>>2];if(o){p=o}else{break}}else{h=o;if(h){p=h}else{break}}h=a+264|0;if(+g[h>>2]+1.0==0.0){g[h>>2]=+g[66380+(e*52&-1)>>2]}h=a+268|0;if(+g[h>>2]+1.0==0.0){g[h>>2]=+g[66384+(e*52&-1)>>2]}h=a+20|0;g[h>>2]=+g[h>>2]*+g[66388+(e*52&-1)>>2];h=a+200|0;j=66392+(e*52&-1)|0;if(+g[h>>2]==0.0){g[h>>2]=+g[j>>2];q=66392+(e*52&-1)|0}else{q=j}j=a+204|0;if(+g[j>>2]==0.0){g[j>>2]=+g[q>>2]*1.1}j=a+228|0;if(+g[j>>2]==0.0){g[j>>2]=+g[66396+(e*52&-1)>>2]}j=a+224|0;if(+g[j>>2]+1.0==0.0){g[j>>2]=+g[66400+(e*52&-1)>>2];if(!p){break}}else{if(!p){break}}j=a+248|0;if(+g[j>>2]+1.0!=0.0){break}g[j>>2]=+g[66404+(e*52&-1)>>2]}}while(0);g[(c[a+288>>2]|0)+280>>2]=+(c[66360+(e*52&-1)>>2]|0)/320.0*5.0;return b|0}function bL(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0.0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=(a|0)==0;do{if(d){e=2060}else{if((c[a>>2]|0)!=-487877){e=2060;break}f=c[a+156>>2]|0;if((f|0)==4|(f|0)==1){h=5984}else{e=2060}}}while(0);if((e|0)==2060){h=5232}e=a+160|0;i=+g[e>>2];f=c[h+(b*68&-1)>>2]|0;j=c[h+(b*68&-1)+4>>2]|0;k=c[h+(b*68&-1)+8>>2]|0;l=c[h+(b*68&-1)+12>>2]|0;m=+g[h+(b*68&-1)+16>>2];n=+g[h+(b*68&-1)+20>>2];o=+g[h+(b*68&-1)+24>>2];p=+g[h+(b*68&-1)+28>>2];q=+g[h+(b*68&-1)+32>>2];r=+g[h+(b*68&-1)+36>>2];s=+g[h+(b*68&-1)+40>>2];t=+g[h+(b*68&-1)+44>>2];u=c[h+(b*68&-1)+48>>2]|0;v=c[h+(b*68&-1)+52>>2]|0;w=+g[h+(b*68&-1)+56>>2];x=+g[h+(b*68&-1)+60>>2];y=+g[h+(b*68&-1)+64>>2];z=b+1|0;A=m+i*(+g[h+(z*68&-1)+16>>2]-m);m=n+i*(+g[h+(z*68&-1)+20>>2]-n);n=o+i*(+g[h+(z*68&-1)+24>>2]-o);o=p+i*(+g[h+(z*68&-1)+28>>2]-p);p=q+i*(+g[h+(z*68&-1)+32>>2]-q);q=r+i*(+g[h+(z*68&-1)+36>>2]-r);r=s+i*(+g[h+(z*68&-1)+40>>2]-s);s=t+i*(+g[h+(z*68&-1)+44>>2]-t);B=~~(+(v|0)+i*+((c[h+(z*68&-1)+52>>2]|0)-v|0));t=w+i*(+g[h+(z*68&-1)+56>>2]-w);w=x+i*(+g[h+(z*68&-1)+60>>2]-x);x=y+i*(+g[h+(z*68&-1)+64>>2]-y);L2979:do{if(!d){z=c[a>>2]|0;h=(z|0)==-487877;do{if(h){v=(f|0)<0?0:f;c[a+164>>2]=(v|0)>9?9:v;g[e>>2]=0.0;v=a+132|0;if((c[v>>2]|0)==-1){c[v>>2]=j}v=a+136|0;if((c[v>>2]|0)!=-1){break}c[v>>2]=k}}while(0);do{if((l|0)==0){v=z;C=(v|0)==-487877;if(C){D=v;E=C;break}break L2979}else{if(h){c[a+140>>2]=l;D=-487877;E=1;break}else{break L2979}}}while(0);h=a+264|0;if(+g[h>>2]+1.0==0.0){g[h>>2]=A}h=a+268|0;if(+g[h>>2]+1.0==0.0){g[h>>2]=m}h=a+200|0;if(+g[h>>2]==0.0){g[h>>2]=n}h=a+204|0;if(+g[h>>2]==0.0){g[h>>2]=o}h=c[a+156>>2]|0;if((h|0)==1|(h|0)==4){c[a+220>>2]=5}h=a+228|0;if(+g[h>>2]==0.0){g[h>>2]=p}h=a+224|0;if(+g[h>>2]+1.0==0.0){if(!E){break}g[h>>2]=q}else{if(!E){break}}h=a+236|0;if(+g[h>>2]!=0.0){break}g[h>>2]=r}}while(0);do{if(s>0.0){if(d){F=a+164|0;c[F>>2]=b;g[e>>2]=i;G=a+288|0;H=c[G>>2]|0;I=H+280|0;g[I>>2]=w;J=c[G>>2]|0;K=J+224|0;g[K>>2]=x;return}if((c[a>>2]|0)!=-487877){break}E=a+248|0;if(+g[E>>2]+1.0!=0.0){break}if(s<0.0|s>1.0){break}g[E>>2]=s}}while(0);do{if(!((u|0)<1|d)){if((c[a>>2]|0)!=-487877){break}E=a+148|0;c[E>>2]=c[E>>2]|2}}while(0);do{if(!((B|0)<1|d)){if((c[a>>2]|0)!=-487877){break}u=a+148|0;E=c[u>>2]|0;if((E&66060288|0)!=0){break}c[u>>2]=E|B<<20}}while(0);if(d){F=a+164|0;c[F>>2]=b;g[e>>2]=i;G=a+288|0;H=c[G>>2]|0;I=H+280|0;g[I>>2]=w;J=c[G>>2]|0;K=J+224|0;g[K>>2]=x;return}if((c[a>>2]|0)!=-487877){F=a+164|0;c[F>>2]=b;g[e>>2]=i;G=a+288|0;H=c[G>>2]|0;I=H+280|0;g[I>>2]=w;J=c[G>>2]|0;K=J+224|0;g[K>>2]=x;return}d=a+252|0;if(+g[d>>2]+1.0!=0.0){F=a+164|0;c[F>>2]=b;g[e>>2]=i;G=a+288|0;H=c[G>>2]|0;I=H+280|0;g[I>>2]=w;J=c[G>>2]|0;K=J+224|0;g[K>>2]=x;return}g[d>>2]=t;F=a+164|0;c[F>>2]=b;g[e>>2]=i;G=a+288|0;H=c[G>>2]|0;I=H+280|0;g[I>>2]=w;J=c[G>>2]|0;K=J+224|0;g[K>>2]=x;return}function bM(a,b,c,d,e,f,h){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;h=h|0;var i=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0;i=f*2.0;if((h|0)<=0){return}j=f>0.0;k=0;do{f=+g[a+512+(k<<2)>>2];l=+g[a+768+(k<<2)>>2];m=+g[b+(k<<2)>>2];n=+g[b+256+(k<<2)>>2];o=b+512+(k<<2)|0;p=+g[o>>2];q=b+768+(k<<2)|0;r=+g[q>>2];if(m>n*1.5800000429153442|n>m*1.5800000429153442){s=r;t=p}else{u=+g[c+(k<<2)>>2];v=l*u;w=f*u;u=r<v?r:v;v=p<w?p:w;s=r>v?r:v;t=p>u?p:u}if(j){u=+g[d+(k<<2)>>2]*e;p=m>u?m:u;m=n>u?n:u;n=t>u?t:u;v=s>u?s:u;u=n+v;do{if(u>0.0){r=i*(p<m?p:m);if(r>=u){x=n;y=v;break}w=r/u;x=n*w;y=v*w}else{x=n;y=v}}while(0);z=y<s?y:s;A=x<t?x:t}else{z=s;A=t}g[o>>2]=A>f?f:A;g[q>>2]=z>l?l:z;k=k+1|0;}while((k|0)<(h|0));return}function bN(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0;h=c[a+2152>>2]|0;L3067:do{if((h|0)>0){i=a+2148|0;j=0;k=0;l=0.0;m=0.0;while(1){n=c[a+2060+(k<<2)>>2]|0;o=c[i>>2]|0;p=(n|0)<(o|0)?n:o;if((j|0)<(p|0)){q=n^-1;n=o^-1;r=(q|0)>(n|0)?q:n;n=j;s=l;t=m;do{t=t+ +g[b+(n<<2)>>2];s=s+ +g[d+(n<<2)>>2];n=n+1|0;}while((n|0)<(p|0));u=r^-1;v=s;w=t}else{u=j;v=l;w=m}if((u|0)>=(o|0)){break}x=+g[a+1112+(k<<2)>>2];y=1.0-x;p=b+(u<<2)|0;n=d+(u<<2)|0;z=v+x*+g[n>>2];g[e+(k<<2)>>2]=w+x*+g[p>>2];g[f+(k<<2)>>2]=z;q=k+1|0;if((q|0)<(h|0)){j=u+1|0;k=q;l=y*+g[n>>2];m=y*+g[p>>2]}else{A=q;break L3067}}g[e+(k<<2)>>2]=w;g[f+(k<<2)>>2]=v;A=k+1|0}else{A=0}}while(0);if((A|0)<(h|0)){B=A}else{return}do{g[e+(B<<2)>>2]=0.0;g[f+(B<<2)>>2]=0.0;B=B+1|0;}while((B|0)<(h|0));return}function bO(a,b,d,e,f,h){a=a|0;b=+b;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0.0,u=0.0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0;j=i;i=i+2320|0;k=j|0;l=j+264|0;m=+(e|0)*2.0;n=b/m;o=+(d|0);p=o/m;cE(l|0,0,2052);m=b/o;e=(d|0)/2&-1;d=0;q=0;while(1){if((q|0)>=64){r=d;s=q;break}o=m*+(d|0);b=o<0.0?0.0:o*.001;t=+V(+(b*.76))*13.0;u=t+ +V(+(b*b/56.25))*3.5;g[k+(q<<2)>>2]=o;v=d;while(1){o=m*+(v|0);b=o<0.0?0.0:o*.001;o=+V(+(b*.76))*13.0;if(o+ +V(+(b*b/56.25))*3.5-u>=.34|(v|0)>(e|0)){break}else{v=v+1|0}}w=v-d|0;c[a+1716+(q<<2)>>2]=w;if((w|0)>0){x=1.0/+(w|0)}else{x=0.0}g[a+512+(q<<2)>>2]=x;w=q+1|0;if((d|0)<(v|0)){y=d;while(1){z=y+1|0;c[l+(y<<2)>>2]=q;if((z|0)<(v|0)){y=z}else{A=v;break}}}else{A=d}if((A|0)>(e|0)){r=e;s=w;break}else{d=A;q=w}}g[k+(s<<2)>>2]=m*+(r|0);c[a+2152>>2]=f;r=a+2148|0;c[r>>2]=s;if((s|0)>0){s=0;q=0;while(1){A=c[a+1716+(q<<2)>>2]|0;x=m*+(((A|0)/2&-1)+s|0);u=x<0.0?0.0:x*.001;x=+V(+(u*.76))*13.0;b=x+ +V(+(u*u/56.25))*3.5;g[a+768+(q<<2)>>2]=+P(10.0,+((1.0- +Q(+((b<15.5?b:15.5)/15.5*3.141592653589793)))*1.25-2.5));B=q+1|0;if((B|0)<(c[r>>2]|0)){s=A+s|0;q=B}else{break}}if((B|0)<64){C=B;D=2155}}else{C=0;D=2155}if((D|0)==2155){while(1){D=0;g[a+768+(C<<2)>>2]=1.0;B=C+1|0;if((B|0)<64){C=B;D=2155}else{break}}}if((f|0)<=0){i=j;return}m=p;D=0;while(1){C=c[h+(D<<2)>>2]|0;B=D+1|0;q=c[h+(B<<2)>>2]|0;s=~~+M(+(m*(+(C|0)+-.5)+.5));r=~~+M(+(m*(+(q|0)+-.5)+.5));A=c[l+(((r|0)>(e|0)?e:r)<<2)>>2]|0;c[a+1972+(D<<2)>>2]=((c[l+(((s|0)<0?0:s)<<2)>>2]|0)+A|0)/2&-1;c[a+2060+(D<<2)>>2]=A;p=+g[k+(A<<2)>>2];b=(n*+(q|0)-p)/(+g[k+(A+1<<2)>>2]-p);do{if(b<0.0){E=0.0}else{if(b<=1.0){E=b;break}E=1.0}}while(0);g[a+1112+(D<<2)>>2]=E;b=n*+(C|0);p=b<0.0?0.0:b*.001;b=+V(+(p*.76))*13.0;u=b+ +V(+(p*p/56.25))*3.5;g[a+1024+(D<<2)>>2]=+P(10.0,+((1.0- +Q(+((u<15.5?u:15.5)/15.5*3.141592653589793)))*1.25-2.5));if((B|0)<(f|0)){D=B}else{break}}i=j;return}function bP(a,b,d,e,f){a=a|0;b=+b;d=d|0;e=e|0;f=f|0;var h=0,i=0.0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0;h=c[a+2148>>2]|0;i=b/+(d|0);if((h|0)<=0){return}b=i;d=0;j=0;while(1){k=c[a+1716+(j<<2)>>2]|0;l=i*+(d|0);m=l<0.0?0.0:l*.001;l=+V(+(m*.76))*13.0;n=l+ +V(+(m*m/56.25))*3.5;o=k+d|0;m=i*+(o-1|0);l=m<0.0?0.0:m*.001;m=+V(+(l*.76))*13.0;g[e+(j<<2)>>2]=(n+(m+ +V(+(l*l/56.25))*3.5))*.5;l=b*(+(d|0)+-.5);m=l<0.0?0.0:l*.001;l=+V(+(m*.76))*13.0;n=l+ +V(+(m*m/56.25))*3.5;m=b*(+(o|0)+-.5);l=m<0.0?0.0:m*.001;m=+V(+(l*.76))*13.0;g[f+(j<<2)>>2]=m+ +V(+(l*l/56.25))*3.5-n;k=j+1|0;if((k|0)<(h|0)){d=o;j=k}else{break}}return}function bQ(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;j=i;i=i+16384|0;k=j|0;cE(k|0,0,16384);l=(d|0)>0;if(l){m=0;while(1){n=+g[e+(m<<2)>>2];o=+g[h+(m<<2)>>2];p=0;do{q=n- +g[e+(p<<2)>>2];if(q<0.0){r=q*1.5}else{r=q*3.0}if(r<.5|r>2.5){s=0.0}else{q=r+-.5;s=(q*q-q*2.0)*8.0}q=r+.474;t=q*7.5+15.811389- +O(+(q*q+1.0))*17.5;if(t>-60.0){u=+X(+((s+t)*.23025850929940458))/.6609193}else{u=0.0}g[k+(m<<8)+(p<<2)>>2]=u*+g[f+(p<<2)>>2]*o;p=p+1|0;}while((p|0)<(d|0));p=m+1|0;if((p|0)<(d|0)){m=p}else{v=0;w=0;break}}do{m=0;while(1){if((m|0)>=(d|0)){break}if(+g[k+(v<<8)+(m<<2)>>2]>0.0){break}else{m=m+1|0}}c[b+(v<<3)>>2]=m;f=d;while(1){x=f-1|0;if((x|0)<=0){break}if(+g[k+(v<<8)+(x<<2)>>2]>0.0){break}else{f=x}}c[b+(v<<3)+4>>2]=x;w=w+f-m|0;v=v+1|0;}while((v|0)<(d|0));y=w<<2}else{y=0}w=cC(y)|0;c[a>>2]=w;y=(w|0)==0;if(y|l^1){z=y<<31>>31;i=j;return z|0}else{A=0;B=0}while(1){y=c[b+(A<<3)>>2]|0;l=b+(A<<3)+4|0;if((y|0)>(c[l>>2]|0)){C=B}else{w=y;y=B;while(1){v=y+1|0;g[(c[a>>2]|0)+(y<<2)>>2]=+g[k+(A<<8)+(w<<2)>>2];x=w+1|0;if((x|0)>(c[l>>2]|0)){C=v;break}else{w=x;y=v}}}y=A+1|0;if((y|0)<(d|0)){A=y;B=C}else{z=0;break}}i=j;return z|0}function bR(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0.0,k=0;g[d>>2]=0.0;if((c|0)<0){return}e=a+4764|0;f=0;h=0.0;while(1){i=+N(+(+g[a+(f<<2)>>2]));g[d>>2]=i+h;j=i;i=+O(+(j*+O(+j)));g[b+(f<<2)>>2]=i;if(i>+g[e>>2]){g[e>>2]=i}k=f+1|0;if((k|0)>(c|0)){break}f=k;h=+g[d>>2]}return}function bS(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,Q=0,R=0,S=0,T=0.0,U=0.0,V=0,W=0,Y=0,Z=0,$=0,aa=0,ab=0.0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0;f=i;i=i+10592|0;h=f|0;j=f+5256|0;k=f+7560|0;l=f+7568|0;m=f+8192|0;n=f+10496|0;o=f+10560|0;p=f+10576|0;q=a+116|0;r=c[q>>2]|0;s=a+84744|0;c[s>>2]=r;t=a+16|0;if((r|0)==0){u=a+120|0;v=c[t>>2]|0}else{w=c[t>>2]|0;u=66168+(w<<6)+(r<<2)|0;v=w}w=a+84752|0;x=c[w>>2]|0;y=a+64|0;z=c[y>>2]|0;A=((_((v*72e3&-1)+72e3|0,c[u>>2]|0)|0)/(z|0)&-1)+x<<3;x=a+24|0;z=a+76|0;u=c[z>>2]|0;v=(A-(c[x>>2]<<3)|0)/(u|0)&-1;B=(u<<11)-8|0;C=a+148|0;D=c[C>>2]|0;E=D-A|0;A=a+52144|0;F=(E|0)>(B|0)?B:E;c[A>>2]=F;if((F|0)<0){G=2209}else{if((c[a+144>>2]|0)==0){H=F}else{G=2209}}if((G|0)==2209){c[A>>2]=0;H=0}F=_(v,u)|0;E=a+52140|0;B=c[E>>2]|0;I=((B|0)<(H|0)?B:H)+F|0;F=a+21320|0;c[F>>2]=0;H=a+85804|0;B=c[H>>2]|0;if((B|0)==0){J=u;K=r}else{c[B+203484>>2]=(v|0)/2&-1;c[(c[H>>2]|0)+203488>>2]=c[E>>2];J=c[z>>2]|0;K=c[q>>2]|0}v=(((I|0)>(D|0)?D:I)|0)/(J|0)&-1;c[s>>2]=1;if((K|0)<1){L=J}else{I=t|0;D=a+144|0;B=1;r=K;K=J;while(1){c[s>>2]=B;J=c[I>>2]|0;u=c[w>>2]|0;M=c[y>>2]|0;N=((_((J*72e3&-1)+72e3|0,c[66168+(J<<6)+(B<<2)>>2]|0)|0)/(M|0)&-1)+u<<3;u=(N-(c[x>>2]<<3)|0)/(K|0)&-1;M=(K<<11)-8|0;J=c[C>>2]|0;O=J-N|0;N=(O|0)>(M|0)?M:O;c[A>>2]=N;if((N|0)<0){G=2216}else{if((c[D>>2]|0)==0){Q=N}else{G=2216}}if((G|0)==2216){G=0;c[A>>2]=0;Q=0}N=_(u,K)|0;O=c[E>>2]|0;M=((O|0)<(Q|0)?O:Q)+N|0;c[F>>2]=0;N=c[H>>2]|0;if((N|0)==0){R=r;S=K}else{c[N+203484>>2]=(u|0)/2&-1;c[(c[H>>2]|0)+203488>>2]=c[E>>2];R=c[q>>2]|0;S=c[z>>2]|0}c[n+(B<<2)>>2]=(M|0)>(J|0)?J:M;M=B+1|0;if((M|0)>(R|0)){L=S;break}else{B=M;r=R;K=S}}}do{if((L|0)>0){S=a+84756|0;K=a+72|0;R=a+84916|0;r=a+84908|0;B=a+84912|0;Q=0;D=1;I=0;while(1){M=p+(Q<<3)|0;J=bZ(a,b,M,v,Q,0)|0;do{if((c[S>>2]|0)==2){u=0;do{N=a+304+(Q*10504&-1)+(u<<2)|0;T=+g[N>>2];O=a+304+(Q*10504&-1)+5252+(u<<2)|0;U=+g[O>>2];g[N>>2]=(T+U)*.7071067690849304;g[O>>2]=(T-U)*.7071067690849304;u=u+1|0;}while((u|0)<576);U=(.5- +g[d+(Q<<2)>>2])*.33*2.0;T=U<0.0?0.0:U;u=c[M>>2]|0;O=p+(Q<<3)+4|0;N=c[O>>2]|0;V=~~(+(N+u|0)*(T>.5?.25:T*.5));W=4095-u|0;Y=(V|0)>(W|0)?W:V;V=(Y|0)<0?0:Y;do{if((N|0)>124){Y=N-V|0;if((Y|0)<=125){W=u-125+N|0;c[M>>2]=W;c[O>>2]=125;Z=W;$=125;break}if((u|0)<(v|0)){W=V+u|0;c[M>>2]=W;aa=W}else{aa=u}c[O>>2]=Y;Z=aa;$=Y}else{Z=u;$=N}}while(0);N=Z+$|0;if((N|0)<=(J|0)){break}c[M>>2]=(_(Z,J)|0)/(N|0)&-1;c[O>>2]=(_($,J)|0)/(N|0)&-1}}while(0);J=c[K>>2]|0;if((J|0)>0){M=0;N=D;u=I;while(1){V=a+304+(Q*10504&-1)+(M*5252&-1)|0;Y=(c[a+304+(Q*10504&-1)+(M*5252&-1)+4788>>2]|0)==2;T=+X(+(3.5- +g[b+(Q<<3)+(M<<2)>>2]/300.0))+1.0;if(Y){ab=+g[R>>2]-(2.56/T+-.14)}else{ab=+g[B>>2]-(1.28/T+-.05)}g[r>>2]=+P(10.0,+(ab*.1));bW(a,V);Y=(b9(a,e+(Q*976&-1)+(M*488&-1)|0,V,l+(Q*312&-1)+(M*156&-1)|0)|0)==0?N:0;c[o+(Q<<3)+(M<<2)>>2]=126;V=(c[p+(Q<<3)+(M<<2)>>2]|0)+u|0;W=M+1|0;ac=c[K>>2]|0;if((W|0)<(ac|0)){M=W;N=Y;u=V}else{ad=Y;ae=V;af=ac;break}}}else{ad=D;ae=I;af=J}u=Q+1|0;ag=c[z>>2]|0;if((u|0)<(ag|0)){Q=u;D=ad;I=ae}else{break}}if((ag|0)<=0){ah=ad;ai=ag;aj=K;break}I=(ae|0)>0;D=(af|0)>0;Q=0;while(1){if(D){r=c[n+(c[q>>2]<<2)>>2]|0;B=(ae|0)>(r|0)&I;R=0;do{S=p+(Q<<3)+(R<<2)|0;u=c[S>>2]|0;if(B){N=(_(u,r)|0)/(ae|0)&-1;c[S>>2]=N;ak=N}else{ak=u}u=o+(Q<<3)+(R<<2)|0;if((c[u>>2]|0)>(ak|0)){c[u>>2]=ak}R=R+1|0;}while((R|0)<(af|0))}R=Q+1|0;if((R|0)<(ag|0)){Q=R}else{ah=ad;ai=ag;aj=K;break}}}else{ah=1;ai=L;aj=a+72|0}}while(0);L=(ah|0)==0;ah=a+112|0;ag=a+124|0;ad=a+120|0;af=t|0;t=a+144|0;ak=m|0;ae=a+85824|0;e=a+85096|0;b=h;$=j;j=a+85092|0;Z=h+2304|0;h=m;aa=0;v=0;d=ai;L3244:while(1){if((v|0)<(d|0)){if((c[aj>>2]|0)>0){ai=0;K=aa;while(1){Q=a+304+(v*10504&-1)+(ai*5252&-1)|0;g[k>>2]=0.0;I=c[a+304+(v*10504&-1)+(ai*5252&-1)+5208>>2]|0;g[a+304+(v*10504&-1)+(ai*5252&-1)+4764>>2]=0.0;cE(m+(I<<2)|0,0,576-I<<2|0);a9[c[ae>>2]&15](Q,ak,I,k);do{if(+g[k>>2]>9.999999682655225e-21){I=(c[e>>2]|0)>>>1&1;D=a+304+(v*10504&-1)+(ai*5252&-1)+4864|0;if((c[D>>2]|0)>0){R=0;do{c[a+84936+(R<<2)>>2]=I;R=R+1|0;}while((R|0)<(c[D>>2]|0))}D=c[p+(v<<3)+(ai<<2)>>2]|0;if((D|0)==0){al=K;break}R=l+(v*312&-1)+(ai*156&-1)|0;I=c[o+(v<<3)+(ai<<2)>>2]|0;O=c[j>>2]|0;cE(Z|0,0,2304);r=D-42|0;B=a+304+(v*10504&-1)+(ai*5252&-1)+4768|0;J=Q;u=I;N=0;S=D;M=(I+D|0)/2&-1;while(1){c[j>>2]=(M|0)>(r|0)?0:O;do{if((bX(a,Q,R,ak,ai,M)|0)<1){D=c[B>>2]|0;cF(b|0,J|0,5252)|0;cF($|0,h|0,2304)|0;I=D-32|0;am=u;an=1;ao=I;ap=I-u|0;aq=(I+u|0)/2&-1}else{I=M+32|0;D=S-I|0;ac=(S+I|0)/2&-1;if((N|0)==0){am=I;an=0;ao=S;ap=D;aq=ac;break}cF(J|0,b|0,5252)|0;cF(h|0,$|0,2304)|0;am=I;an=2;ao=S;ap=D;aq=ac}}while(0);if((ap|0)>12){u=am;N=an;S=ao;M=aq}else{break}}c[j>>2]=O;if((an|0)==2){M=a+304+(v*10504&-1)+(ai*5252&-1)+2304|0;cF(M|0,Z|0,2304)|0}if((c[e>>2]&1|0)!=0){bT(a,Q,R,ak)}al=(c[B>>2]|0)+K+(c[a+304+(v*10504&-1)+(ai*5252&-1)+4844>>2]|0)|0}else{cE(a+304+(v*10504&-1)+(ai*5252&-1)+2304|0,0,2304);al=K}}while(0);Q=ai+1|0;if((Q|0)<(c[aj>>2]|0)){ai=Q;K=al}else{break}}ar=al;as=c[z>>2]|0}else{ar=aa;as=d}aa=ar;v=v+1|0;d=as;continue}if(L){G=2273}else{if((c[ag>>2]|0)==0){at=1}else{G=2273}}if((G|0)==2273){G=0;at=c[ah>>2]|0}c[s>>2]=at;K=c[q>>2]|0;L3282:do{if((at|0)<(K|0)){ai=at;while(1){if((aa|0)<=(c[n+(ai<<2)>>2]|0)){au=ai;break L3282}Q=ai+1|0;c[s>>2]=Q;if((Q|0)<(K|0)){ai=Q}else{au=Q;break}}}else{au=at}}while(0);K=c[af>>2]|0;if((au|0)==0){av=ad}else{av=66168+(K<<6)+(au<<2)|0}ai=c[w>>2]|0;Q=c[y>>2]|0;M=((_((K*72e3&-1)+72e3|0,c[av>>2]|0)|0)/(Q|0)&-1)+ai<<3;aw=(M-(c[x>>2]<<3)|0)/(d|0)&-1;ai=(d<<11)-8|0;Q=c[C>>2]|0;K=Q-M|0;M=(K|0)>(ai|0)?ai:K;c[A>>2]=M;if((M|0)<0){G=2281}else{if((c[t>>2]|0)==0){ax=M}else{G=2281}}if((G|0)==2281){G=0;c[A>>2]=0;ax=0}M=_(aw,d)|0;K=c[E>>2]|0;ai=((K|0)<(ax|0)?K:ax)+M|0;c[F>>2]=0;M=c[H>>2]|0;if((M|0)==0){ay=d}else{c[M+203484>>2]=(aw|0)/2&-1;c[(c[H>>2]|0)+203488>>2]=c[E>>2];ay=c[z>>2]|0}az=(ay|0)>0;if((aa|0)<=(((ai|0)>(Q|0)?Q:ai)|0)){break}if(!az){aa=0;v=0;d=ay;continue}ai=0;Q=c[aj>>2]|0;M=ay;while(1){if((Q|0)>0){K=0;do{S=l+(ai*312&-1)+(K*156&-1)|0;N=a+304+(ai*10504&-1)+(K*5252&-1)+4856|0;if((c[N>>2]|0)>0){u=0;J=S;while(1){ab=+(u|0);r=J+4|0;g[J>>2]=(ab*ab*.029/22.0/22.0+1.0)*+g[J>>2];ac=u+1|0;if((ac|0)<(c[N>>2]|0)){u=ac;J=r}else{aA=r;break}}}else{aA=S}do{if((c[a+304+(ai*10504&-1)+(K*5252&-1)+4788>>2]|0)==2){J=c[a+304+(ai*10504&-1)+(K*5252&-1)+4852>>2]|0;if((J|0)<13){aB=J;aC=aA}else{break}while(1){ab=+(aB|0);T=ab*ab*.029/13.0/13.0+1.0;J=aC+4|0;g[aC>>2]=T*+g[aC>>2];u=aC+8|0;g[J>>2]=T*+g[J>>2];g[u>>2]=T*+g[u>>2];u=aB+1|0;if((u|0)<13){aB=u;aC=aC+12|0}else{break}}}}while(0);T=+(c[o+(ai<<3)+(K<<2)>>2]|0);S=p+(ai<<3)+(K<<2)|0;ab=+(c[S>>2]|0)*.9;c[S>>2]=~~(T>ab?T:ab);K=K+1|0;aD=c[aj>>2]|0;}while((K|0)<(aD|0));aE=aD;aF=c[z>>2]|0}else{aE=Q;aF=M}K=ai+1|0;if((K|0)<(aF|0)){ai=K;Q=aE;M=aF}else{aa=0;v=0;d=aF;continue L3244}}}if(!az){aG=ay;aH=_(aG,aw)|0;aI=c[E>>2]|0;aJ=aI+aH|0;aK=a+21324|0;aL=(aJ|0)%8&-1;aM=aJ-aL|0;aN=c[A>>2]|0;aO=aM-aN|0;aP=(aO|0)>0;aQ=aP?aO:0;aR=aQ+aL|0;aS=a+21312|0;aT=c[aS>>2]|0;aU=aT<<3;aV=(aU|0)<(aR|0);aW=aV?aU:aR;aX=(aW|0)/8&-1;aY=aX<<3;c[F>>2]=aY;aZ=aR-aY|0;a_=aJ-aY|0;a$=aT-aX|0;c[aS>>2]=a$;c[aK>>2]=aZ;a0=a_-aZ|0;c[E>>2]=a0;i=f;return}az=a+304|0;aF=a+36|0;d=0;v=ay;ay=c[aj>>2]|0;while(1){if((ay|0)>0){aa=0;do{ch(a,d,aa,az);if((c[aF>>2]|0)==1){cf(a,a+304+(d*10504&-1)+(aa*5252&-1)|0)}c[E>>2]=(c[E>>2]|0)-((c[a+304+(d*10504&-1)+(aa*5252&-1)+4844>>2]|0)+(c[a+304+(d*10504&-1)+(aa*5252&-1)+4768>>2]|0));aa=aa+1|0;a1=c[aj>>2]|0;}while((aa|0)<(a1|0));a2=c[z>>2]|0;a3=a1}else{a2=v;a3=ay}aa=d+1|0;if((aa|0)<(a2|0)){d=aa;v=a2;ay=a3}else{aG=a2;break}}aH=_(aG,aw)|0;aI=c[E>>2]|0;aJ=aI+aH|0;aK=a+21324|0;aL=(aJ|0)%8&-1;aM=aJ-aL|0;aN=c[A>>2]|0;aO=aM-aN|0;aP=(aO|0)>0;aQ=aP?aO:0;aR=aQ+aL|0;aS=a+21312|0;aT=c[aS>>2]|0;aU=aT<<3;aV=(aU|0)<(aR|0);aW=aV?aU:aR;aX=(aW|0)/8&-1;aY=aX<<3;c[F>>2]=aY;aZ=aR-aY|0;a_=aJ-aY|0;a$=aT-aX|0;c[aS>>2]=a$;c[aK>>2]=aZ;a0=a_-aZ|0;c[E>>2]=a0;i=f;return}function bT(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0.0,q=0.0,r=0,s=0,t=0.0,u=0,v=0.0,w=0,x=0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+184|0;h=f|0;j=f+160|0;k=c[a+85096>>2]|0;do{if((k&4|0)==0){if((c[b+4788>>2]|0)!=2){break}i=f;return}}while(0);if((k&128|0)!=0){i=f;return}ca(b,d,h|0,j,0);j=0;do{if((c[b+2304+(j<<2)>>2]|0)==0){l=0.0}else{l=+N(+(+g[b+(j<<2)>>2]))}g[e+(j<<2)>>2]=l;j=j+1|0;}while((j|0)<576);j=b+4864|0;k=(c[b+4788>>2]|0)==2?6:8;m=0;while(1){n=c[b+4872+(k<<2)>>2]|0;o=n+m|0;l=+g[h+(k<<2)>>2];L3347:do{if(l<1.0){aB(e+(m<<2)|0,n|0,4,2);p=+g[e+(o-1<<2)>>2];if(p==0.0){if(p==0.0){break}}else{q=+N(+p);if(q<=q*9.999999974752427e-7){break}}r=0;q=(1.0-l)*+g[d+(k<<2)>>2];while(1){s=r+1|0;L3355:do{if((s|0)<(n|0)){p=+g[e+(r+o-n<<2)>>2];t=+N(+p);u=r+m|0;v=t*9.999999974752427e-7;w=1;x=s;while(1){y=+g[e+(u+w<<2)>>2];z=+N(+y);A=+N(+(p-y));if(t>z){if(A>v){B=w;C=x;D=1;E=u;break L3355}}else{if(A>z*9.999999974752427e-7){B=w;C=x;D=1;E=u;break L3355}}F=w+1|0;G=F+r|0;if((G|0)<(n|0)){w=F;x=G}else{B=F;C=G;D=0;E=u;break}}}else{B=1;C=s;D=0;E=m+r|0}}while(0);v=+g[e+(E<<2)>>2];t=+(B|0)*v*v;if(q<t){break}if(D){r=C;q=q-t}else{break L3347}}if((r|0)==0){break}q=+g[e+(E-1<<2)>>2];if(q==0.0){if(q==0.0){break}else{H=n}}else{t=+N(+q);if(t>t*9.999999974752427e-7){H=n}else{break}}do{s=o-H|0;if(+N(+(+g[b+(s<<2)>>2]))<=q){c[b+2304+(s<<2)>>2]=0}H=H-1|0;}while((H|0)>0)}}while(0);n=k+1|0;if((n|0)<(c[j>>2]|0)){k=n;m=o}else{break}}c[b+4768>>2]=ce(a,b,0)|0;i=f;return}
function bU(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0.0,ak=0.0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aF=0.0,aG=0,aH=0.0,aI=0.0,aJ=0.0,aK=0.0,aL=0.0,aM=0.0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0.0,aY=0,aZ=0,a_=0,a$=0,a0=0.0,a1=0,a3=0,a4=0,a5=0.0,a6=0,a7=0,a8=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bk=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bX=0,bY=0,b_=0,b$=0,b0=0;e=i;i=i+11712|0;h=e|0;j=e+160|0;k=e+320|0;l=e+944|0;m=e+1568|0;n=e+1712|0;o=e+1728|0;p=e+1736|0;q=e+1752|0;r=e+1760|0;s=e+1768|0;u=e+1776|0;v=e+1784|0;w=e+1792|0;x=e+2416|0;y=e+11632|0;z=e+11696|0;cE(x|0,0,9216);A=y|0;B=b+152|0;if((c[B>>2]|0)==0){C=b+116|0;D=c[C>>2]|0;E=b+84744|0;c[E>>2]=D;F=b+16|0;if((D|0)==0){G=b+120|0;H=c[F>>2]|0}else{I=c[F>>2]|0;G=66168+(I<<6)+(D<<2)|0;H=I}I=b+84752|0;J=c[I>>2]|0;K=b+64|0;L=c[K>>2]|0;M=((_((H*72e3&-1)+72e3|0,c[G>>2]|0)|0)/(L|0)&-1)+J<<3;J=b+24|0;L=b+76|0;G=c[L>>2]|0;H=(M-(c[J>>2]<<3)|0)/(G|0)&-1;N=(G<<11)-8|0;G=b+148|0;Q=(c[G>>2]|0)-M|0;M=b+52144|0;R=(Q|0)>(N|0)?N:Q;c[M>>2]=R;if((R|0)<0){S=7}else{if((c[b+144>>2]|0)==0){T=R}else{S=7}}if((S|0)==7){c[M>>2]=0;T=0}R=b+52140|0;Q=b+21320|0;c[Q>>2]=0;N=b+85804|0;U=c[N>>2]|0;if((U|0)==0){V=T;W=D}else{c[U+203484>>2]=(H|0)/2&-1;c[(c[N>>2]|0)+203488>>2]=c[R>>2];V=c[M>>2]|0;W=c[C>>2]|0}c[E>>2]=1;if((W|0)<1){X=W}else{U=F|0;F=b+144|0;D=1;T=W;while(1){c[E>>2]=D;W=c[U>>2]|0;Y=c[I>>2]|0;Z=c[K>>2]|0;$=((_((W*72e3&-1)+72e3|0,c[66168+(W<<6)+(D<<2)>>2]|0)|0)/(Z|0)&-1)+Y<<3;Y=c[L>>2]|0;Z=($-(c[J>>2]<<3)|0)/(Y|0)&-1;W=(Y<<11)-8|0;aa=c[G>>2]|0;ab=aa-$|0;$=(ab|0)>(W|0)?W:ab;c[M>>2]=$;if(($|0)<0){S=14}else{if((c[F>>2]|0)==0){ac=$}else{S=14}}if((S|0)==14){S=0;c[M>>2]=0;ac=0}$=_(Z,Y)|0;Y=c[R>>2]|0;ab=((Y|0)<(ac|0)?Y:ac)+$|0;c[Q>>2]=0;$=c[N>>2]|0;if(($|0)==0){ad=T}else{c[$+203484>>2]=(Z|0)/2&-1;c[(c[N>>2]|0)+203488>>2]=c[R>>2];ad=c[C>>2]|0}c[y+(D<<2)>>2]=(ab|0)>(aa|0)?aa:ab;ab=D+1|0;if((ab|0)>(ad|0)){X=ad;break}else{D=ab;T=ad}}}ae=c[y+(X<<2)>>2]|0;af=H;ag=V}else{c[b+84744>>2]=0;V=c[b+84752>>2]|0;H=c[b+64>>2]|0;X=((_(((c[b+16>>2]|0)*72e3&-1)+72e3|0,c[b+120>>2]|0)|0)/(H|0)&-1)+V<<3;V=c[b+76>>2]|0;H=(X-(c[b+24>>2]<<3)|0)/(V|0)&-1;ad=(V<<11)-8|0;T=c[b+148>>2]|0;D=T-X|0;X=b+52144|0;C=(D|0)>(ad|0)?ad:D;c[X>>2]=C;if((C|0)<0){S=21}else{if((c[b+144>>2]|0)==0){ah=C}else{S=21}}if((S|0)==21){c[X>>2]=0;ah=0}C=_(H,V)|0;V=b+52140|0;D=c[V>>2]|0;ad=((D|0)<(ah|0)?D:ah)+C|0;C=(ad|0)>(T|0)?T:ad;c[b+21320>>2]=0;ad=b+85804|0;T=c[ad>>2]|0;if((T|0)==0){ai=ah}else{c[T+203484>>2]=(H|0)/2&-1;c[(c[ad>>2]|0)+203488>>2]=c[V>>2];ai=c[X>>2]|0}c[A>>2]=C;ae=C;af=H;ag=ai}ai=b+76|0;H=c[ai>>2]|0;if((H|0)>0){C=b+84756|0;A=b+72|0;X=b+84912|0;V=b+84908|0;ad=1;T=0;ah=0;while(1){bZ(b,d,z+(ah<<3)|0,af,ah,0)|0;if((c[C>>2]|0)==2){D=0;do{R=b+304+(ah*10504&-1)+(D<<2)|0;aj=+g[R>>2];N=b+304+(ah*10504&-1)+5252+(D<<2)|0;ak=+g[N>>2];g[R>>2]=(aj+ak)*.7071067690849304;g[N>>2]=(aj-ak)*.7071067690849304;D=D+1|0;}while((D|0)<576)}D=c[A>>2]|0;if((D|0)>0){N=0;R=ad;Q=T;while(1){ac=b+304+(ah*10504&-1)+(N*5252&-1)|0;g[V>>2]=+P(10.0,+(+g[X>>2]*.1));bW(b,ac);M=(b9(b,f+(ah*976&-1)+(N*488&-1)|0,ac,w+(ah*312&-1)+(N*156&-1)|0)|0)==0?R:0;ac=(c[z+(ah<<3)+(N<<2)>>2]|0)+Q|0;F=N+1|0;G=c[A>>2]|0;if((F|0)<(G|0)){N=F;R=M;Q=ac}else{al=M;am=ac;an=G;break}}}else{al=ad;am=T;an=D}Q=ah+1|0;ao=c[ai>>2]|0;if((Q|0)<(ao|0)){ad=al;T=am;ah=Q}else{break}}if((ao|0)>0){ah=(am|0)>(ae|0)&(am|0)>0;T=0;ad=an;while(1){if((ad|0)>0){A=0;f=ad;while(1){if(ah){X=z+(T<<3)+(A<<2)|0;c[X>>2]=(_(c[X>>2]|0,ae)|0)/(am|0)&-1;ap=an}else{ap=f}X=A+1|0;if((X|0)<(ap|0)){A=X;f=ap}else{aq=ap;break}}}else{aq=ad}f=T+1|0;if((f|0)<(ao|0)){T=f;ad=aq}else{break}}}if((al|0)==0){ar=0;as=ag;at=ao}else{au=al;av=ao;S=40}}else{au=1;av=H;S=40}if((S|0)==40){ar=au;as=0;at=av}av=b+72|0;if((at|0)>0){au=b+85824|0;H=b+85096|0;ao=0;al=c[av>>2]|0;ag=at;while(1){if((al|0)>0){aq=0;do{g[v>>2]=0.0;ad=c[b+304+(ao*10504&-1)+(aq*5252&-1)+5208>>2]|0;g[b+304+(ao*10504&-1)+(aq*5252&-1)+4764>>2]=0.0;cE(x+(ao*4608&-1)+(aq*2304&-1)+(ad<<2)|0,0,576-ad<<2|0);a9[c[au>>2]&15](b+304+(ao*10504&-1)+(aq*5252&-1)|0,x+(ao*4608&-1)+(aq*2304&-1)|0,ad,v);do{if(+g[v>>2]>9.999999682655225e-21){ad=(c[H>>2]|0)>>>1&1;T=b+304+(ao*10504&-1)+(aq*5252&-1)+4864|0;if((c[T>>2]|0)>0){aw=0}else{break}do{c[b+84936+(aw<<2)>>2]=ad;aw=aw+1|0;}while((aw|0)<(c[T>>2]|0))}else{cE(b+304+(ao*10504&-1)+(aq*5252&-1)+2304|0,0,2304);c[z+(ao<<3)+(aq<<2)>>2]=0}}while(0);aq=aq+1|0;ax=c[av>>2]|0;}while((aq|0)<(ax|0));ay=ax;az=c[ai>>2]|0}else{ay=al;az=ag}aq=ao+1|0;if((aq|0)<(az|0)){ao=aq;al=ay;ag=az}else{aA=az;aB=ay;break}}}else{aA=at;aB=c[av>>2]|0}av=p;at=o;ay=q;az=r;ag=s;al=u;ao=b+72|0;cE(n|0,0,16);c[o>>2]=0;c[o+4>>2]=0;c[av>>2]=c[25410];c[av+4>>2]=c[25411];c[av+8>>2]=c[25412];c[av+12>>2]=c[25413];c[q>>2]=7681;c[q+4>>2]=7681;do{if((aA|0)>0){av=(aB|0)>0;ax=b+48|0;aw=aB<<2;H=0;v=0;while(1){au=at+(H<<2)|0;c[au>>2]=0;if(av){cE(p+(H<<3)|0,0,aw|0);aq=(c[ax>>2]|0)<0?4:2;T=0;ad=v;ap=0;do{an=c[z+(H<<3)+(T<<2)>>2]|0;c[n+(H<<3)+(T<<2)>>2]=an;ap=ap+an|0;ad=an+ad|0;c[m+(H*72&-1)+(T*36&-1)+4>>2]=aq;c[m+(H*72&-1)+(T*36&-1)+12>>2]=b;c[m+(H*72&-1)+(T*36&-1)+16>>2]=b+304+(H*10504&-1)+(T*5252&-1);c[m+(H*72&-1)+(T*36&-1)+8>>2]=x+(H*4608&-1)+(T*2304&-1);c[m+(H*72&-1)+(T*36&-1)>>2]=(c[b+304+(H*10504&-1)+(T*5252&-1)+4788>>2]|0)==2?2:4;T=T+1|0;}while((T|0)<(aB|0));c[au>>2]=ap;aC=ad}else{aC=v}T=H+1|0;if((T|0)<(aA|0)){H=T;v=aC}else{aD=0;break}}L93:do{if(av){v=0;do{H=l+(aD*312&-1)+(v*156&-1)|0;if((c[z+(aD<<3)+(v<<2)>>2]|0)>0){ax=k+(aD*312&-1)+(v*156&-1)|0;T=m+(aD*72&-1)+(v*36&-1)+16|0;aq=c[T>>2]|0;an=c[m+(aD*72&-1)+(v*36&-1)+8>>2]|0;am=c[aq+5208>>2]|0;ae=c[aq+4864>>2]|0;ah=m+(aD*72&-1)+(v*36&-1)+20|0;f=m+(aD*72&-1)+(v*36&-1)+4|0;cE(ah|0,0,16);A=0;D=0;X=-1;V=0;C=0;while(1){af=c[aq+4872+(V<<2)>>2]|0;d=am-D+1|0;Q=af>>>0>d>>>0?d:af;d=an+(D<<2)|0;R=Q>>>2;N=Q&3;if((R|0)==0){aF=0.0;aG=d}else{ak=0.0;G=R;ac=d;while(1){M=G-1|0;aj=+g[ac>>2];aH=ak<aj?aj:ak;aj=+g[ac+4>>2];aI=aH<aj?aj:aH;aH=+g[ac+8>>2];aj=aI<aH?aH:aI;aI=+g[ac+12>>2];aJ=aj<aI?aI:aj;if((M|0)==0){break}else{ak=aJ;G=M;ac=ac+16|0}}aF=aJ;aG=an+((R<<2)+D<<2)|0}do{if((N|0)==3){ak=+g[aG+8>>2];if(aF>=ak){aK=aF;S=71;break}aK=ak;S=71}else if((N|0)==2){aK=aF;S=71}else if((N|0)==1){aL=aF;S=73}else{aM=aF}}while(0);do{if((S|0)==71){S=0;ak=+g[aG+4>>2];if(aK>=ak){aL=aK;S=73;break}aL=ak;S=73}}while(0);do{if((S|0)==73){S=0;ak=+g[aG>>2];if(aL>=ak){aM=aL;break}aM=ak}}while(0);N=aM*+g[13388]>8206.0;R=N?-64:64;ac=aM*+g[53040+((R&255)<<2)>>2]>8206.0;G=(ac?32:-32)+R&255;M=aM*+g[53040+((G&255)<<2)>>2]>8206.0;F=(M?16:-16)+G&255;J=aM*+g[53040+((F&255)<<2)>>2]>8206.0;L=(J?8:-8)+F&255;K=aM*+g[53040+((L&255)<<2)>>2]>8206.0;I=(K?4:-4)+L&255;U=aM*+g[53040+((I&255)<<2)>>2]>8206.0;E=(U?2:-2)+I&255;ab=aM*+g[53040+((E&255)<<2)>>2]>8206.0;aa=(ab?1:-1)+E&255;Z=aM*+g[53040+((aa&255)<<2)>>2]>8206.0?ab?U?K?J?M?ac?N?-1:-128:R:G:F:L:I:E:aa;aa=Z&255;c[l+(aD*312&-1)+(v*156&-1)+(V<<2)>>2]=aa;if((c[ah>>2]|0)<(aa|0)){c[ah>>2]=aa}E=m+(aD*72&-1)+(v*36&-1)+24+(A<<2)|0;if((c[E>>2]|0)<(aa|0)){c[E>>2]=aa}aa=A+1|0;E=aa>>>0>2?0:aa;do{if((V|0)<(ae|0)&af>>>0>2){if((a[aq+5212+V|0]|0)==0){aN=-1;aO=-1;aP=X;break}aa=a2[c[f>>2]&7](aq+(D<<2)|0,d,+g[w+(aD*312&-1)+(v*156&-1)+(V<<2)>>2],Q,Z)|0;I=aa&255;aN=aa;aO=(C&255)<(aa&255)?aa:C;aP=(X|0)>=(I|0)|aa<<24>>24==-1?X:I}else{I=(C&255)<(Z&255)?Z:C;aN=I;aO=I;aP=X}}while(0);c[k+(aD*312&-1)+(v*156&-1)+(V<<2)>>2]=aN&255;aQ=V+1|0;Z=af+D|0;if(Z>>>0>am>>>0){break}else{A=E;D=Z;X=aP;V=aQ;C=aO}}C=m+(aD*72&-1)+(v*36&-1)|0;if((aQ|0)<39){V=aO&255;cE(l+(aD*312&-1)+(v*156&-1)+(aQ<<2)|0,0,156-(aQ<<2)|0);X=aQ;do{c[k+(aD*312&-1)+(v*156&-1)+(X<<2)>>2]=V;X=X+1|0;}while((X|0)<39)}if((aP|0)>-1){X=0;do{V=k+(aD*312&-1)+(v*156&-1)+(X<<2)|0;if((c[V>>2]|0)==255){c[V>>2]=aP}X=X+1|0;}while((X|0)<39);aR=aP&255}else{aR=aO}a9[c[C>>2]&15](C,ax,H,aR&255);aS=m+(aD*72&-1)+(v*36&-1)+12|0;if((cn(c[(c[aS>>2]|0)+76>>2]|0,c[T>>2]|0)|0)!=0){S=91;break L93}}v=v+1|0;}while((v|0)<(aB|0))}aD=aD+1|0;}while((aD|0)<(aA|0));if((S|0)==91){ct(c[aS>>2]|0,101008,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aE(-1|0)}v=b+304|0;ad=b+36|0;ap=0;au=0;do{X=ay+(ap<<2)|0;c[X>>2]=0;if(av){V=0;D=0;do{if((c[z+(ap<<3)+(V<<2)>>2]|0)>0){A=m+(ap*72&-1)+(V*36&-1)|0;cE((c[m+(ap*72&-1)+(V*36&-1)+16>>2]|0)+2304|0,0,2304);cz(A)|0}ch(b,ap,V,v);if((c[ad>>2]|0)==1){cf(b,b+304+(ap*10504&-1)+(V*5252&-1)|0)}A=(c[b+304+(ap*10504&-1)+(V*5252&-1)+4844>>2]|0)+(c[b+304+(ap*10504&-1)+(V*5252&-1)+4768>>2]|0)|0;c[p+(ap<<3)+(V<<2)>>2]=A;D=D+A|0;V=V+1|0;}while((V|0)<(aB|0));c[X>>2]=D;aT=D}else{aT=0}au=aT+au|0;ap=ap+1|0;}while((ap|0)<(aA|0));if((au|0)<=(aC|0)){ap=1;ad=0;while(1){v=(c[ay+(ad<<2)>>2]|0)>7680?0:ap;if(av){V=v;A=0;while(1){am=(c[p+(ad<<3)+(A<<2)>>2]|0)>4095?0:V;aq=A+1|0;if((aq|0)<(aB|0)){V=am;A=aq}else{aU=am;break}}}else{aU=v}A=ad+1|0;if((A|0)<(aA|0)){ap=aU;ad=A}else{break}}if((aU|0)!=0){aV=au;break}}ad=(aB|0)>1;ap=0;A=0;do{V=at+(A<<2)|0;c[V>>2]=0;do{if(av){D=0;X=0;do{am=c[p+(A<<3)+(D<<2)>>2]|0;aq=(am|0)>4095?4095:am;c[n+(A<<3)+(D<<2)>>2]=aq;X=aq+X|0;D=D+1|0;}while((D|0)<(aB|0));c[V>>2]=X;if((X|0)<=7680){aW=X;break}c[r>>2]=0;c[r+4>>2]=0;D=0;ak=0.0;while(1){T=c[n+(A<<3)+(D<<2)>>2]|0;if((T|0)>0){aj=+O(+(+O(+(+(T|0)))));g[az+(D<<2)>>2]=aj;aX=ak+aj}else{g[az+(D<<2)>>2]=0.0;aX=ak}T=D+1|0;if((T|0)<(aB|0)){D=T;ak=aX}else{break}}D=aX>0.0;X=0;do{if(D){c[n+(A<<3)+(X<<2)>>2]=~~(+g[az+(X<<2)>>2]*7680.0/aX)}else{c[n+(A<<3)+(X<<2)>>2]=0}X=X+1|0;}while((X|0)<(aB|0));do{if(ad){X=n+(A<<3)|0;D=c[X>>2]|0;T=c[p+(A<<3)>>2]|0;H=T+32|0;ax=n+(A<<3)+4|0;C=c[ax>>2]|0;if((D|0)>(H|0)){aq=-32-T+(C+D)|0;c[ax>>2]=aq;c[X>>2]=H;aY=H;aZ=aq}else{aY=D;aZ=C}C=c[p+(A<<3)+4>>2]|0;D=C+32|0;if((aZ|0)>(D|0)){aq=-32-C+(aY+aZ)|0;c[X>>2]=aq;c[ax>>2]=D;a_=aq;a$=D}else{a_=aY;a$=aZ}if((a_|0)>4095){c[X>>2]=4095}if((a$|0)<=4095){break}c[ax>>2]=4095}}while(0);c[V>>2]=0;ax=0;X=0;do{X=X+(c[n+(A<<3)+(ax<<2)>>2]|0)|0;ax=ax+1|0;}while((ax|0)<(aB|0));c[V>>2]=X;aW=X}else{aW=0}}while(0);ap=aW+ap|0;A=A+1|0;}while((A|0)<(aA|0));if((ap|0)>(aC|0)){c[s>>2]=0;c[s+4>>2]=0;A=0;ak=0.0;while(1){ad=c[at+(A<<2)>>2]|0;if((ad|0)>0){aj=+O(+(+(ad|0)));g[ag+(A<<2)>>2]=aj;a0=ak+aj}else{g[ag+(A<<2)>>2]=0.0;a0=ak}ad=A+1|0;if((ad|0)<(aA|0)){A=ad;ak=a0}else{break}}A=a0>0.0;ak=+(aC|0);ap=0;do{if(A){c[at+(ap<<2)>>2]=~~(ak*+g[ag+(ap<<2)>>2]/a0)}else{c[at+(ap<<2)>>2]=0}ap=ap+1|0;}while((ap|0)<(aA|0));if((aA|0)>1){ap=o;A=c[ap>>2]|0;ad=c[q>>2]|0;au=ad+125|0;V=at+4|0;v=c[V>>2]|0;if((A|0)>(au|0)){ax=-125-ad+(v+A)|0;c[V>>2]=ax;c[ap>>2]=au;a1=au;a3=ax}else{a1=A;a3=v}v=c[ay+4>>2]|0;A=v+125|0;if((a3|0)>(A|0)){c[ap>>2]=-125-v+(a1+a3);c[V>>2]=A;a4=0}else{a4=0}do{A=at+(a4<<2)|0;if((c[A>>2]|0)>7680){c[A>>2]=7680}a4=a4+1|0;}while((a4|0)<(aA|0))}A=(aB|0)>1;V=0;while(1){c[u>>2]=0;c[u+4>>2]=0;if(av){v=0;ak=0.0;while(1){ap=c[n+(V<<3)+(v<<2)>>2]|0;if((ap|0)>0){aj=+O(+(+(ap|0)));g[al+(v<<2)>>2]=aj;a5=ak+aj}else{g[al+(v<<2)>>2]=0.0;a5=ak}ap=v+1|0;if((ap|0)<(aB|0)){v=ap;ak=a5}else{break}}v=a5>0.0;ap=at+(V<<2)|0;ax=0;do{if(v){c[n+(V<<3)+(ax<<2)>>2]=~~(+(c[ap>>2]|0)*+g[al+(ax<<2)>>2]/a5)}else{c[n+(V<<3)+(ax<<2)>>2]=0}ax=ax+1|0;}while((ax|0)<(aB|0))}L255:do{if(A){ax=n+(V<<3)|0;ap=c[ax>>2]|0;v=c[p+(V<<3)>>2]|0;au=v+32|0;ad=n+(V<<3)+4|0;D=c[ad>>2]|0;if((ap|0)>(au|0)){aq=-32-v+(D+ap)|0;c[ad>>2]=aq;c[ax>>2]=au;a6=au;a7=aq}else{a6=ap;a7=D}D=c[p+(V<<3)+4>>2]|0;ap=D+32|0;if((a7|0)>(ap|0)){aq=-32-D+(a6+a7)|0;c[ax>>2]=aq;c[ad>>2]=ap;a8=aq}else{a8=a6}if(av){ba=0;bb=a8}else{break}while(1){if((bb|0)>4095){c[n+(V<<3)+(ba<<2)>>2]=4095}aq=ba+1|0;if((aq|0)>=(aB|0)){break L255}ba=aq;bb=c[n+(V<<3)+(aq<<2)>>2]|0}}}while(0);X=V+1|0;if((X|0)<(aA|0)){V=X}else{bc=0;bd=1;be=0;break}}}else{bc=0;bd=1;be=0}do{if(av){V=bd;A=0;X=0;while(1){aq=c[n+(be<<3)+(A<<2)>>2]|0;ap=aq+X|0;ad=(aq|0)>4095?0:V;aq=A+1|0;if((aq|0)<(aB|0)){V=ad;A=aq;X=ap}else{bf=ad;bg=ap;break}}}else{bf=bd;bg=0}bc=bg+bc|0;bd=(bg|0)>7680?0:bf;be=be+1|0;}while((be|0)<(aA|0));if((bc|0)>(aC|0)|(bd|0)==0){X=0;do{if(av){A=z+(X<<3)|0;V=n+(X<<3)|0;cF(V|0,A|0,aw)|0}X=X+1|0;}while((X|0)<(aA|0))}if(av){X=0;while(1){aw=X+1|0;cE(b+21328+(X<<4)|0,0,16);if((aw|0)<(aB|0)){X=aw}else{bh=0;break}}}else{bh=0}do{if(av){X=0;do{c[b+304+(bh*10504&-1)+(X*5252&-1)+4784>>2]=0;X=X+1|0;}while((X|0)<(aB|0))}bh=bh+1|0;}while((bh|0)<(aA|0));X=j;aw=j|0;A=h|0;V=b+304|0;ap=b+36|0;ad=0;aq=0;L294:while(1){ax=ay+(ad<<2)|0;c[ax>>2]=0;if(av){D=0;au=0;while(1){v=p+(ad<<3)+(D<<2)|0;c[v>>2]=0;L299:do{if((c[z+(ad<<3)+(D<<2)>>2]|0)>0){C=k+(ad*312&-1)+(D*156&-1)|0;H=m+(ad*72&-1)+(D*36&-1)+16|0;T=(c[H>>2]|0)+4780|0;am=c[T>>2]|0;f=39;ae=0;while(1){ah=k+(ad*312&-1)+(D*156&-1)+(ae<<2)|0;an=c[ah>>2]|0;c[ah>>2]=(an|0)<(am|0)?an:am;an=f-1|0;if((an|0)==0){break}else{f=an;ae=ae+1|0}}ae=m+(ad*72&-1)+(D*36&-1)|0;f=c[n+(ad<<3)+(D<<2)>>2]|0;am=0;E=39;af=0;while(1){an=255-(c[k+(ad*312&-1)+(D*156&-1)+(am<<2)>>2]|0)|0;bi=(af|0)<(an|0)?an:af;an=E-1|0;if((an|0)==0){break}else{am=am+1|0;E=an;af=bi}}af=l+(ad*312&-1)+(D*156&-1)|0;E=C;am=c[T>>2]|0;an=(bi|0)>0;ah=ae|0;bj=m+(ad*72&-1)+(D*36&-1)+12|0;Z=bi;Q=-1;d=0;I=bi;while(1){bk=(Z|0)/2&-1;if(an){aa=39;L=0;F=0;while(1){G=c[k+(ad*312&-1)+(D*156&-1)+(F<<2)>>2]|0;R=((_(am-G|0,bk)|0)/(bi|0)&-1)+G|0;if((R|0)<0){bl=0}else{bl=(R|0)>255?255:R}c[j+(F<<2)>>2]=bl;R=(L|0)<(bl|0)?bl:L;G=aa-1|0;if((G|0)==0){bm=R;break}else{aa=G;L=R;F=F+1|0}}}else{cF(X|0,E|0,156)|0;F=39;L=0;aa=0;while(1){R=c[k+(ad*312&-1)+(D*156&-1)+(aa<<2)>>2]|0;G=(L|0)<(R|0)?R:L;R=F-1|0;if((R|0)==0){bm=G;break}else{F=R;L=G;aa=aa+1|0}}}ak=+g[(c[H>>2]|0)+4764>>2];a9[c[ah>>2]&15](ae,aw,af,bm);if((cn(c[(c[bj>>2]|0)+76>>2]|0,c[H>>2]|0)|0)!=0){S=202;break L294}aa=cz(ae)|0;L=c[H>>2]|0;F=(c[L+4844>>2]|0)+aa|0;g[L+4764>>2]=ak;L=(F|0)>(f|0);F=L?I:bk-1|0;aa=L?bk+1|0:d;bn=L?Q:bk;if((aa|0)>(F|0)){break}else{Z=aa+F|0;Q=bn;d=aa;I=F}}if((bn|0)>-1){if((bk|0)==(bn|0)){break}if(an){I=39;d=0;Q=0;while(1){Z=c[k+(ad*312&-1)+(D*156&-1)+(Q<<2)>>2]|0;T=((_(am-Z|0,bn)|0)/(bi|0)&-1)+Z|0;if((T|0)<0){bo=0}else{bo=(T|0)>255?255:T}c[j+(Q<<2)>>2]=bo;T=(d|0)<(bo|0)?bo:d;Z=I-1|0;if((Z|0)==0){bp=T;break}else{I=Z;d=T;Q=Q+1|0}}}else{cF(X|0,E|0,156)|0;Q=39;d=0;I=0;while(1){T=c[k+(ad*312&-1)+(D*156&-1)+(I<<2)>>2]|0;Z=(d|0)<(T|0)?T:d;T=Q-1|0;if((T|0)==0){bp=Z;break}else{Q=T;d=Z;I=I+1|0}}}ak=+g[(c[H>>2]|0)+4764>>2];a9[c[ah>>2]&15](ae,aw,af,bp);if((cn(c[(c[bj>>2]|0)+76>>2]|0,c[H>>2]|0)|0)!=0){S=213;break L294}cz(ae)|0;g[(c[H>>2]|0)+4764>>2]=ak;break}I=255;d=am;Q=-1;Z=am+255|0;while(1){bq=(Z|0)/2&-1;if(an){T=(Z|0)<-1?0:(bq|0)>255?255:bq;C=39;F=0;aa=0;while(1){c[j+(aa<<2)>>2]=T;L=(F|0)<(T|0)?T:F;G=C-1|0;if((G|0)==0){br=L;break}else{C=G;F=L;aa=aa+1|0}}}else{cF(X|0,E|0,156)|0;aa=39;F=0;C=0;while(1){T=c[k+(ad*312&-1)+(D*156&-1)+(C<<2)>>2]|0;L=(F|0)<(T|0)?T:F;T=aa-1|0;if((T|0)==0){br=L;break}else{aa=T;F=L;C=C+1|0}}}ak=+g[(c[H>>2]|0)+4764>>2];a9[c[ah>>2]&15](ae,aw,af,br);if((cn(c[(c[bj>>2]|0)+76>>2]|0,c[H>>2]|0)|0)!=0){S=222;break L294}C=cz(ae)|0;F=c[H>>2]|0;aa=(c[F+4844>>2]|0)+C|0;g[F+4764>>2]=ak;F=(aa|0)>(f|0);bs=F?Q:bq;aa=F?bq+1|0:d;C=F?I:bq-1|0;if((aa|0)>(C|0)){break}else{I=C;d=aa;Q=bs;Z=aa+C|0}}if((bs|0)>-1){if((bq|0)==(bs|0)){break}if(an){Z=(bs|0)<0?0:(bs|0)>255?255:bs;Q=39;d=0;I=0;while(1){c[j+(I<<2)>>2]=Z;am=(d|0)<(Z|0)?Z:d;C=Q-1|0;if((C|0)==0){bt=am;break}else{Q=C;d=am;I=I+1|0}}}else{cF(X|0,E|0,156)|0;I=39;d=0;Q=0;while(1){Z=c[k+(ad*312&-1)+(D*156&-1)+(Q<<2)>>2]|0;an=(d|0)<(Z|0)?Z:d;Z=I-1|0;if((Z|0)==0){bt=an;break}else{I=Z;d=an;Q=Q+1|0}}}ak=+g[(c[H>>2]|0)+4764>>2];a9[c[ah>>2]&15](ae,aw,af,bt);if((cn(c[(c[bj>>2]|0)+76>>2]|0,c[H>>2]|0)|0)!=0){S=232;break L294}cz(ae)|0;g[(c[H>>2]|0)+4764>>2]=ak;break}Q=c[H>>2]|0;d=c[Q+4780>>2]|0;if((d|0)>512){bu=d;bv=1024}else{I=Q+4844|0;Q=1024;E=d;an=512;while(1){Z=Q;am=an;while(1){bw=am+E>>1;C=bw-d|0;ak=+g[(c[H>>2]|0)+4764>>2];aa=0;F=0;do{L=(c[j+(aa<<2)>>2]|0)+C|0;T=c[l+(ad*312&-1)+(D*156&-1)+(aa<<2)>>2]|0;G=(L|0)<(T|0)?T:L;L=(G|0)>255?255:G;F=(F|0)<(L|0)?L:F;c[h+(aa<<2)>>2]=L;aa=aa+1|0;}while((aa|0)<39);a9[c[ah>>2]&15](ae,A,af,F);if((cn(c[(c[bj>>2]|0)+76>>2]|0,c[H>>2]|0)|0)!=0){S=240;break L294}aa=cz(ae)|0;g[(c[H>>2]|0)+4764>>2]=ak;if((aa|0)!=0){if(((c[I>>2]|0)+aa|0)>=(f|0)){break}}aa=bw-1|0;if((E|0)>(aa|0)){break L299}else{Z=bw;am=aa}}aa=bw+1|0;C=(Z|0)==1024?bw:Z;if((aa|0)>(am|0)){bu=bw;bv=C;break}else{Q=C;E=aa;an=am}}}if((bv|0)==(bu|0)){break}an=bv-d|0;aj=+g[(c[H>>2]|0)+4764>>2];E=0;Q=0;do{f=(c[j+(E<<2)>>2]|0)+an|0;I=c[l+(ad*312&-1)+(D*156&-1)+(E<<2)>>2]|0;aa=(f|0)<(I|0)?I:f;f=(aa|0)>255?255:aa;Q=(Q|0)<(f|0)?f:Q;c[h+(E<<2)>>2]=f;E=E+1|0;}while((E|0)<39);a9[c[ah>>2]&15](ae,A,af,Q);if((cn(c[(c[bj>>2]|0)+76>>2]|0,c[H>>2]|0)|0)!=0){S=249;break L294}cz(ae)|0;g[(c[H>>2]|0)+4764>>2]=aj}}while(0);ch(b,ad,D,V);if((c[ap>>2]|0)==1){cf(b,b+304+(ad*10504&-1)+(D*5252&-1)|0)}E=(c[b+304+(ad*10504&-1)+(D*5252&-1)+4844>>2]|0)+(c[b+304+(ad*10504&-1)+(D*5252&-1)+4768>>2]|0)|0;c[v>>2]=E;an=au+E|0;c[ax>>2]=an;E=D+1|0;if((E|0)<(aB|0)){D=E;au=an}else{bx=an;break}}}else{bx=0}by=bx+aq|0;au=ad+1|0;if((au|0)<(aA|0)){ad=au;aq=by}else{S=255;break}}if((S|0)==202){ct(c[bj>>2]|0,101008,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aE(-1|0)}else if((S|0)==213){ct(c[bj>>2]|0,101008,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aE(-1|0)}else if((S|0)==222){ct(c[bj>>2]|0,101008,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aE(-1|0)}else if((S|0)==232){ct(c[bj>>2]|0,101008,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aE(-1|0)}else if((S|0)==240){ct(c[bj>>2]|0,101008,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aE(-1|0)}else if((S|0)==249){ct(c[bj>>2]|0,101008,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aE(-1|0)}else if((S|0)==255){if((by|0)<=(aC|0)){aV=by;break}ct(b,100384,(t=i,i=i+16|0,c[t>>2]=aC,c[t+8>>2]=by,t)|0);aE(-1|0)}}else{aV=0}}while(0);do{if((c[B>>2]|0)==0){if((ar|0)==0){S=260}else{if((c[b+124>>2]|0)==0){bz=1}else{S=260}}if((S|0)==260){bz=c[b+112>>2]|0}by=c[b+116>>2]|0;aC=bz;while(1){if((aC|0)>=(by|0)){break}if((aV|0)>(c[y+(aC<<2)>>2]|0)){aC=aC+1|0}else{break}}bj=(aC|0)>(by|0)?by:aC;if((as|0)>0){bA=by}else{c[b+84744>>2]=bj;bB=bj;break}while(1){if((bA|0)<=(bj|0)){break}if(((c[y+(bA<<2)>>2]|0)-aV|0)>(as|0)){bA=bA-1|0}else{break}}c[b+84744>>2]=bA;bB=bA}else{c[b+84744>>2]=0;bB=0}}while(0);if((aV|0)>(c[y+(bB<<2)>>2]|0)){ct(b,100624,(t=i,i=i+1|0,i=i+7>>3<<3,c[t>>2]=0,t)|0);aE(-1|0)}y=b+16|0;if((bB|0)==0){bC=b+120|0;bD=c[y>>2]|0}else{aV=c[y>>2]|0;bC=66168+(aV<<6)+(bB<<2)|0;bD=aV}aV=c[b+84752>>2]|0;bB=c[b+64>>2]|0;y=((_((bD*72e3&-1)+72e3|0,c[bC>>2]|0)|0)/(bB|0)&-1)+aV<<3;aV=c[ai>>2]|0;bB=(y-(c[b+24>>2]<<3)|0)/(aV|0)&-1;bC=(aV<<11)-8|0;bD=(c[b+148>>2]|0)-y|0;y=b+52144|0;bA=(bD|0)>(bC|0)?bC:bD;c[y>>2]=bA;if((bA|0)<0){S=276}else{if((c[b+144>>2]|0)!=0){S=276}}if((S|0)==276){c[y>>2]=0}S=b+52140|0;bA=b+21320|0;c[bA>>2]=0;bD=b+85804|0;bC=c[bD>>2]|0;if((bC|0)==0){bE=aV}else{c[bC+203484>>2]=(bB|0)/2&-1;c[(c[bD>>2]|0)+203488>>2]=c[S>>2];bE=c[ai>>2]|0}if((bE|0)<=0){bF=_(bE,bB)|0;bG=c[S>>2]|0;bH=bG+bF|0;bI=b+21324|0;bJ=(bH|0)%8&-1;bK=bH-bJ|0;bL=c[y>>2]|0;bM=bK-bL|0;bN=(bM|0)>0;bO=bN?bM:0;bP=bO+bJ|0;bQ=b+21312|0;bR=c[bQ>>2]|0;bS=bR<<3;bT=(bS|0)<(bP|0);bU=bT?bS:bP;bV=(bU|0)/8&-1;bX=bV<<3;c[bA>>2]=bX;bY=bP-bX|0;b_=bH-bX|0;b$=bR-bV|0;c[bQ>>2]=b$;c[bI>>2]=bY;b0=b_-bY|0;c[S>>2]=b0;i=e;return}ai=c[ao>>2]|0;ao=(ai|0)>0;bD=0;do{if(ao){bC=0;aV=c[S>>2]|0;do{aV=aV-((c[b+304+(bD*10504&-1)+(bC*5252&-1)+4844>>2]|0)+(c[b+304+(bD*10504&-1)+(bC*5252&-1)+4768>>2]|0))|0;c[S>>2]=aV;bC=bC+1|0;}while((bC|0)<(ai|0))}bD=bD+1|0;}while((bD|0)<(bE|0));bF=_(bE,bB)|0;bG=c[S>>2]|0;bH=bG+bF|0;bI=b+21324|0;bJ=(bH|0)%8&-1;bK=bH-bJ|0;bL=c[y>>2]|0;bM=bK-bL|0;bN=(bM|0)>0;bO=bN?bM:0;bP=bO+bJ|0;bQ=b+21312|0;bR=c[bQ>>2]|0;bS=bR<<3;bT=(bS|0)<(bP|0);bU=bT?bS:bP;bV=(bU|0)/8&-1;bX=bV<<3;c[bA>>2]=bX;bY=bP-bX|0;b_=bH-bX|0;b$=bR-bV|0;c[bQ>>2]=b$;c[bI>>2]=bY;b0=b_-bY|0;c[S>>2]=b0;i=e;return}function bV(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,Q=0,R=0.0,S=0.0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0;f=i;i=i+2488|0;h=f|0;j=f+8|0;k=f+168|0;l=f+2472|0;m=a+304|0;n=a+76|0;o=c[n>>2]|0;p=a+116|0;q=c[p>>2]|0;r=a+84744|0;c[r>>2]=q;s=a+16|0;if((q|0)==0){t=a+120|0;u=c[s>>2]|0}else{v=c[s>>2]|0;t=66168+(v<<6)+(q<<2)|0;u=v}v=a+84752|0;q=c[v>>2]|0;w=a+64|0;x=c[w>>2]|0;y=((_((u*72e3&-1)+72e3|0,c[t>>2]|0)|0)/(x|0)&-1)+q<<3;t=a+24|0;z=c[t>>2]|0;A=(y-(z<<3)|0)/(o|0)&-1;B=(o<<11)-8|0;C=a+148|0;D=c[C>>2]|0;E=D-y|0;y=a+52144|0;F=(E|0)>(B|0)?B:E;c[y>>2]=F;if((F|0)<0){G=294}else{if((c[a+144>>2]|0)==0){H=F}else{G=294}}if((G|0)==294){c[y>>2]=0;H=0}F=_(A,o)|0;E=a+52140|0;B=c[E>>2]|0;I=((B|0)<(H|0)?B:H)+F|0;F=(I|0)>(D|0)?D:I;I=a+21320|0;c[I>>2]=0;D=a+85804|0;H=c[D>>2]|0;if((H|0)==0){J=u;K=q;L=x;M=z;N=o;O=s|0}else{c[H+203484>>2]=(A|0)/2&-1;c[(c[D>>2]|0)+203488>>2]=c[E>>2];A=s|0;J=c[A>>2]|0;K=c[v>>2]|0;L=c[w>>2]|0;M=c[t>>2]|0;N=c[n>>2]|0;O=A}c[r>>2]=1;A=M<<3;M=(((_((J*72e3&-1)+72e3|0,c[66172+(J<<6)>>2]|0)|0)/(L|0)&-1)+K<<3)-A|0;K=a+72|0;J=c[K>>2]|0;s=_(J,N)|0;H=(M|0)/(s|0)&-1;M=_(o*576e3&-1,c[a+108>>2]|0)|0;o=a+85096|0;if((c[o>>2]&1|0)==0){Q=M}else{Q=~~(+(M|0)*1.09)}M=(((Q|0)/(L|0)&-1)-A|0)/(s|0)&-1;R=(11.0- +g[a+244>>2])*.07/5.5+.93;S=R<.9?.8999999761581421:R;s=(N|0)>0;if(s){A=~~(+(M|0)*(S>1.0?1.0:S));L=(M|0)/2&-1;Q=(M*3&-1|0)/2&-1;z=(J|0)>0;x=0;do{do{if(z){q=0;u=0;do{B=l+(x<<3)+(q<<2)|0;c[B>>2]=A;S=+g[b+(x<<3)+(q<<2)>>2];if(S>700.0){T=~~((S+-700.0)/1.4);c[B>>2]=A;if((c[a+304+(x*10504&-1)+(q*5252&-1)+4788>>2]|0)==2){U=(T|0)<(L|0)?L:T}else{U=T}if((U|0)>(Q|0)){V=Q}else{V=(U|0)<0?0:U}T=V+A|0;c[B>>2]=T;W=T}else{W=A}if((W|0)>4095){c[B>>2]=4095;X=4095}else{X=W}u=X+u|0;q=q+1|0;}while((q|0)<(J|0));if((u|0)>7680){Y=0}else{break}do{q=l+(x<<3)+(Y<<2)|0;c[q>>2]=((c[q>>2]|0)*7680&-1|0)/(u|0)&-1;Y=Y+1|0;}while((Y|0)<(J|0))}}while(0);x=x+1|0;}while((x|0)<(N|0))}x=a+84756|0;Y=c[x>>2]|0;do{if((Y|0)==2){if(!s){Z=N;break}X=_(J,M)|0;W=0;while(1){A=l+(W<<3)|0;S=(.5- +g[d+(W<<2)>>2])*.33*2.0;R=S<0.0?0.0:S;V=c[A>>2]|0;U=l+(W<<3)+4|0;Q=c[U>>2]|0;L=~~(+(Q+V|0)*(R>.5?.25:R*.5));b=4095-V|0;z=(L|0)>(b|0)?b:L;L=(z|0)<0?0:z;do{if((Q|0)>124){z=Q-L|0;if((z|0)<=125){b=V-125+Q|0;c[A>>2]=b;c[U>>2]=125;$=b;aa=125;break}if((V|0)<(X|0)){b=L+V|0;c[A>>2]=b;ab=b}else{ab=V}c[U>>2]=z;$=ab;aa=z}else{$=V;aa=Q}}while(0);Q=$+aa|0;if((Q|0)>7680){c[A>>2]=($*7680&-1|0)/(Q|0)&-1;c[U>>2]=(aa*7680&-1|0)/(Q|0)&-1}Q=W+1|0;if((Q|0)<(N|0)){W=Q}else{G=318;break}}}else{G=318}}while(0);L499:do{if((G|0)==318){if(!s){Z=N;break}aa=(J|0)>0;$=0;ab=0;while(1){if(aa){d=0;M=$;while(1){W=l+(ab<<3)+(d<<2)|0;X=c[W>>2]|0;if((X|0)>4095){c[W>>2]=4095;ac=4095}else{ac=X}X=ac+M|0;W=d+1|0;if((W|0)<(J|0)){d=W;M=X}else{ad=X;break}}}else{ad=$}M=ab+1|0;if((M|0)<(N|0)){$=ad;ab=M}else{break}}if((ad|0)>(F|0)&(ad|0)>0){ab=0;do{if(aa){$=0;do{M=l+(ab<<3)+($<<2)|0;c[M>>2]=(_(c[M>>2]|0,F)|0)/(ad|0)&-1;$=$+1|0;}while(($|0)<(J|0))}ab=ab+1|0;}while((ab|0)<(N|0))}ab=a+84912|0;aa=a+84916|0;$=a+84908|0;M=k|0;d=a+85824|0;U=j|0;A=a+36|0;X=0;W=J;Q=Y;while(1){if((Q|0)==2){V=0;do{L=a+304+(X*10504&-1)+(V<<2)|0;R=+g[L>>2];z=a+304+(X*10504&-1)+5252+(V<<2)|0;S=+g[z>>2];g[L>>2]=(R+S)*.7071067690849304;g[z>>2]=(R-S)*.7071067690849304;V=V+1|0;}while((V|0)<576);ae=c[K>>2]|0}else{ae=W}if((ae|0)>0){V=0;while(1){z=a+304+(X*10504&-1)+(V*5252&-1)|0;g[$>>2]=+P(10.0,+(+g[((c[a+304+(X*10504&-1)+(V*5252&-1)+4788>>2]|0)==2?aa:ab)>>2]*.1));bW(a,z);g[h>>2]=0.0;L=c[a+304+(X*10504&-1)+(V*5252&-1)+5208>>2]|0;g[a+304+(X*10504&-1)+(V*5252&-1)+4764>>2]=0.0;cE(k+(L<<2)|0,0,576-L<<2|0);a9[c[d>>2]&15](z,M,L,h);if(+g[h>>2]>9.999999682655225e-21){L=(c[o>>2]|0)>>>1&1;b=a+304+(X*10504&-1)+(V*5252&-1)+4864|0;if((c[b>>2]|0)>0){u=0;do{c[a+84936+(u<<2)>>2]=L;u=u+1|0;}while((u|0)<(c[b>>2]|0))}b=l+(X<<3)+(V<<2)|0;if((b9(a,e+(X*976&-1)+(V*488&-1)|0,z,U)|0)==0){c[b>>2]=H;af=H}else{af=c[b>>2]|0}bX(a,z,U,M,V,af)|0}else{cE(a+304+(X*10504&-1)+(V*5252&-1)+2304|0,0,2304)}ch(a,X,V,m);if((c[A>>2]|0)==1){cf(a,z)}c[E>>2]=(c[E>>2]|0)-((c[a+304+(X*10504&-1)+(V*5252&-1)+4844>>2]|0)+(c[a+304+(X*10504&-1)+(V*5252&-1)+4768>>2]|0));b=V+1|0;u=c[K>>2]|0;if((b|0)<(u|0)){V=b}else{ag=u;break}}}else{ag=ae}V=X+1|0;u=c[n>>2]|0;if((V|0)>=(u|0)){Z=u;break L499}X=V;W=ag;Q=c[x>>2]|0}}}while(0);x=c[a+112>>2]|0;c[r>>2]=x;if((x|0)>(c[p>>2]|0)){ah=0;ai=Z;aj=_(ai,ah)|0;ak=c[E>>2]|0;al=ak+aj|0;am=a+21324|0;an=(al|0)%8&-1;ao=al-an|0;ap=c[y>>2]|0;aq=ao-ap|0;ar=(aq|0)>0;as=ar?aq:0;at=as+an|0;au=a+21312|0;av=c[au>>2]|0;aw=av<<3;ax=(aw|0)<(at|0);ay=ax?aw:at;az=(ay|0)/8&-1;aA=az<<3;c[I>>2]=aA;aB=at-aA|0;aC=al-aA|0;aD=av-az|0;c[au>>2]=aD;c[am>>2]=aB;aE=aC-aB|0;c[E>>2]=aE;i=f;return}Z=a+120|0;ag=a+144|0;ae=x;do{x=c[O>>2]|0;if((ae|0)==0){aF=Z}else{aF=66168+(x<<6)+(ae<<2)|0}K=c[v>>2]|0;m=c[w>>2]|0;af=((_((x*72e3&-1)+72e3|0,c[aF>>2]|0)|0)/(m|0)&-1)+K<<3;K=c[n>>2]|0;aG=(af-(c[t>>2]<<3)|0)/(K|0)&-1;m=(K<<11)-8|0;x=c[C>>2]|0;H=x-af|0;af=(H|0)>(m|0)?m:H;c[y>>2]=af;if((af|0)<0){G=362}else{if((c[ag>>2]|0)==0){aH=af}else{G=362}}if((G|0)==362){G=0;c[y>>2]=0;aH=0}af=_(aG,K)|0;K=c[E>>2]|0;H=((K|0)<(aH|0)?K:aH)+af|0;c[I>>2]=0;af=c[D>>2]|0;if((af|0)!=0){c[af+203484>>2]=(aG|0)/2&-1;c[(c[D>>2]|0)+203488>>2]=c[E>>2]}if((((H|0)>(x|0)?x:H)|0)>-1){break}ae=(c[r>>2]|0)+1|0;c[r>>2]=ae;}while((ae|0)<=(c[p>>2]|0));ah=aG;ai=c[n>>2]|0;aj=_(ai,ah)|0;ak=c[E>>2]|0;al=ak+aj|0;am=a+21324|0;an=(al|0)%8&-1;ao=al-an|0;ap=c[y>>2]|0;aq=ao-ap|0;ar=(aq|0)>0;as=ar?aq:0;at=as+an|0;au=a+21312|0;av=c[au>>2]|0;aw=av<<3;ax=(aw|0)<(at|0);ay=ax?aw:at;az=(ay|0)/8&-1;aA=az<<3;c[I>>2]=aA;aB=at-aA|0;aC=al-aA|0;aD=av-az|0;c[au>>2]=aD;c[am>>2]=aB;aE=aC-aB|0;c[E>>2]=aE;i=f;return}function bW(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0.0,F=0.0,G=0,H=0.0;d=i;i=i+2304|0;e=d|0;c[b+4768>>2]=0;c[b+4772>>2]=0;c[b+4776>>2]=0;c[b+4780>>2]=210;c[b+4784>>2]=0;f=a+64|0;cE(b+4796|0,0,52);h=b+4848|0;if((c[f>>2]|0)<8001){c[h>>2]=17;c[b+4852>>2]=9;c[b+4856>>2]=17;j=17;k=17}else{c[h>>2]=21;c[b+4852>>2]=12;l=(c[a+85092>>2]|0)!=0?22:21;c[b+4856>>2]=l;j=l;k=21}l=b+4856|0;m=b+4864|0;c[m>>2]=j;j=b+4860|0;c[j>>2]=k;k=b+4868|0;c[k>>2]=11;n=0;while(1){o=n+1|0;c[b+4872+(n<<2)>>2]=(c[a+21360+(o<<2)>>2]|0)-(c[a+21360+(n<<2)>>2]|0);c[b+5028+(n<<2)>>2]=3;if((o|0)<22){n=o}else{break}}n=b+4788|0;do{if((c[n>>2]|0)==2){o=b+4852|0;c[o>>2]=0;c[h>>2]=0;if((c[b+4792>>2]|0)==0){p=0;q=0}else{c[o>>2]=3;r=(c[a+76>>2]<<1)+4|0;c[h>>2]=r;p=r;q=3}if((c[f>>2]|0)<8001){r=((9-q|0)*3&-1)+p|0;c[m>>2]=r;s=r}else{c[m>>2]=((((c[a+85092>>2]|0)!=0?13:12)-q|0)*3&-1)+p;s=((12-q|0)*3&-1)+p|0}c[j>>2]=s;c[k>>2]=s-18;c[l>>2]=p;r=c[a+21360+(p<<2)>>2]|0;t=e;u=b;cF(t|0,u|0,2304)|0;u=b+(r<<2)|0;r=q;while(1){t=c[a+21452+(r<<2)>>2]|0;v=r+1|0;w=c[a+21452+(v<<2)>>2]|0;x=w-t|0;if((t|0)<(w|0)){y=u;z=t;while(1){g[y>>2]=+g[e+((z*3&-1)<<2)>>2];A=z+1|0;if((A|0)<(w|0)){y=y+4|0;z=A}else{break}}z=u+(x<<2)|0;y=t;while(1){g[z>>2]=+g[e+((y*3&-1)+1<<2)>>2];A=y+1|0;if((A|0)<(w|0)){z=z+4|0;y=A}else{break}}y=x<<1;z=u+(y<<2)|0;A=t;while(1){g[z>>2]=+g[e+((A*3&-1)+2<<2)>>2];B=A+1|0;if((B|0)<(w|0)){z=z+4|0;A=B}else{break}}C=u+(y+x<<2)|0}else{C=u}if((v|0)<13){u=C;r=v}else{break}}r=c[o>>2]|0;if((r|0)>=13){break}u=c[h>>2]|0;A=r;while(1){r=A+1|0;z=(c[a+21452+(r<<2)>>2]|0)-(c[a+21452+(A<<2)>>2]|0)|0;w=u+2|0;c[b+4872+(w<<2)>>2]=z;t=u+1|0;c[b+4872+(t<<2)>>2]=z;c[b+4872+(u<<2)>>2]=z;c[b+5028+(u<<2)>>2]=0;c[b+5028+(t<<2)>>2]=1;c[b+5028+(w<<2)>>2]=2;if((r|0)<13){u=u+3|0;A=r}else{break}}}}while(0);c[b+5184>>2]=0;c[b+5188>>2]=48912;cE(b+5192|0,0,16);c[b+5208>>2]=575;cE(b+4608|0,0,156);h=c[a+104>>2]|0;if((h|0)==1|(h|0)==4|(h|0)==3|(h|0)==0){i=d;return}h=c[a+85796>>2]|0;if((c[n>>2]|0)!=2){n=h+8|0;C=h+20|0;e=a+84852|0;q=5;L607:while(1){p=c[a+21508+(q<<2)>>2]|0;l=c[a+21508+(q+1<<2)>>2]|0;D=+b$(+g[n>>2],+g[h+164+(q<<2)>>2],+g[C>>2],0.0);E=+g[e>>2];if(E>9.999999960041972e-13){F=D*E}else{F=D}s=l-1|0;if((s|0)>=(p|0)){l=s;do{s=b+(l<<2)|0;if(+N(+(+g[s>>2]))>=F){G=416;break L607}g[s>>2]=0.0;l=l-1|0;}while((l|0)>=(p|0))}if((q|0)<=0){G=417;break}q=q-1|0}if((G|0)==416){i=d;return}else if((G|0)==417){i=d;return}}G=a+21500|0;q=a+21504|0;e=a+21536|0;C=h+8|0;n=h+20|0;p=a+84904|0;l=0;do{s=5;L624:while(1){k=c[G>>2]|0;j=(_((c[q>>2]|0)-k|0,l)|0)+(k*3&-1)|0;k=c[a+21536+(s<<2)>>2]|0;m=j+(k-(c[e>>2]|0))|0;j=c[a+21536+(s+1<<2)>>2]|0;F=+b$(+g[C>>2],+g[h+188+(s<<2)>>2],+g[n>>2],0.0);D=+g[p>>2];if(D>9.999999960041972e-13){H=F*D}else{H=F}f=j+(k^-1)+m|0;if((f|0)>=(m|0)){k=f;do{f=b+(k<<2)|0;if(+N(+(+g[f>>2]))>=H){break L624}g[f>>2]=0.0;k=k-1|0;}while((k|0)>=(m|0))}if((s|0)<=0){break}s=s-1|0}l=l+1|0;}while((l|0)<3);i=d;return}function bX(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0.0,at=0,au=0,av=0.0,aw=0.0,ax=0.0,ay=0,az=0.0,aA=0.0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aK=0,aL=0,aM=0.0,aN=0,aO=0,aP=0,aQ=0,aR=0.0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0.0,a3=0,a4=0,a5=0,a6=0.0,a7=0,a8=0,a9=0,ba=0.0,bb=0,bc=0.0,bd=0.0,be=0.0,bf=0.0,bg=0.0,bh=0.0,bi=0.0,bj=0,bk=0,bl=0;j=i;i=i+8248|0;l=j|0;m=j+5256|0;n=j+7560|0;p=j+7720|0;q=j+7744|0;r=j+8224|0;s=a+84928+(f<<2)|0;t=c[s>>2]|0;u=a+84920+(f<<2)|0;f=c[u>>2]|0;v=b+4780|0;c[v>>2]=f;w=h-(c[b+4844>>2]|0)|0;x=cg(a,e,b,0)|0;if((t|0)==1|(x|0)==(w|0)){y=x}else{z=t;t=0;A=0;B=x;while(1){do{if((B|0)>(w|0)){x=(A|0)==2?1:t;if((x|0)==0){C=z;D=1;E=0;F=z;break}G=(z|0)/2&-1;C=G;D=1;E=x;F=G}else{G=(A|0)==1?1:t;if((G|0)==0){H=z}else{H=(z|0)/2&-1}C=-H|0;D=2;E=G;F=H}}while(0);G=(c[v>>2]|0)+C|0;x=(G|0)<0;I=x?0:G;G=(I|0)>255;c[v>>2]=G?255:I;I=cg(a,e,b,0)|0;if((F|0)==1|(I|0)==(w|0)){y=I;break}else{z=F;t=G?1:x?1:E;A=D;B=I}}}L650:do{if((y|0)>(w|0)){B=y;while(1){D=c[v>>2]|0;if((D|0)>=255){J=B;break L650}c[v>>2]=D+1;D=cg(a,e,b,0)|0;if((D|0)>(w|0)){B=D}else{J=D;break}}}else{J=y}}while(0);c[s>>2]=(f-(c[v>>2]|0)|0)>3?4:2;c[u>>2]=c[v>>2];v=b+4768|0;c[v>>2]=J;J=a+28|0;if((c[J>>2]|0)==0){K=100;i=j;return K|0}cE(q|0,0,476);u=n|0;ca(b,d,u,p,q);f=p+20|0;c[f>>2]=c[v>>2];s=l;y=b;cF(s|0,y|0,5252)|0;w=m;m=e;cF(w|0,m|0,2304)|0;B=a+85096|0;D=a+85092|0;A=l+4836|0;E=l+4860|0;t=a+40|0;F=l+4764|0;z=l+4844|0;C=l+4780|0;H=l+4768|0;I=p+12|0;x=r+20|0;G=b+4788|0;L=a+84|0;M=a+88|0;P=l+4864|0;Q=r+16|0;R=p+16|0;S=r+8|0;T=p+8|0;U=a+48|0;V=p;W=r;X=r+12|0;Y=r|0;Z=p|0;$=r+4|0;aa=p+4|0;p=a+84936|0;ab=l+4832|0;ac=l+4788|0;ad=a+32|0;ae=l+4848|0;af=l+4868|0;ag=a+76|0;ah=9999999;ai=0;aj=0;while(1){ak=(ai|0)==1?2:1;al=(ai|0)==0;am=ah;an=0;L660:while(1){ao=(c[B>>2]&2|0)==0?3:20;ap=c[E>>2]|0;do{if((c[D>>2]|0)!=0){if(+g[n+(ap<<2)>>2]>1.0){aq=am;ar=584;break L660}if((c[ac>>2]|0)!=2){break}if(+g[n+(ap+1<<2)>>2]>1.0){aq=am;ar=584;break L660}if(+g[n+(ap+2<<2)>>2]>1.0){aq=am;ar=584;break L660}}}while(0);as=(c[A>>2]|0)==0?1.2968395948410034:1.6817928552627563;at=(ap|0)>0;if(at){au=0;av=0.0;while(1){aw=+g[n+(au<<2)>>2];ax=av<aw?aw:av;ay=au+1|0;if((ay|0)<(ap|0)){au=ay;av=ax}else{az=ax;break}}}else{az=0.0}au=c[t>>2]|0;ay=(au|0)==3?ak:au;do{if((ay|0)==1){av=az;if(az>1.0){ax=+N(+(+O(+av)));aA=az==+-o?+o:ax;break}else{aA=av*.95;break}}else if((ay|0)==2){aA=az}else{if(az>1.0){aA=1.0;break}aA=az*.95}}while(0);L680:do{if(at){ay=0;aB=0;aC=ap;aD=au;while(1){aE=c[l+4872+(ay<<2)>>2]|0;aF=aE+aB|0;if(+g[n+(ay<<2)>>2]<aA){aG=aC;aH=aD}else{do{if((c[B>>2]&2|0)!=0){aI=a+84936+(ay<<2)|0;aJ=(c[aI>>2]|0)==0;c[aI>>2]=aJ&1;if(aJ){break}if((c[t>>2]|0)==2){aK=aC;aL=2;break L680}}}while(0);aJ=l+4608+(ay<<2)|0;c[aJ>>2]=(c[aJ>>2]|0)+1;if((aE|0)>0){aJ=-aE|0;av=+g[F>>2];while(1){aI=e+(aJ+aF<<2)|0;ax=as*+g[aI>>2];g[aI>>2]=ax;if(ax>av){g[F>>2]=ax;aM=ax}else{aM=av}aI=aJ+1|0;if((aI|0)<0){aJ=aI;av=aM}else{break}}}aJ=c[t>>2]|0;aE=c[E>>2]|0;if((aJ|0)==2){aK=aE;aL=2;break L680}else{aG=aE;aH=aJ}}aJ=ay+1|0;if((aJ|0)<(aG|0)){ay=aJ;aB=aF;aC=aG;aD=aH}else{aK=aG;aL=aH;break}}}else{aK=ap;aL=au}}while(0);au=0;while(1){if((au|0)>=(aK|0)){aN=am;aO=aL;break L660}if((c[l+4608+(au<<2)>>2]|0)==(-(c[l+4808+(c[l+5028+(au<<2)>>2]<<2)>>2]|0)|0)){break}else{au=au+1|0}}au=cn(c[ag>>2]|0,l)|0;if((au|0)!=0){if((c[J>>2]|0)<=1){aq=am;ar=584;break}cE(p|0,0,156);do{if((c[A>>2]|0)==0){if((c[E>>2]|0)>0){ap=0;at=0;do{aD=c[l+4872+(ap<<2)>>2]|0;aC=l+4608+(ap<<2)|0;aB=c[aC>>2]|0;if((c[ab>>2]|0)==0){aP=aB}else{aP=(c[14096+(ap<<2)>>2]|0)+aB|0}at=aD+at|0;do{if((aP&1|0)==0){aQ=aP}else{aB=aP+1|0;if((aD|0)<=0){aQ=aB;break}ay=-aD|0;as=+g[F>>2];while(1){aJ=e+(ay+at<<2)|0;av=+g[aJ>>2]*1.2968395948410034;g[aJ>>2]=av;if(av>as){g[F>>2]=av;aR=av}else{aR=as}aJ=ay+1|0;if((aJ|0)<0){ay=aJ;as=aR}else{aQ=aB;break}}}}while(0);c[aC>>2]=aQ>>1;ap=ap+1|0;}while((ap|0)<(c[E>>2]|0))}c[ab>>2]=0;c[A>>2]=1;ar=508}else{if((c[ac>>2]|0)!=2){aS=au;break}if((c[ad>>2]|0)<=0){aS=au;break}ap=c[ae>>2]|0;at=0;while(1){if((at|0)>=(ap|0)){aT=0;aU=ap;break}if((c[l+4608+(at<<2)>>2]|0)>15){aq=am;ar=584;break L660}else{at=at+1|0}}while(1){at=aT+aU|0;ap=c[af>>2]|0;if((at|0)<(ap|0)){aD=0;aF=at;while(1){aB=c[l+4608+(aF<<2)>>2]|0;ay=(aD|0)<(aB|0)?aB:aD;aB=aF+3|0;if((aB|0)<(ap|0)){aD=ay;aF=aB}else{aV=ay;aW=aB;break}}}else{aV=0;aW=at}aF=c[E>>2]|0;if((aW|0)<(aF|0)){aD=0;ap=aW;do{aC=c[l+4608+(ap<<2)>>2]|0;aD=(aD|0)<(aC|0)?aC:aD;ap=ap+3|0;}while((ap|0)<(aF|0));aX=(aD|0)<8}else{aX=1}do{if((aV|0)<16&aX){aY=aT+1|0;aZ=aF}else{ap=l+4808+(aT<<2)|0;at=c[ap>>2]|0;if((at|0)>6){aq=am;ar=584;break L660}c[ap>>2]=at+1;at=c[ae>>2]|0;ap=c[a+21360+(at<<2)>>2]|0;aC=at+aT|0;at=c[E>>2]|0;aB=aT+1|0;if((aC|0)<(at|0)){ay=2-aT|0;aJ=ap;aE=aC;while(1){aI=c[l+4872+(aE<<2)>>2]|0;a_=l+4608+(aE<<2)|0;a$=(c[a_>>2]|0)-(4>>>((c[A>>2]|0)>>>0))|0;if((a$|0)>-1){c[a_>>2]=a$;a0=(aI*3&-1)+aJ|0}else{c[a_>>2]=0;as=+g[53040+((a$<<(c[A>>2]|0)+1)+210<<2)>>2];a$=(_(aI,aB)|0)+aJ|0;if((aI|0)>0){a_=-aI|0;av=+g[F>>2];while(1){a1=e+(a_+a$<<2)|0;ax=as*+g[a1>>2];g[a1>>2]=ax;if(ax>av){g[F>>2]=ax;a2=ax}else{a2=av}a1=a_+1|0;if((a1|0)<0){a_=a1;av=a2}else{break}}}a0=a$+(_(aI,ay)|0)|0}a_=aE+3|0;a1=c[E>>2]|0;if((a_|0)<(a1|0)){aJ=a0;aE=a_}else{a3=a0;a4=a_;a5=a1;break}}}else{a3=ap;a4=aC;a5=at}av=+g[13462];aE=c[l+4872+(a4<<2)>>2]|0;aJ=(_(aE,aB)|0)+a3|0;if((aE|0)<=0){aY=aB;aZ=a5;break}ay=-aE|0;as=+g[F>>2];while(1){aE=e+(aJ+ay<<2)|0;ax=av*+g[aE>>2];g[aE>>2]=ax;if(ax>as){g[F>>2]=ax;a6=ax}else{a6=as}aE=ay+1|0;if((aE|0)<0){ay=aE;as=a6}else{aY=aB;aZ=a5;break}}}}while(0);if((aY|0)>=3){a7=0;break}aT=aY;aU=c[ae>>2]|0}while(1){if((a7|0)>=(aZ|0)){aq=am;ar=584;break L660}if((c[l+4608+(a7<<2)>>2]|0)==(-(c[l+4808+(c[l+5028+(a7<<2)>>2]<<2)>>2]|0)|0)){ar=508;break}else{a7=a7+1|0}}}}while(0);if((ar|0)==508){ar=0;aS=cn(c[ag>>2]|0,l)|0}if((aS|0)!=0){aq=am;ar=584;break}}au=(c[A>>2]|0)==0?255:254;aF=h-(c[z>>2]|0)|0;if((aF|0)<1){aq=am;ar=584;break}aD=cg(a,e,l,q)|0;c[H>>2]=aD;aB=c[C>>2]|0;L778:do{if((aD|0)>(aF|0)){ay=aB;while(1){if((ay|0)>(au|0)){a8=ay;break L778}c[C>>2]=ay+1;aJ=cg(a,e,l,q)|0;c[H>>2]=aJ;at=c[C>>2]|0;if((aJ|0)>(aF|0)){ay=at}else{a8=at;break}}}else{a8=aB}}while(0);if((a8|0)>(au|0)){aq=am;ar=584;break}aB=c[I>>2]|0;aF=(aB|0)==0;if(aF){aD=cg(a,e,l,q)|0;c[H>>2]=aD;ay=c[C>>2]|0;L786:do{if((aD|0)>(am|0)){at=ay;while(1){if((at|0)>(au|0)){a9=at;break L786}c[C>>2]=at+1;aJ=cg(a,e,l,q)|0;c[H>>2]=aJ;aC=c[C>>2]|0;if((aJ|0)>(am|0)){at=aC}else{a9=aC;break}}}else{a9=ay}}while(0);if((a9|0)>(au|0)){aq=am;ar=584;break}}ca(l,d,u,r,q);ay=c[H>>2]|0;c[x>>2]=ay;aD=c[((c[G>>2]|0)==2?M:L)>>2]|0;at=c[P>>2]|0;L792:do{if((aD|0)==1){ba=+g[S>>2];ar=537}else if((aD|0)==0){aC=c[X>>2]|0;if((aC|0)<(aB|0)){bb=1;break}if((aC|0)!=(aB|0)){bb=0;break}as=+g[Y>>2];av=+g[Z>>2];if(as<av){bb=1;break}ax=+N(+as);aw=+N(+av);bc=+N(+(as-av));if(ax>aw){if(bc>ax*9.999999974752427e-7){bb=0;break}}else{if(bc>aw*9.999999974752427e-7){bb=0;break}}bb=+g[$>>2]<+g[aa>>2]&1}else if((aD|0)==8){if((at|0)>0){aC=0;aw=1.0e-37;while(1){bc=+g[n+(aC<<2)>>2];aJ=(g[k>>2]=bc*bc*bc*.632+.368,c[k>>2]|0);bc=+(aJ&16383|0)*6103515625.0e-14;ap=aJ>>>14&511;ax=aw+(+((aJ>>>23&255)-127|0)+(+g[49560+(ap+1<<2)>>2]*bc+ +g[49560+(ap<<2)>>2]*(1.0-bc)))*.30102999566398114;ap=aC+1|0;if((ap|0)<(at|0)){aC=ap;aw=ax}else{bd=ax;break}}}else{bd=1.0e-37}aw=bd<1.0e-20?9.999999682655225e-21:bd;g[S>>2]=aw;ba=aw;ar=537}else if((aD|0)==2){bb=+g[$>>2]<+g[aa>>2]&1}else if((aD|0)==3){if(+g[$>>2]>=+g[aa>>2]){bb=0;break}bb=+g[S>>2]<+g[T>>2]&1}else if((aD|0)==4){aw=+g[S>>2];do{if(aw>0.0){be=aw}else{ax=+g[T>>2];bc=ax;if(bc>.2){bb=1;break L792}av=aw;do{if(ax<0.0){if(bc<=av+-.2){break}if(+g[$>>2]<+g[aa>>2]){bb=1;break L792}}}while(0);if(ax<=0.0){be=av;break}if(bc<=av+-.2){be=av;break}if(+g[$>>2]<+g[aa>>2]+ +g[Z>>2]){bb=1;break L792}else{be=av}}}while(0);if(aw<=0.0){bb=0;break}as=+g[T>>2];do{if(as>-.05){if(as<=be+-.1){break}aC=+g[$>>2]+ +g[Y>>2]<+g[aa>>2]+ +g[Z>>2];if(aC){bb=aC&1;break L792}}}while(0);if(as<=-.1){bb=0;break}if(as<=be+-.15){bb=0;break}aw=+g[Y>>2];bf=+g[Z>>2];bb=aw+(+g[$>>2]+aw)<bf+(+g[aa>>2]+bf)&1}else if((aD|0)==5){bf=+g[Y>>2];aw=+g[Z>>2];if(bf<aw){bb=1;break}bg=+N(+bf);bh=+N(+aw);bi=+N(+(bf-aw));if(bg>bh){if(bi>bg*9.999999974752427e-7){bb=0;break}}else{if(bi>bh*9.999999974752427e-7){bb=0;break}}bb=+g[$>>2]<+g[aa>>2]&1}else if((aD|0)==6){bh=+g[Y>>2];bi=+g[Z>>2];if(bh<bi){bb=1;break}bg=+N(+bh);aw=+N(+bi);bf=+N(+(bh-bi));if(bg>aw){if(bf>bg*9.999999974752427e-7){bb=0;break}}else{if(bf>aw*9.999999974752427e-7){bb=0;break}}aw=+g[S>>2];bf=+g[T>>2];if(aw<bf){bb=1;break}bg=+N(+aw);bi=+N(+bf);bh=+N(+(aw-bf));if(bg>bi){if(bh>bg*9.999999974752427e-7){bb=0;break}}else{if(bh>bi*9.999999974752427e-7){bb=0;break}}bb=+g[$>>2]<=+g[aa>>2]&1}else if((aD|0)==7){if((c[X>>2]|0)<(aB|0)){bb=1;break}bb=+g[Y>>2]<+g[Z>>2]&1}else{if((aB|0)>0){aC=c[Q>>2]|0;ap=c[R>>2]|0;if((aC|0)!=(ap|0)){bb=(aC|0)<=(ap|0)&1;break}bb=(ay|0)<(c[f>>2]|0)&1;break}else{bi=+g[S>>2];if(bi>=0.0){bb=0;break}bb=+(ay|0)+bi*10.0<=+g[T>>2]*10.0+ +(c[f>>2]|0)&1;break}}}while(0);if((ar|0)==537){ar=0;bb=ba<+g[T>>2]&1}do{if(aF){if((bb|0)==0){ar=578;break}bj=(ay|0)<(c[f>>2]|0)&1;ar=576}else{bj=bb;ar=576}}while(0);do{if((ar|0)==576){ar=0;if((bj|0)==0){ar=578;break}ay=c[v>>2]|0;c[V>>2]=c[W>>2];c[V+4>>2]=c[W+4>>2];c[V+8>>2]=c[W+8>>2];c[V+12>>2]=c[W+12>>2];c[V+16>>2]=c[W+16>>2];c[V+20>>2]=c[W+20>>2];cF(y|0,s|0,5252)|0;cF(w|0,m|0,2304)|0;bk=ay;bl=0}}while(0);do{if((ar|0)==578){ar=0;if((c[U>>2]|0)!=0){bk=am;bl=an;break}ay=an+1|0;if(!((ay|0)<=(ao|0)|aF^1)){aq=am;ar=584;break L660}aB=(c[t>>2]|0)!=3|al;if((ay|0)>30&(aB^1)){aq=am;ar=584;break L660}if(aB){bk=am;bl=ay;break}if(((c[C>>2]|0)-aj|0)>15){aq=am;ar=584;break L660}else{bk=am;bl=ay}}}while(0);if(((c[A>>2]|0)+(c[C>>2]|0)|0)<255){am=bk;an=bl}else{aq=bk;ar=584;break}}if((ar|0)==584){ar=0;aN=aq;aO=c[t>>2]|0}if(!((aO|0)==3&al)){break}cF(s|0,y|0,5252)|0;cF(m|0,w|0,2304)|0;ah=aN;ai=1;aj=c[C>>2]|0}C=c[a+104>>2]|0;do{if((C|0)==2|(C|0)==4|(C|0)==1){cF(m|0,w|0,2304)|0}else{if((c[B>>2]&1|0)==0){break}bT(a,b,d,e)}}while(0);K=c[I>>2]|0;i=j;return K|0}function bY(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0;c=+g[a>>2];d=+g[b>>2];if(c>d){e=1;return e|0}e=(c<d)<<31>>31;return e|0}function bZ(a,b,d,e,f,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+8|0;k=j|0;l=k;c[k>>2]=0;c[k+4>>2]=0;k=c[a+52144>>2]|0;m=(c[a+52140>>2]|0)+((h|0)==0?0:e)|0;h=a+85096|0;n=c[h>>2]|0;o=(n&1|0)==0;if(o){p=k}else{p=~~(+(k|0)*.9)}q=p*9&-1;do{if((m*10&-1|0)>(q|0)){p=m-((q|0)/10&-1)|0;c[h>>2]=n|128;r=p+e|0;s=p}else{c[h>>2]=n&127;if((c[a+144>>2]|0)!=0|o^1){r=e;s=0;break}t=+(e|0);r=~~(t-t*.1);s=0}}while(0);o=(k*6&-1|0)/10&-1;k=((m|0)<(o|0)?m:o)-s|0;s=(k|0)<0?0:k;k=s+r|0;o=(k|0)>7680?7680:k;k=a+72|0;a=c[k>>2]|0;if((a|0)<=0){i=j;return o|0}m=(e*3&-1|0)/4&-1;e=0;n=0;h=a;do{a=(r|0)/(h|0)&-1;q=(a|0)>4095?4095:a;c[d+(n<<2)>>2]=q;a=~~(+g[b+(f<<3)+(n<<2)>>2]*+(q|0)/700.0- +(q|0));p=(a|0)>(m|0)?m:a;a=(p|0)<0?0:p;if((a+q|0)>4095){p=4095-q|0;u=(p|0)<0?0:p}else{u=a}c[l+(n<<2)>>2]=u;e=u+e|0;n=n+1|0;h=c[k>>2]|0;}while((n|0)<(h|0));if((e|0)>(s|0)&(e|0)>0){if((h|0)>0){n=0;do{u=l+(n<<2)|0;c[u>>2]=(_(c[u>>2]|0,s)|0)/(e|0)&-1;n=n+1|0;}while((n|0)<(h|0))}else{i=j;return o|0}}if((h|0)>0){v=0}else{i=j;return o|0}do{h=d+(v<<2)|0;c[h>>2]=(c[h>>2]|0)+(c[l+(v<<2)>>2]|0);v=v+1|0;w=c[k>>2]|0;}while((v|0)<(w|0));if((w|0)>0){x=0;y=0}else{i=j;return o|0}do{x=(c[d+(y<<2)>>2]|0)+x|0;y=y+1|0;}while((y|0)<(w|0));if((x|0)<7681){i=j;return o|0}else{z=0}do{w=d+(z<<2)|0;c[w>>2]=((c[w>>2]|0)*7680&-1|0)/(x|0)&-1;z=z+1|0;}while((z|0)<(c[k>>2]|0));i=j;return o|0}function b_(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0.0,af=0,ag=0.0,ah=0,ai=0,aj=0,ak=0,al=0;f=i;i=i+2480|0;h=f|0;j=f+8|0;k=f+168|0;l=f+2472|0;m=a+304|0;n=a+16|0;o=c[a+84744>>2]|0;if((o|0)==0){p=a+120|0;q=c[n>>2]|0}else{r=c[n>>2]|0;p=66168+(r<<6)+(o<<2)|0;q=r}r=c[a+84752>>2]|0;o=c[a+64>>2]|0;n=((_((q*72e3&-1)+72e3|0,c[p>>2]|0)|0)/(o|0)&-1)+r<<3;r=a+76|0;o=c[r>>2]|0;p=(n-(c[a+24>>2]<<3)|0)/(o|0)&-1;q=(o<<11)-8|0;s=(c[a+148>>2]|0)-n|0;n=a+52144|0;t=(s|0)>(q|0)?q:s;c[n>>2]=t;if((t|0)<0){u=632}else{if((c[a+144>>2]|0)!=0){u=632}}if((u|0)==632){c[n>>2]=0}u=a+52140|0;t=a+21320|0;c[t>>2]=0;s=a+85804|0;q=c[s>>2]|0;if((q|0)==0){v=o}else{c[q+203484>>2]=(p|0)/2&-1;c[(c[s>>2]|0)+203488>>2]=c[u>>2];v=c[r>>2]|0}if((v|0)<=0){w=v;x=_(w,p)|0;y=c[u>>2]|0;z=y+x|0;A=a+21324|0;B=(z|0)%8&-1;C=z-B|0;D=c[n>>2]|0;E=C-D|0;F=(E|0)>0;G=F?E:0;H=G+B|0;I=a+21312|0;J=c[I>>2]|0;K=J<<3;L=(K|0)<(H|0);M=L?K:H;N=(M|0)/8&-1;O=N<<3;c[t>>2]=O;Q=H-O|0;R=z-O|0;S=J-N|0;c[I>>2]=S;c[A>>2]=Q;T=R-Q|0;c[u>>2]=T;i=f;return}v=l|0;s=a+84756|0;q=l+4|0;o=a+72|0;U=a+84912|0;V=a+84916|0;W=a+84908|0;X=k|0;Y=a+85824|0;Z=a+85096|0;$=j|0;j=a+36|0;aa=0;while(1){ab=bZ(a,b,v,p,aa,aa)|0;do{if((c[s>>2]|0)==2){ac=0;do{ad=a+304+(aa*10504&-1)+(ac<<2)|0;ae=+g[ad>>2];af=a+304+(aa*10504&-1)+5252+(ac<<2)|0;ag=+g[af>>2];g[ad>>2]=(ae+ag)*.7071067690849304;g[af>>2]=(ae-ag)*.7071067690849304;ac=ac+1|0;}while((ac|0)<576);ag=(.5- +g[d+(aa<<2)>>2])*.33*2.0;ae=ag<0.0?0.0:ag;ac=c[v>>2]|0;af=c[q>>2]|0;ad=~~(+(af+ac|0)*(ae>.5?.25:ae*.5));ah=4095-ac|0;ai=(ad|0)>(ah|0)?ah:ad;ad=(ai|0)<0?0:ai;do{if((af|0)>124){ai=af-ad|0;if((ai|0)<=125){ah=ac-125+af|0;c[v>>2]=ah;c[q>>2]=125;aj=ah;ak=125;break}if((ac|0)<(p|0)){ah=ad+ac|0;c[v>>2]=ah;al=ah}else{al=ac}c[q>>2]=ai;aj=al;ak=ai}else{aj=ac;ak=af}}while(0);af=aj+ak|0;if((af|0)<=(ab|0)){break}c[v>>2]=(_(aj,ab)|0)/(af|0)&-1;c[q>>2]=(_(ak,ab)|0)/(af|0)&-1}}while(0);if((c[o>>2]|0)>0){ab=0;do{af=a+304+(aa*10504&-1)+(ab*5252&-1)|0;g[W>>2]=+P(10.0,+(+g[((c[a+304+(aa*10504&-1)+(ab*5252&-1)+4788>>2]|0)==2?V:U)>>2]*.1));bW(a,af);g[h>>2]=0.0;ac=c[a+304+(aa*10504&-1)+(ab*5252&-1)+5208>>2]|0;g[a+304+(aa*10504&-1)+(ab*5252&-1)+4764>>2]=0.0;cE(k+(ac<<2)|0,0,576-ac<<2|0);a9[c[Y>>2]&15](af,X,ac,h);if(+g[h>>2]>9.999999682655225e-21){ac=(c[Z>>2]|0)>>>1&1;ad=a+304+(aa*10504&-1)+(ab*5252&-1)+4864|0;if((c[ad>>2]|0)>0){ai=0;do{c[a+84936+(ai<<2)>>2]=ac;ai=ai+1|0;}while((ai|0)<(c[ad>>2]|0))}ad=e+(aa*976&-1)+(ab*488&-1)|0;b9(a,ad,af,$)|0;ad=c[l+(ab<<2)>>2]|0;bX(a,af,$,X,ab,ad)|0}else{cE(a+304+(aa*10504&-1)+(ab*5252&-1)+2304|0,0,2304)}ch(a,aa,ab,m);if((c[j>>2]|0)==1){cf(a,af)}c[u>>2]=(c[u>>2]|0)-((c[a+304+(aa*10504&-1)+(ab*5252&-1)+4844>>2]|0)+(c[a+304+(aa*10504&-1)+(ab*5252&-1)+4768>>2]|0));ab=ab+1|0;}while((ab|0)<(c[o>>2]|0))}ab=aa+1|0;ad=c[r>>2]|0;if((ab|0)<(ad|0)){aa=ab}else{w=ad;break}}x=_(w,p)|0;y=c[u>>2]|0;z=y+x|0;A=a+21324|0;B=(z|0)%8&-1;C=z-B|0;D=c[n>>2]|0;E=C-D|0;F=(E|0)>0;G=F?E:0;H=G+B|0;I=a+21312|0;J=c[I>>2]|0;K=J<<3;L=(K|0)<(H|0);M=L?K:H;N=(M|0)/8&-1;O=N<<3;c[t>>2]=O;Q=H-O|0;R=z-O|0;S=J-N|0;c[I>>2]=S;c[A>>2]=Q;T=R-Q|0;c[u>>2]=T;i=f;return}function b$(a,b,d,e){a=+a;b=+b;d=+d;e=+e;var f=0.0,h=0,i=0,j=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;f=e<1.0?94.82444763183594:e;h=(g[k>>2]=b,c[k>>2]|0);b=+(h&16383|0)*6103515625.0e-14;i=h>>>14&511;e=a*a;a=(+((h>>>23&255)-127|0)+((1.0-b)*+g[49560+(i<<2)>>2]+b*+g[49560+(i+1<<2)>>2]))*3.0102999566398116-d;if(e<=9.999999682655225e-21){j=0.0;l=j<0.0;m=l?0.0:j;n=a*m;o=d+90.30873107910156;p=o-f;q=p+n;r=q*.10000000149011612;s=+P(10.0,+r);return+s}i=(g[k>>2]=e,c[k>>2]|0);e=+(i&16383|0)*6103515625.0e-14;h=i>>>14&511;j=(+((i>>>23&255)-127|0)+((1.0-e)*+g[49560+(h<<2)>>2]+e*+g[49560+(h+1<<2)>>2]))*.03333343265598758+1.0;l=j<0.0;m=l?0.0:j;n=a*m;o=d+90.30873107910156;p=o-f;q=p+n;r=q*.10000000149011612;s=+P(10.0,+r);return+s}function b0(a,b){a=a|0;b=b|0;var d=0;do{if((a|0)==0){d=-1}else{if((c[a>>2]|0)!=-487877){d=-1;break}c[a+4>>2]=b;d=0}}while(0);return d|0}function b1(a){a=a|0;var b=0;do{if((a|0)==0){b=0}else{if((c[a>>2]|0)!=-487877){b=0;break}b=c[a+4>>2]|0}}while(0);return b|0}function b2(a,b){a=a|0;b=b|0;var d=0;do{if((a|0)==0){d=-1}else{if((c[a>>2]|0)!=-487877){d=-1;break}c[a+12>>2]=b;d=0}}while(0);return d|0}function b3(a){a=a|0;var b=0;do{if((a|0)==0){b=0}else{if((c[a>>2]|0)!=-487877){b=0;break}b=c[a+12>>2]|0}}while(0);return b|0}function b4(a,b){a=a|0;b=b|0;var d=0;do{if((a|0)==0){d=-1}else{if((c[a>>2]|0)!=-487877){d=-1;break}if((b|0)>2|(b|0)==0){d=-1;break}c[a+8>>2]=b;d=0}}while(0);return d|0}function b5(a){a=a|0;var b=0;do{if((a|0)==0){b=0}else{if((c[a>>2]|0)!=-487877){b=0;break}b=c[a+8>>2]|0}}while(0);return b|0}function b6(a,b){a=a|0;b=b|0;var d=0;do{if((a|0)==0){d=-1}else{if((c[a>>2]|0)!=-487877){d=-1;break}c[a+16>>2]=b;d=0}}while(0);return d|0}function b7(a){a=a|0;var b=0;do{if((a|0)==0){b=0}else{if((c[a>>2]|0)!=-487877){b=0;break}b=c[a+16>>2]|0}}while(0);return b|0}function b8(a,b){a=a|0;b=b|0;var d=0;do{if((a|0)==0){d=-1}else{if(b>>>0>4|(c[a>>2]|0)!=-487877){d=-1;break}c[a+48>>2]=b;d=0}}while(0);return d|0}function b9(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0.0,t=0,u=0,v=0.0,w=0.0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0,D=0.0,E=0.0,F=0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0,O=0,P=0,Q=0,R=0,S=0.0,T=0.0,U=0.0,V=0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ab=0.0,ac=0.0,ad=0.0,ae=0.0,af=0.0,ag=0.0,ah=0,ai=0.0,aj=0.0,ak=0.0,al=0.0;h=c[b+85796>>2]|0;i=e+4856|0;if((c[i>>2]|0)>0){j=h+8|0;k=h+20|0;l=b+224|0;m=0;n=0;o=0;p=f;while(1){q=+b$(+g[j>>2],+g[h+24+(o<<2)>>2],+g[k>>2],+g[l>>2]);r=+g[b+84768+(o<<2)>>2];s=q*r;t=c[e+4872+(o<<2)>>2]|0;q=s/+(t|0);if((t|0)>0){u=0;v=2.220446049250313e-16;w=0.0;x=n;while(1){y=+g[e+(x<<2)>>2];z=y*y;A=w+z;B=v+(z<q?z:q);C=u+1|0;if((C|0)<(t|0)){u=C;v=B;w=A;x=x+1|0}else{break}}D=B;E=A;F=n+t|0}else{D=2.220446049250313e-16;E=0.0;F=n}x=(E>s&1)+m|0;if(E<s){G=E}else{G=D<s?s:D}w=+g[d+244+(o<<2)>>2];do{if(w>9.999999960041972e-13){v=E*+g[d+(o<<2)>>2]/w*r;if(G>=v){H=G;break}H=v}else{H=G}}while(0);r=H>2.220446049250313e-16?H:2.220446049250313e-16;a[e+5212+o|0]=E>r+9.9999998245167e-15&1;t=p+4|0;g[p>>2]=r;u=o+1|0;if((u|0)<(c[i>>2]|0)){m=x;n=F;o=u;p=t}else{I=x;J=F;K=u;L=t;break}}}else{I=0;J=0;K=0;L=f}f=575;while(1){if((f|0)<=0){M=0;break}if(+N(+(+g[e+(f<<2)>>2]))>9.999999960041972e-13){M=f;break}else{f=f-1|0}}f=(c[e+4788>>2]|0)==2;if(f){O=M+5-((M|0)%6&-1)|0}else{O=M|1}do{if((c[b+85092>>2]|0)==0){M=c[b+64>>2]|0;if((M|0)>=44e3){P=O;break}F=(M|0)<8001;if(f){Q=(c[b+21452+((F?9:12)<<2)>>2]|0)*3&-1}else{Q=c[b+21360+((F?17:21)<<2)>>2]|0}F=Q-1|0;P=(O|0)>(F|0)?F:O}else{P=O}}while(0);c[e+5208>>2]=P;P=e+4864|0;if((K|0)>=(c[P>>2]|0)){R=I;return R|0}O=h+8|0;Q=h+20|0;f=b+224|0;F=b+92|0;M=b+85800|0;p=I;I=J;J=K;K=c[e+4852>>2]|0;o=L;n=L+8|0;while(1){E=+b$(+g[O>>2],+g[h+112+(K<<2)>>2],+g[Q>>2],+g[f>>2]);L=b+84856+(K<<2)|0;H=+g[L>>2];G=E*H;m=c[e+4872+(J<<2)>>2]|0;E=G/+(m|0);i=(m|0)>0;if(i){l=0;D=0.0;k=I;A=2.220446049250313e-16;while(1){B=+g[e+(k<<2)>>2];r=B*B;S=D+r;T=A+(r<E?r:E);j=l+1|0;if((j|0)<(m|0)){l=j;D=S;k=k+1|0;A=T}else{break}}U=S;V=m+I|0;W=T}else{U=0.0;V=I;W=2.220446049250313e-16}k=(U>G&1)+p|0;if(U<G){X=U}else{X=W<G?G:W}A=+g[d+332+(K*12&-1)>>2];do{if(A>9.999999960041972e-13){D=U*+g[d+88+(K*12&-1)>>2]/A*H;if(X>=D){Y=X;break}Y=D}else{Y=X}}while(0);H=Y>2.220446049250313e-16?Y:2.220446049250313e-16;a[e+5212+J|0]=U>H+9.9999998245167e-15&1;l=o+4|0;g[o>>2]=H;if(i){x=0;H=0.0;j=V;A=2.220446049250313e-16;while(1){D=+g[e+(j<<2)>>2];r=D*D;Z=H+r;_=A+(r<E?r:E);t=x+1|0;if((t|0)<(m|0)){x=t;H=Z;j=j+1|0;A=_}else{break}}$=Z;aa=m+V|0;ab=_}else{$=0.0;aa=V;ab=2.220446049250313e-16}j=($>G&1)+k|0;if($<G){ac=$}else{ac=ab<G?G:ab}A=+g[d+332+(K*12&-1)+4>>2];do{if(A>9.999999960041972e-13){H=$*+g[d+88+(K*12&-1)+4>>2]/A*+g[L>>2];if(ac>=H){ad=ac;break}ad=H}else{ad=ac}}while(0);A=ad>2.220446049250313e-16?ad:2.220446049250313e-16;a[J+1+(e+5212)|0]=$>A+9.9999998245167e-15&1;k=o+8|0;g[l>>2]=A;if(i){x=0;A=0.0;t=aa;H=2.220446049250313e-16;while(1){r=+g[e+(t<<2)>>2];D=r*r;ae=A+D;af=H+(D<E?D:E);u=x+1|0;if((u|0)<(m|0)){x=u;A=ae;t=t+1|0;H=af}else{break}}ag=ae;ah=m+aa|0;ai=af}else{ag=0.0;ah=aa;ai=2.220446049250313e-16}t=(ag>G&1)+j|0;if(ag<G){aj=ag}else{aj=ai<G?G:ai}H=+g[d+332+(K*12&-1)+8>>2];do{if(H>9.999999960041972e-13){A=ag*+g[d+88+(K*12&-1)+8>>2]/H*+g[L>>2];if(aj>=A){ak=aj;break}ak=A}else{ak=aj}}while(0);H=ak>2.220446049250313e-16?ak:2.220446049250313e-16;a[J+2+(e+5212)|0]=ag>H+9.9999998245167e-15&1;g[k>>2]=H;L=o+12|0;do{if((c[F>>2]|0)!=0){H=+g[n-8>>2];j=n-4|0;G=+g[j>>2];if(H>G){A=G+(H-G)*+g[(c[M>>2]|0)+6496>>2];g[j>>2]=A;al=A}else{al=G}G=+g[n>>2];if(al<=G){break}g[n>>2]=G+(al-G)*+g[(c[M>>2]|0)+6496>>2]}}while(0);k=J+3|0;if((k|0)<(c[P>>2]|0)){p=t;I=ah;J=k;K=K+1|0;o=L;n=n+12|0}else{R=t;break}}return R|0}function ca(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var h=0,j=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0,I=0.0,J=0,K=0,L=0,M=0,O=0,P=0,Q=0,R=0.0,S=0,T=0.0,U=0.0,V=0,W=0.0,X=0,Y=0,Z=0,$=0,aa=0.0,ab=0,ac=0,ad=0.0,ae=0,af=0.0,ag=0.0,ah=0.0,ai=0,aj=0.0,ak=0,al=0.0,am=0.0,an=0,ao=0.0,ap=0,aq=0.0,ar=0,as=0.0,at=0,au=0.0;h=i;i=i+8|0;j=h|0;l=e+16|0;c[l>>2]=0;m=a+4864|0;if((c[m>>2]|0)<=0){n=0.0;o=0.0;p=-20.0;q=0;r=e+12|0;c[r>>2]=q;s=e+4|0;g[s>>2]=o;t=e|0;g[t>>2]=n;u=e+8|0;g[u>>2]=p;i=h;return}v=a+4780|0;w=a+4832|0;x=a+4836|0;y=(f|0)!=0;z=f|0;A=a+5208|0;B=a+4776|0;C=a+4772|0;D=j|0;E=j+4|0;F=0;G=0.0;H=0.0;I=-20.0;J=a+4608|0;K=0;L=0;M=d;d=b;while(1){b=J+4|0;if((c[w>>2]|0)==0){O=0}else{O=c[14096+(L<<2)>>2]|0}P=(c[v>>2]|0)-(O+(c[J>>2]|0)<<(c[x>>2]|0)+1)-(c[a+4808+(c[a+5028+(L<<2)>>2]<<2)>>2]<<3)|0;Q=d+4|0;R=1.0/+g[d>>2];do{if(y){if((c[f+8+(L<<2)>>2]|0)!=(P|0)){S=767;break}T=+g[f+320+(L<<2)>>2];U=R*+g[f+164+(L<<2)>>2];V=(c[a+4872+(L<<2)>>2]|0)+F|0;S=785}else{S=767}}while(0);do{if((S|0)==767){S=0;W=+g[47016+(P+116<<2)>>2];X=c[a+4872+(L<<2)>>2]|0;Y=c[A>>2]|0;if((X+F|0)>(Y|0)){Z=Y-F+1|0;$=(Z|0)>0?Z>>1:0}else{$=X>>1}do{if((F|0)>(c[B>>2]|0)){if(($|0)==0){aa=0.0;ab=F;break}else{ac=F;ad=0.0;ae=$}while(1){X=ae-1|0;af=+g[a+(ac<<2)>>2];ag=+g[a+(ac+1<<2)>>2];ah=ad+af*af+ag*ag;if((X|0)==0){break}else{ac=ac+2|0;ad=ah;ae=X}}aa=ah;ab=($<<1)+F|0}else{if((F|0)>(c[C>>2]|0)){g[D>>2]=0.0;g[E>>2]=W;if(($|0)==0){aa=0.0;ab=F;break}else{ai=F;aj=0.0;ak=$}while(1){X=ak-1|0;ag=+N(+(+g[a+(ai<<2)>>2]));af=ag- +g[j+(c[a+2304+(ai<<2)>>2]<<2)>>2];Z=ai+1|0;ag=+N(+(+g[a+(Z<<2)>>2]));al=ag- +g[j+(c[a+2304+(Z<<2)>>2]<<2)>>2];am=aj+af*af+al*al;if((X|0)==0){break}else{ai=ai+2|0;aj=am;ak=X}}aa=am;ab=($<<1)+F|0;break}else{if(($|0)==0){aa=0.0;ab=F;break}else{an=F;ao=0.0;ap=$}while(1){X=ap-1|0;al=+N(+(+g[a+(an<<2)>>2]));af=al-W*+g[14184+(c[a+2304+(an<<2)>>2]<<2)>>2];Z=an+1|0;al=+N(+(+g[a+(Z<<2)>>2]));ag=al-W*+g[14184+(c[a+2304+(Z<<2)>>2]<<2)>>2];aq=ao+af*af+ag*ag;if((X|0)==0){break}else{an=an+2|0;ao=aq;ap=X}}aa=aq;ab=($<<1)+F|0;break}}}while(0);if(y){c[f+8+(L<<2)>>2]=P;g[f+164+(L<<2)>>2]=aa}W=R*aa;X=W>9.999999682655225e-21?(g[k>>2]=W,c[k>>2]|0):507307272;ag=+(X&16383|0)*6103515625.0e-14;Z=X>>>14&511;af=(+((X>>>23&255)-127|0)+((1.0-ag)*+g[49560+(Z<<2)>>2]+ag*+g[49560+(Z+1<<2)>>2]))*.30102999566398114;if(y){g[f+320+(L<<2)>>2]=af;T=af;U=W;V=ab;S=785;break}else{g[M>>2]=W;ar=ab;as=af;break}}}while(0);if((S|0)==785){S=0;g[M>>2]=U;c[z>>2]=c[v>>2];ar=V;as=T}R=H+as;if(as>0.0){P=~~(as*10.0+.5);Z=(P|0)>1?P:1;P=_(Z,Z)|0;c[l>>2]=(c[l>>2]|0)+P;at=K+1|0;au=G+as}else{at=K;au=G}af=I>as?I:as;P=L+1|0;if((P|0)<(c[m>>2]|0)){F=ar;G=au;H=R;I=af;J=b;K=at;L=P;M=M+4|0;d=Q}else{n=au;o=R;p=af;q=at;break}}r=e+12|0;c[r>>2]=q;s=e+4|0;g[s>>2]=o;t=e|0;g[t>>2]=n;u=e+8|0;g[u>>2]=p;i=h;return}function cb(a){a=a|0;var b=0;do{if((a|0)==0){b=4}else{if((c[a>>2]|0)!=-487877){b=4;break}b=c[a+48>>2]|0}}while(0);return b|0}function cc(a,b){a=a|0;b=b|0;var d=0;do{if((a|0)==0){d=-1}else{if((c[a>>2]|0)!=-487877){d=-1;break}c[a+96>>2]=b;if((b|0)<=320){d=0;break}c[a+128>>2]=1;d=0}}while(0);return d|0}function cd(a){a=a|0;var b=0;do{if((a|0)==0){b=0}else{if((c[a>>2]|0)!=-487877){b=0;break}b=c[a+96>>2]|0}}while(0);return b|0}function ce(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;g=i;i=i+8|0;h=g|0;c[h>>2]=0;j=e+2304|0;k=(c[e+5208>>2]|0)+2&-2;l=(k|0)>576?576:k;k=(f|0)!=0;if(k){c[f+4>>2]=0;m=l}else{m=l}while(1){if((m|0)<=1){n=808;break}l=m-2|0;if((c[e+2304+(l<<2)>>2]|c[e+2304+(m-1<<2)>>2]|0)==0){m=l}else{n=810;break}}do{if((n|0)==808){c[e+4776>>2]=m;n=813}else if((n|0)==810){c[e+4776>>2]=m;if((m|0)>3){o=0;p=0;q=m}else{n=813;break}while(1){l=q-4|0;r=c[e+2304+(l<<2)>>2]|0;s=c[e+2304+(q-3<<2)>>2]|0;t=c[e+2304+(q-2<<2)>>2]|0;u=c[e+2304+(q-1<<2)>>2]|0;if((s|r|t|u)>>>0>1){v=o;w=p;x=q;break}y=(((r<<1)+s<<1)+t<<1)+u|0;u=(d[7440+y|0]|0)+p|0;t=(d[7392+y|0]|0)+o|0;if((l|0)>3){o=t;p=u;q=l}else{v=t;w=u;x=l;break}}c[h>>2]=w;l=e+4840|0;c[l>>2]=0;if((w|0)<=(v|0)){z=w;A=x;break}c[h>>2]=v;c[l>>2]=1;z=v;A=x}}while(0);if((n|0)==813){c[h>>2]=0;c[e+4840>>2]=0;z=0;A=m}c[e+5184>>2]=z;z=e+4772|0;c[z>>2]=A;if((A|0)==0){B=c[h>>2]|0;i=g;return B|0}m=e+4788|0;n=c[m>>2]|0;do{if((n|0)==2){x=(c[b+21464>>2]|0)*3&-1;C=(x|0)>(A|0)?A:x;D=A}else if((n|0)==0){x=a[A-2+(b+85100)|0]|0;c[e+4824>>2]=x;v=a[A-1+(b+85100)|0]|0;c[e+4828>>2]=v;w=c[b+21360+(x+2+v<<2)>>2]|0;v=c[b+21360+(x+1<<2)>>2]|0;if((w|0)>=(A|0)){C=v;D=w;break}c[e+4804>>2]=a5[c[b+85816>>2]&3](e+2304+(w<<2)|0,e+2304+(A<<2)|0,h)|0;C=v;D=w}else{c[e+4824>>2]=7;c[e+4828>>2]=13;w=c[b+21392>>2]|0;C=(w|0)>(A|0)?A:w;D=A}}while(0);n=(C|0)<(A|0)?C:A;C=(D|0)<(A|0)?D:A;if((n|0)>0){c[e+4796>>2]=a5[c[b+85816>>2]&3](j,e+2304+(n<<2)|0,h)|0}if((n|0)<(C|0)){c[e+4800>>2]=a5[c[b+85816>>2]&3](e+2304+(n<<2)|0,e+2304+(C<<2)|0,h)|0}if((c[b+36>>2]|0)==2){C=e+4768|0;c[C>>2]=c[h>>2];cf(b,e);c[h>>2]=c[C>>2]}if(!k){B=c[h>>2]|0;i=g;return B|0}if((c[m>>2]|0)!=0){B=c[h>>2]|0;i=g;return B|0}m=c[z>>2]|0;z=0;while(1){if((c[b+21360+(z<<2)>>2]|0)<(m|0)){z=z+1|0}else{break}}c[f+4>>2]=z;B=c[h>>2]|0;i=g;return B|0}function cf(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;e=i;i=i+5672|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+5288|0;m=e+5384|0;n=e+5480|0;o=e+5576|0;p=b+2304|0;q=c[b+4788>>2]|0;L1217:do{if((q|0)==2){if((c[a+76>>2]|0)==1){i=e;return}else{r=k;s=b;cF(r|0,s|0,5252)|0;t=r;u=s;v=842;break}}else{s=k;r=b;cF(s|0,r|0,5252)|0;if((q|0)!=0){t=s;u=r;v=842;break}w=c[b+4772>>2]|0;c[l>>2]=1e5;c[l+4>>2]=1e5;c[l+8>>2]=1e5;c[l+12>>2]=1e5;c[l+16>>2]=1e5;c[l+20>>2]=1e5;c[l+24>>2]=1e5;c[l+28>>2]=1e5;c[l+32>>2]=1e5;c[l+36>>2]=1e5;c[l+40>>2]=1e5;c[l+44>>2]=1e5;c[l+48>>2]=1e5;c[l+52>>2]=1e5;c[l+56>>2]=1e5;c[l+60>>2]=1e5;c[l+64>>2]=1e5;c[l+68>>2]=1e5;c[l+72>>2]=1e5;c[l+76>>2]=1e5;c[l+80>>2]=1e5;c[l+84>>2]=1e5;c[l+88>>2]=1e5;x=a+85816|0;y=0;while(1){z=y+1|0;A=c[a+21360+(z<<2)>>2]|0;if((A|0)>=(w|0)){break}c[j>>2]=0;B=b+2304+(A<<2)|0;A=a5[c[x>>2]&3](p,B,j)|0;C=0;do{D=C+y|0;E=c[a+21360+(D+2<<2)>>2]|0;if((E|0)>=(w|0)){break}c[h>>2]=c[j>>2];F=a5[c[x>>2]&3](B,b+2304+(E<<2)|0,h)|0;E=l+(D<<2)|0;G=c[h>>2]|0;if((c[E>>2]|0)>(G|0)){c[E>>2]=G;c[m+(D<<2)>>2]=y;c[n+(D<<2)>>2]=A;c[o+(D<<2)>>2]=F}C=C+1|0;}while((C|0)<8);if((z|0)<16){y=z}else{break}}y=k+4772|0;w=c[y>>2]|0;C=k+5184|0;A=b+4768|0;B=b+2304+(w<<2)|0;F=b+4824|0;D=b+4828|0;G=b+4796|0;E=b+4800|0;H=b+4804|0;I=2;while(1){J=c[a+21360+(I<<2)>>2]|0;if((J|0)>=(w|0)){K=y;L=s;M=r;break L1217}N=I-2|0;O=(c[C>>2]|0)+(c[l+(N<<2)>>2]|0)|0;c[g>>2]=O;if((c[A>>2]|0)<=(O|0)){K=y;L=s;M=r;break L1217}O=a5[c[x>>2]&3](b+2304+(J<<2)|0,B,g)|0;J=c[g>>2]|0;if((c[A>>2]|0)>(J|0)){cF(r|0,s|0,5252)|0;c[A>>2]=J;J=c[m+(N<<2)>>2]|0;c[F>>2]=J;c[D>>2]=N-J;c[G>>2]=c[n+(N<<2)>>2];c[E>>2]=c[o+(N<<2)>>2];c[H>>2]=O}O=I+1|0;if((O|0)<23){I=O}else{K=y;L=s;M=r;break}}}}while(0);if((v|0)==842){K=k+4772|0;L=t;M=u}u=c[K>>2]|0;if((u|0)==0){i=e;return}if((c[b+2304+(u-1<<2)>>2]|c[b+2304+(u-2<<2)>>2])>>>0>1){i=e;return}u=(c[b+4776>>2]|0)+2|0;if((u|0)>576){i=e;return}cF(L|0,M|0,5252)|0;c[k+4776>>2]=u;t=c[K>>2]|0;if((u|0)>(t|0)){g=0;h=0;j=u;while(1){q=j-4|0;r=(((c[b+2304+(q<<2)>>2]<<1)+(c[b+2304+(j-3<<2)>>2]|0)<<1)+(c[b+2304+(j-2<<2)>>2]|0)<<1)+(c[b+2304+(j-1<<2)>>2]|0)|0;s=(d[7440+r|0]|0)+h|0;y=(d[7392+r|0]|0)+g|0;if((q|0)>(t|0)){g=y;h=s;j=q}else{P=y;Q=s;R=q;break}}}else{P=0;Q=0;R=u}c[K>>2]=R;K=(Q|0)>(P|0);u=K?P:Q;c[k+4840>>2]=K&1;K=k+5184|0;c[K>>2]=u;if((c[k+4788>>2]|0)!=0){Q=k+4768|0;c[Q>>2]=u;u=c[a+21392>>2]|0;P=(u|0)>(R|0)?R:u;if((P|0)>0){c[k+4796>>2]=a5[c[a+85816>>2]&3](p,b+2304+(P<<2)|0,Q)|0}if((R|0)>(P|0)){c[k+4800>>2]=a5[c[a+85816>>2]&3](b+2304+(P<<2)|0,b+2304+(R<<2)|0,Q)|0}if((c[b+4768>>2]|0)<=(c[Q>>2]|0)){i=e;return}cF(M|0,L|0,5252)|0;i=e;return}Q=b+4768|0;P=a+85816|0;k=b+2304+(R<<2)|0;p=b+4824|0;u=b+4828|0;j=b+4796|0;h=b+4800|0;g=b+4804|0;t=2;while(1){q=c[a+21360+(t<<2)>>2]|0;if((q|0)>=(R|0)){v=880;break}s=t-2|0;y=(c[K>>2]|0)+(c[l+(s<<2)>>2]|0)|0;c[f>>2]=y;if((c[Q>>2]|0)<=(y|0)){v=881;break}y=a5[c[P>>2]&3](b+2304+(q<<2)|0,k,f)|0;q=c[f>>2]|0;if((c[Q>>2]|0)>(q|0)){cF(M|0,L|0,5252)|0;c[Q>>2]=q;q=c[m+(s<<2)>>2]|0;c[p>>2]=q;c[u>>2]=s-q;c[j>>2]=c[n+(s<<2)>>2];c[h>>2]=c[o+(s<<2)>>2];c[g>>2]=y}y=t+1|0;if((y|0)<23){t=y}else{v=884;break}}if((v|0)==880){i=e;return}else if((v|0)==881){i=e;return}else if((v|0)==884){i=e;return}}function cg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;f=d+4780|0;h=c[f>>2]|0;i=+g[53040+(h<<2)>>2];if(+g[d+4764>>2]>8206.0/i){j=1e5;return j|0}k=d+2304|0;l=(e|0)!=0;if(l){m=(h|0)==(c[e>>2]|0)}else{m=0}h=d+4788|0;n=(c[h>>2]|0)==2?38:21;o=d+4832|0;p=d+4836|0;q=.5945999622344971/i;r=d+5208|0;s=n+1|0;t=e+4|0;u=0;v=0;w=k;x=0;y=0;z=k;k=b;A=b;while(1){if(m){B=891}else{if((c[h>>2]|0)==0){B=891}else{C=-1;B=899}}do{if((B|0)==891){B=0;if((c[o>>2]|0)==0){D=0}else{D=c[14096+(v<<2)>>2]|0}E=(c[f>>2]|0)-(D+(c[d+4608+(v<<2)>>2]|0)<<(c[p>>2]|0)+1)-(c[d+4808+(c[d+5028+(v<<2)>>2]<<2)>>2]<<3)|0;if(!m){C=E;B=899;break}if((c[e+8+(v<<2)>>2]|0)!=(E|0)){C=E;B=899;break}if((x|0)!=0){cm(x,i,k,z)}if((y|0)==0){F=k;G=z;H=0;I=0;J=v;break}else{K=0}while(1){E=K|1;L=q<=+g[k+(E<<2)>>2]&1;c[z+(K<<2)>>2]=q<=+g[k+(K<<2)>>2]&1;c[z+(E<<2)>>2]=L;L=K+2|0;if(L>>>0<y>>>0){K=L}else{F=k;G=z;H=0;I=0;J=v;break}}}}while(0);if((B|0)==899){B=0;L=c[d+4872+(v<<2)>>2]|0;E=c[r>>2]|0;if((L+u|0)>(E|0)){M=E-u+1|0;cE(d+2304+(E<<2)|0,0,576-E<<2|0);N=(M|0)<0?0:M;O=s}else{N=L;O=v}L=(x|0)!=0;M=(y|0)==0;E=M&(L^1);P=E?w:z;Q=E?A:k;do{if(l){E=c[t>>2]|0;if((E|0)<1|(O|0)<(E|0)){B=907;break}E=c[e+8+(O<<2)>>2]|0;if((E|0)<1|(C|0)<(E|0)){B=907;break}if(L){cm(x,i,Q,P);R=A;S=w}else{R=Q;S=P}T=R;U=S;V=N+y|0;W=0}else{B=907}}while(0);if((B|0)==907){B=0;if(M){X=Q;Y=P}else{L=0;while(1){E=L|1;Z=q<=+g[Q+(E<<2)>>2]&1;c[P+(L<<2)>>2]=q<=+g[Q+(L<<2)>>2]&1;c[P+(E<<2)>>2]=Z;Z=L+2|0;if(Z>>>0<y>>>0){L=Z}else{X=A;Y=w;break}}}T=X;U=Y;V=0;W=N+x|0}if((N|0)<1){B=911;break}else{F=T;G=U;H=V;I=W;J=O}}if((J|0)>(n|0)){_=A;$=w;aa=u}else{L=c[d+4872+(J<<2)>>2]|0;_=A+(L<<2)|0;$=w+(L<<2)|0;aa=L+u|0}L=J+1|0;if((L|0)>(n|0)){B=918;break}else{u=aa;v=L;w=$;x=I;y=H;z=G;k=F;A=_}}do{if((B|0)==911){if((V|0)!=0){_=0;do{A=_|1;k=q<=+g[T+(A<<2)>>2]&1;c[U+(_<<2)>>2]=q<=+g[T+(_<<2)>>2]&1;c[U+(A<<2)>>2]=k;_=_+2|0;}while(_>>>0<V>>>0)}if((W|0)==0){break}cm(W,i,T,U)}else if((B|0)==918){if((I|0)!=0){cm(I,i,F,G)}if((H|0)==0){break}else{ab=0}do{_=ab|1;k=q<=+g[F+(_<<2)>>2]&1;c[G+(ab<<2)>>2]=q<=+g[F+(ab<<2)>>2]&1;c[G+(_<<2)>>2]=k;ab=ab+2|0;}while(ab>>>0<H>>>0)}}while(0);do{if((c[a+85096>>2]&2|0)!=0){q=.634521682242439/+g[53040+((c[p>>2]|0)+(c[f>>2]|0)<<2)>>2];H=d+4860|0;ab=c[H>>2]|0;if((ab|0)>0){ac=0;ad=0;ae=ab}else{break}while(1){ab=c[d+4872+(ad<<2)>>2]|0;G=ab+ac|0;if((c[a+84936+(ad<<2)>>2]|0)!=0&(ab|0)>0){ab=ac;do{F=d+2304+(ab<<2)|0;if(+g[b+(ab<<2)>>2]<q){af=0}else{af=c[F>>2]|0}c[F>>2]=af;ab=ab+1|0;}while((ab|0)<(G|0));ag=c[H>>2]|0}else{ag=ae}ab=ad+1|0;if((ab|0)<(ag|0)){ac=G;ad=ab;ae=ag}else{break}}}}while(0);j=ce(a,d,e)|0;return j|0}function ch(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0;f=e+(b*10504&-1)+(d*5252&-1)|0;g=e+(b*10504&-1)+(d*5252&-1)+4860|0;h=c[g>>2]|0;if((h|0)>0){i=0;j=0;k=0;l=h;while(1){m=(c[e+(b*10504&-1)+(d*5252&-1)+4872+(k<<2)>>2]|0)+i|0;n=i;while(1){if((n|0)>=(m|0)){break}if((c[e+(b*10504&-1)+(d*5252&-1)+2304+(n<<2)>>2]|0)==0){n=n+1|0}else{break}}if((n|0)==(m|0)){c[e+(b*10504&-1)+(d*5252&-1)+4608+(k<<2)>>2]=-2;o=-2;p=c[g>>2]|0}else{o=j;p=l}q=k+1|0;if((q|0)<(p|0)){i=m;j=o;k=q;l=p}else{r=o;s=p;break}}}else{r=0;s=h}h=e+(b*10504&-1)+(d*5252&-1)+4836|0;p=e+(b*10504&-1)+(d*5252&-1)+4832|0;do{if((c[h>>2]|0)==0){if((c[p>>2]|0)!=0){t=r;break}if((s|0)>0){u=0;v=0}else{w=r;x=950;break}do{o=c[e+(b*10504&-1)+(d*5252&-1)+4608+(u<<2)>>2]|0;v=((o|0)>0?o:0)|v;u=u+1|0;}while((u|0)<(s|0));if((v&1|0)==0&(v|0)!=0){y=0;z=s}else{w=r;x=950;break}while(1){m=e+(b*10504&-1)+(d*5252&-1)+4608+(y<<2)|0;n=c[m>>2]|0;if((n|0)>0){c[m>>2]=n>>1;A=c[g>>2]|0}else{A=z}n=y+1|0;if((n|0)<(A|0)){y=n;z=A}else{break}}c[h>>2]=1;w=1;x=950}else{w=r;x=950}}while(0);do{if((x|0)==950){if((c[p>>2]|0)!=0){t=w;break}if((c[e+(b*10504&-1)+(d*5252&-1)+4788>>2]|0)==2){t=w;break}if((c[a+76>>2]|0)==2){B=11}else{t=w;break}while(1){if((B|0)>=21){break}r=c[e+(b*10504&-1)+(d*5252&-1)+4608+(B<<2)>>2]|0;if((r|0)>=(c[14096+(B<<2)>>2]|0)|(r|0)==-2){B=B+1|0}else{break}}if((B|0)!=21){t=w;break}r=e+(b*10504&-1)+(d*5252&-1)+4652|0;h=c[r>>2]|0;if((h|0)>0){c[r>>2]=h-1}h=e+(b*10504&-1)+(d*5252&-1)+4656|0;r=c[h>>2]|0;if((r|0)>0){c[h>>2]=r-1}r=e+(b*10504&-1)+(d*5252&-1)+4660|0;h=c[r>>2]|0;if((h|0)>0){c[r>>2]=h-1}h=e+(b*10504&-1)+(d*5252&-1)+4664|0;r=c[h>>2]|0;if((r|0)>0){c[h>>2]=r-1}r=e+(b*10504&-1)+(d*5252&-1)+4668|0;h=c[r>>2]|0;if((h|0)>0){c[r>>2]=h-2}h=e+(b*10504&-1)+(d*5252&-1)+4672|0;r=c[h>>2]|0;if((r|0)>0){c[h>>2]=r-2}r=e+(b*10504&-1)+(d*5252&-1)+4676|0;h=c[r>>2]|0;if((h|0)>0){c[r>>2]=h-3}h=e+(b*10504&-1)+(d*5252&-1)+4680|0;r=c[h>>2]|0;if((r|0)>0){c[h>>2]=r-3}r=e+(b*10504&-1)+(d*5252&-1)+4684|0;h=c[r>>2]|0;if((h|0)>0){c[r>>2]=h-3}h=e+(b*10504&-1)+(d*5252&-1)+4688|0;r=c[h>>2]|0;if((r|0)>0){c[h>>2]=r-2}c[p>>2]=1;t=1}}while(0);cE(e+21008+((d<<2)+4<<2)|0,0,16);p=a+76|0;do{if((c[p>>2]|0)==2&(b|0)==1){if((c[e+(d*5252&-1)+4788>>2]|0)==2){C=t;break}if((c[e+10504+(d*5252&-1)+4788>>2]|0)==2){C=t;break}else{D=0}while(1){if((D|0)>=6){break}a=c[e+10504+(d*5252&-1)+4608+(D<<2)>>2]|0;if((c[e+(d*5252&-1)+4608+(D<<2)>>2]|0)!=(a|0)&(a|0)>-1){break}else{D=D+1|0}}if((D|0)==6){cE(e+10504+(d*5252&-1)+4608|0,-1|0,24);c[e+21024+(d<<4)>>2]=1;E=6}else{E=6}while(1){if((E|0)>=11){break}a=c[e+10504+(d*5252&-1)+4608+(E<<2)>>2]|0;if((c[e+(d*5252&-1)+4608+(E<<2)>>2]|0)!=(a|0)&(a|0)>-1){break}else{E=E+1|0}}if((E|0)==11){cE(e+10504+(d*5252&-1)+4632|0,-1|0,20);c[e+21024+(d<<4)+4>>2]=1;F=11}else{F=11}while(1){if((F|0)>=16){break}a=c[e+10504+(d*5252&-1)+4608+(F<<2)>>2]|0;if((c[e+(d*5252&-1)+4608+(F<<2)>>2]|0)!=(a|0)&(a|0)>-1){break}else{F=F+1|0}}if((F|0)==16){cE(e+10504+(d*5252&-1)+4652|0,-1|0,20);c[e+21024+(d<<4)+8>>2]=1;G=16}else{G=16}while(1){if((G|0)>=21){break}a=c[e+10504+(d*5252&-1)+4608+(G<<2)>>2]|0;if((c[e+(d*5252&-1)+4608+(G<<2)>>2]|0)!=(a|0)&(a|0)>-1){break}else{G=G+1|0}}if((G|0)==21){cE(e+10504+(d*5252&-1)+4672|0,-1|0,20);c[e+21024+(d<<4)+12>>2]=1}a=c[e+10504+(d*5252&-1)+4608>>2]|0;if((a|0)==-1){H=0;I=0}else{H=(a|0)>0?a:0;I=1}a=c[e+10504+(d*5252&-1)+4612>>2]|0;if((a|0)==-1){J=H;K=I}else{J=(H|0)<(a|0)?a:H;K=I+1|0}a=c[e+10504+(d*5252&-1)+4616>>2]|0;if((a|0)==-1){L=J;M=K}else{L=(J|0)<(a|0)?a:J;M=K+1|0}a=c[e+10504+(d*5252&-1)+4620>>2]|0;if((a|0)==-1){N=L;O=M}else{N=(L|0)<(a|0)?a:L;O=M+1|0}a=c[e+10504+(d*5252&-1)+4624>>2]|0;if((a|0)==-1){P=N;Q=O}else{P=(N|0)<(a|0)?a:N;Q=O+1|0}a=c[e+10504+(d*5252&-1)+4628>>2]|0;if((a|0)==-1){R=P;S=Q}else{R=(P|0)<(a|0)?a:P;S=Q+1|0}a=c[e+10504+(d*5252&-1)+4632>>2]|0;if((a|0)==-1){T=R;U=S}else{T=(R|0)<(a|0)?a:R;U=S+1|0}a=c[e+10504+(d*5252&-1)+4636>>2]|0;if((a|0)==-1){V=T;W=U}else{V=(T|0)<(a|0)?a:T;W=U+1|0}a=c[e+10504+(d*5252&-1)+4640>>2]|0;if((a|0)==-1){X=V;Y=W}else{X=(V|0)<(a|0)?a:V;Y=W+1|0}a=c[e+10504+(d*5252&-1)+4644>>2]|0;if((a|0)==-1){Z=X;$=Y}else{Z=(X|0)<(a|0)?a:X;$=Y+1|0}a=c[e+10504+(d*5252&-1)+4648>>2]|0;if((a|0)==-1){aa=Z;ab=$}else{aa=(Z|0)<(a|0)?a:Z;ab=$+1|0}a=c[e+10504+(d*5252&-1)+4652>>2]|0;if((a|0)==-1){ac=0;ad=0}else{ac=(a|0)>0?a:0;ad=1}a=c[e+10504+(d*5252&-1)+4656>>2]|0;if((a|0)==-1){ae=ac;af=ad}else{ae=(ac|0)<(a|0)?a:ac;af=ad+1|0}a=c[e+10504+(d*5252&-1)+4660>>2]|0;if((a|0)==-1){ag=ae;ah=af}else{ag=(ae|0)<(a|0)?a:ae;ah=af+1|0}a=c[e+10504+(d*5252&-1)+4664>>2]|0;if((a|0)==-1){ai=ag;aj=ah}else{ai=(ag|0)<(a|0)?a:ag;aj=ah+1|0}a=c[e+10504+(d*5252&-1)+4668>>2]|0;if((a|0)==-1){ak=ai;al=aj}else{ak=(ai|0)<(a|0)?a:ai;al=aj+1|0}a=c[e+10504+(d*5252&-1)+4672>>2]|0;if((a|0)==-1){am=ak;an=al}else{am=(ak|0)<(a|0)?a:ak;an=al+1|0}a=c[e+10504+(d*5252&-1)+4676>>2]|0;if((a|0)==-1){ao=am;ap=an}else{ao=(am|0)<(a|0)?a:am;ap=an+1|0}a=c[e+10504+(d*5252&-1)+4680>>2]|0;if((a|0)==-1){aq=ao;ar=ap}else{aq=(ao|0)<(a|0)?a:ao;ar=ap+1|0}a=c[e+10504+(d*5252&-1)+4684>>2]|0;if((a|0)==-1){as=aq;at=ar}else{as=(aq|0)<(a|0)?a:aq;at=ar+1|0}a=c[e+10504+(d*5252&-1)+4688>>2]|0;if((a|0)==-1){au=at;av=as}else{au=at+1|0;av=(as|0)<(a|0)?a:as}a=e+10504+(d*5252&-1)+4844|0;w=e+10504+(d*5252&-1)+4784|0;B=0;while(1){do{if((aa|0)<(c[11824+(B<<2)>>2]|0)){if((av|0)>=(c[11696+(B<<2)>>2]|0)){break}x=_(c[11760+(B<<2)>>2]|0,ab)|0;r=(_(c[11632+(B<<2)>>2]|0,au)|0)+x|0;if((c[a>>2]|0)<=(r|0)){break}c[a>>2]=r;c[w>>2]=B}}while(0);r=B+1|0;if(r>>>0<16){B=r}else{C=0;break}}}else{C=t}}while(0);t=c[g>>2]|0;if((t|0)>0){au=0;ab=t;while(1){t=e+(b*10504&-1)+(d*5252&-1)+4608+(au<<2)|0;if((c[t>>2]|0)==-2){c[t>>2]=0;aw=c[g>>2]|0}else{aw=ab}t=au+1|0;if((t|0)<(aw|0)){au=t;ab=aw}else{break}}}if((C|0)==0){return}cn(c[p>>2]|0,f)|0;return}function ci(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function cj(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0;e=a;a=0;while(1){g=e+8|0;h=(d[8296+((c[e>>2]<<1)+(c[e+4>>2]|0))|0]|0)+a|0;if(g>>>0<b>>>0){e=g;a=h}else{break}}c[f>>2]=(c[f>>2]|0)+h;return 1}function ck(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=d-1|0;d=c[54080+(f<<2)>>2]|0;g=c[54144+(d<<4)>>2]|0;h=(f|0)==1?6800:6736;f=a;a=0;while(1){i=f+8|0;j=c[f+4>>2]|0;k=(c[h+((_(c[f>>2]|0,g)|0)+j<<2)>>2]|0)+a|0;if(i>>>0<b>>>0){f=i;a=k}else{break}}a=k&65535;f=k>>>16;k=f>>>0>a>>>0;c[e>>2]=(c[e>>2]|0)+(k?a:f);return(k&1)+d|0}function cl(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=c[54080+(e-1<<2)>>2]|0;e=c[54144+(g<<4)>>2]|0;h=c[54156+(g<<4)>>2]|0;i=g+1|0;j=c[54156+(i<<4)>>2]|0;k=g+2|0;l=c[54156+(k<<4)>>2]|0;m=a;a=0;n=0;o=0;while(1){p=m+8|0;q=c[m+4>>2]|0;r=(_(c[m>>2]|0,e)|0)+q|0;s=(d[h+r|0]|0)+a|0;t=(d[j+r|0]|0)+n|0;u=(d[l+r|0]|0)+o|0;if(p>>>0<b>>>0){m=p;a=s;n=t;o=u}else{break}}o=s>>>0>t>>>0;n=o?t:s;s=n>>>0>u>>>0;c[f>>2]=(c[f>>2]|0)+(s?u:n);return(s?k:o?i:g)|0}function cm(a,b,d,e){a=a|0;b=+b;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;f=e;h=a&2;i=a>>>2;if((i|0)==0){j=f;l=d}else{a=i<<2;m=e+(a<<2)|0;e=f;f=d;n=i;while(1){i=n-1|0;o=+g[f>>2]*b+8388608.0;p=+g[f+4>>2]*b+8388608.0;q=+g[f+8>>2]*b+8388608.0;r=+g[f+12>>2]*b+8388608.0;s=p+ +g[67248+((g[k>>2]=p,c[k>>2]|0)-1258291200<<2)>>2];p=q+ +g[67248+((g[k>>2]=q,c[k>>2]|0)-1258291200<<2)>>2];q=r+ +g[67248+((g[k>>2]=r,c[k>>2]|0)-1258291200<<2)>>2];c[e>>2]=(g[k>>2]=o+ +g[67248+((g[k>>2]=o,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200;c[e+4>>2]=(g[k>>2]=s,c[k>>2]|0)-1258291200;c[e+8>>2]=(g[k>>2]=p,c[k>>2]|0)-1258291200;c[e+12>>2]=(g[k>>2]=q,c[k>>2]|0)-1258291200;if((i|0)==0){break}else{e=e+16|0;f=f+16|0;n=i}}j=m;l=d+(a<<2)|0}if((h|0)==0){return}q=+g[l>>2]*b+8388608.0;p=+g[l+4>>2]*b+8388608.0;b=p+ +g[67248+((g[k>>2]=p,c[k>>2]|0)-1258291200<<2)>>2];c[j>>2]=(g[k>>2]=q+ +g[67248+((g[k>>2]=q,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200;c[j+4>>2]=(g[k>>2]=b,c[k>>2]|0)-1258291200;return}function cn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+16|0;e=d|0;if((a|0)==2){do{if((c[b+4788>>2]|0)==2){f=(c[b+4792>>2]|0)==0?13728:13792}else{a=b+4832|0;if((c[a>>2]|0)==0){g=11}else{f=13856;break}while(1){if((g|0)>=21){break}if((c[b+4608+(g<<2)>>2]|0)<(c[14096+(g<<2)>>2]|0)){break}else{g=g+1|0}}if((g|0)!=21){f=13856;break}c[a>>2]=1;h=b+4652|0;c[h>>2]=(c[h>>2]|0)-1;h=b+4656|0;c[h>>2]=(c[h>>2]|0)-1;h=b+4660|0;c[h>>2]=(c[h>>2]|0)-1;h=b+4664|0;c[h>>2]=(c[h>>2]|0)-1;h=b+4668|0;c[h>>2]=(c[h>>2]|0)-2;h=b+4672|0;c[h>>2]=(c[h>>2]|0)-2;h=b+4676|0;c[h>>2]=(c[h>>2]|0)-3;h=b+4680|0;c[h>>2]=(c[h>>2]|0)-3;h=b+4684|0;c[h>>2]=(c[h>>2]|0)-3;h=b+4688|0;c[h>>2]=(c[h>>2]|0)-2;f=13856}}while(0);g=c[b+4868>>2]|0;if((g|0)>0){h=0;j=0;do{k=c[b+4608+(h<<2)>>2]|0;j=(j|0)<(k|0)?k:j;h=h+1|0;}while((h|0)<(g|0));l=(g|0)>1?g:1;m=j}else{l=0;m=0}j=c[b+4860>>2]|0;if((l|0)<(j|0)){g=l;l=0;while(1){h=c[b+4608+(g<<2)>>2]|0;k=(l|0)<(h|0)?h:l;h=g+1|0;if((h|0)<(j|0)){g=h;l=k}else{n=k;break}}}else{n=0}l=b+4844|0;c[l>>2]=1e5;g=b+4784|0;j=0;k=1e5;while(1){do{if((m|0)<(c[11824+(j<<2)>>2]|0)){if((n|0)>=(c[11696+(j<<2)>>2]|0)){o=k;break}h=c[f+(j<<2)>>2]|0;if((k|0)<=(h|0)){o=k;break}c[l>>2]=h;c[g>>2]=j;o=h}else{o=k}}while(0);a=j+1|0;if((a|0)<16){j=a;k=o}else{break}}p=(o|0)==1e5&1;i=d;return p|0}o=(c[b+4832>>2]|0)==0;cE(e|0,0,16);k=o?0:2;do{if((c[b+4788>>2]|0)==2){j=0;g=0;while(1){l=c[48928+(k*48&-1)+(g<<2)>>2]|0;f=(l|0)/3&-1;if((l|0)>2){l=e+(g<<2)|0;n=(f|0)>1;m=0;a=j;h=c[l>>2]|0;while(1){q=a*3&-1;r=c[b+4608+(q<<2)>>2]|0;if((r|0)>(h|0)){c[l>>2]=r;s=r}else{s=h}r=c[b+4608+(q+1<<2)>>2]|0;if((r|0)>(s|0)){c[l>>2]=r;t=r}else{t=s}r=c[b+4608+(q+2<<2)>>2]|0;if((r|0)>(t|0)){c[l>>2]=r;u=r}else{u=t}r=m+1|0;if((r|0)<(f|0)){m=r;a=a+1|0;h=u}else{break}}v=(n?f:1)+j|0}else{v=j}h=g+1|0;if((h|0)<4){j=v;g=h}else{break}}w=1;x=c[e>>2]|0;y=c[e+4>>2]|0;z=c[e+8>>2]|0;A=c[e+12>>2]|0}else{g=c[48912+(k*48&-1)>>2]|0;j=e|0;h=0;a=0;while(1){m=c[b+4608+(h<<2)>>2]|0;if((m|0)>(a|0)){c[j>>2]=m;B=m}else{B=a}m=h+1|0;if((m|0)<(g|0)){h=m;a=B}else{break}}a=c[48916+(k*48&-1)>>2]|0;h=e+4|0;j=0;m=g;l=0;while(1){r=c[b+4608+(m<<2)>>2]|0;if((r|0)>(l|0)){c[h>>2]=r;C=r}else{C=l}r=j+1|0;if((r|0)<(a|0)){j=r;m=m+1|0;l=C}else{break}}l=a+g|0;m=c[48920+(k*48&-1)>>2]|0;if(o){j=e+8|0;h=0;r=l;q=0;while(1){D=c[b+4608+(r<<2)>>2]|0;if((D|0)>(q|0)){c[j>>2]=D;E=D}else{E=q}D=h+1|0;if((D|0)<(m|0)){h=D;r=r+1|0;q=E}else{break}}F=m+l|0;G=E}else{F=l;G=0}q=c[48924+(k*48&-1)>>2]|0;if((19>>>(k>>>0)&1|0)==0){w=0;x=B;y=C;z=G;A=0;break}r=e+12|0;h=0;j=F;g=0;while(1){a=c[b+4608+(j<<2)>>2]|0;if((a|0)>(g|0)){c[r>>2]=a;H=a}else{H=g}a=h+1|0;if((a|0)<(q|0)){h=a;j=j+1|0;g=H}else{w=0;x=B;y=C;z=G;A=H;break}}}}while(0);H=((y|0)>(c[49404+(k<<4)>>2]|0)&1)+((x|0)>(c[49400+(k<<4)>>2]|0)&1)+((z|0)>(c[49408+(k<<4)>>2]|0)&1)+((A|0)>(c[49412+(k<<4)>>2]|0)&1)|0;if((H|0)!=0){p=H;i=d;return p|0}H=48912+(k*48&-1)+(w<<4)|0;c[b+5188>>2]=H;G=c[49272+(x<<2)>>2]|0;c[b+5192>>2]=G;x=c[49272+(y<<2)>>2]|0;c[b+5196>>2]=x;y=c[49272+(z<<2)>>2]|0;c[b+5200>>2]=y;z=c[49272+(A<<2)>>2]|0;c[b+5204>>2]=z;if(o){c[b+4784>>2]=(y<<2)+((G*5&-1)+x<<4)+z}else{c[b+4784>>2]=(G*3&-1)+500+x}o=_(c[H>>2]|0,G)|0;G=(_(c[48912+(k*48&-1)+(w<<4)+4>>2]|0,x)|0)+o|0;o=G+(_(c[48912+(k*48&-1)+(w<<4)+8>>2]|0,y)|0)|0;c[b+4844>>2]=o+(_(c[48912+(k*48&-1)+(w<<4)+12>>2]|0,z)|0);p=0;i=d;return p|0}function co(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=a;f=0;g=0;while(1){h=c[e>>2]|0;i=e+8|0;j=c[e+4>>2]|0;k=(f|0)<(h|0)?h:f;l=(g|0)<(j|0)?j:g;if(i>>>0<b>>>0){e=i;f=k;g=l}else{break}}g=(k|0)<(l|0)?l:k;if(g>>>0<16){m=a7[c[66072+(g<<2)>>2]&15](a,b,g,d)|0;return m|0}if(g>>>0>8206){c[d>>2]=1e5;m=-1;return m|0}k=g-15|0;g=24;while(1){if((g|0)>=32){break}if((c[54148+(g<<4)>>2]|0)>>>0<k>>>0){g=g+1|0}else{break}}l=g-8|0;while(1){if((l|0)>=24){break}if((c[54148+(l<<4)>>2]|0)>>>0<k>>>0){l=l+1|0}else{break}}k=(c[54144+(l<<4)>>2]<<16)+(c[54144+(g<<4)>>2]|0)|0;f=a;a=0;while(1){e=c[f>>2]|0;i=f+8|0;j=c[f+4>>2]|0;h=e>>>0>14;n=j>>>0>14;o=(h?k:0)+a+(c[51616+((n?15:j)+(h?240:e<<4)<<2)>>2]|0)+(n?k:0)|0;if(i>>>0<b>>>0){f=i;a=o}else{break}}a=o&65535;f=o>>>16;o=f>>>0>a>>>0;c[d>>2]=(c[d>>2]|0)+(o?a:f);m=o?g:l;return m|0}function cp(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=0;do{d=a+37192+(b<<2)|0;e=c[d>>2]|0;if((e|0)!=0){cD(e);c[d>>2]=0}b=b+1|0;}while((b|0)<641);b=a+37184|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0}b=a+37188|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0}b=a+284|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0}b=a+85780|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0;c[a+85776>>2]=0}b=c[a+85796>>2]|0;if((b|0)!=0){cD(b)}b=c[a+85676>>2]|0;if((b|0)!=0){cD(b)}b=c[a+52152>>2]|0;if((b|0)!=0){cD(b)}b=c[a+52156>>2]|0;if((b|0)!=0){cD(b)}b=a+85704|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0}b=a+85708|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0}b=a+85712|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0}b=a+85716|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0}b=a+85728|0;d=c[b>>2]|0;if((d|0)!=0){cD(d);c[b>>2]=0;c[a+85732>>2]=0;c[a+85740>>2]=0}b=a+85744|0;d=c[b>>2]|0;if((d|0)!=0){e=d;while(1){d=c[e+24>>2]|0;f=c[e>>2]|0;cD(c[e+12>>2]|0);cD(d);cD(e);if((f|0)==0){break}else{e=f}}c[b>>2]=0;c[a+85748>>2]=0}b=a+85808|0;e=c[b>>2]|0;do{if((e|0)==0){if((a|0)!=0){break}g=a;cD(g);return}else{aJ(e|0);cD(e);c[b>>2]=0}}while(0);b=a+85800|0;e=c[b>>2]|0;if((e|0)==0){g=a;cD(g);return}f=c[e+2156>>2]|0;if((f|0)==0){h=e}else{cD(f);h=c[b>>2]|0}f=c[h+4316>>2]|0;if((f|0)==0){i=h}else{cD(f);i=c[b>>2]|0}cD(i);c[b>>2]=0;g=a;cD(g);return}function cq(a,b){a=a|0;b=+b;var d=0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;d=c[a+192>>2]|0;if((d|0)==0){e=(b<-.3?3410.0:b)/1.0e3;f=e<.10000000149011612?.10000000149011612:e;e=f>24.0?24.0:f;f=+P(+e,-.8)*3.64;h=e-3.4;i=f- +X(+(h*h*-.6))*6.8;h=e-8.7;f=i+ +X(+(h*h*-.15))*6.0;j=f+ +P(+e,4.0)*96.0e-5;return+j}else if((d|0)==1){e=(b<-.3?3410.0:b)/1.0e3;f=e<.10000000149011612?.10000000149011612:e;e=f>24.0?24.0:f;f=+P(+e,-.8)*3.64;h=e-3.4;i=f- +X(+(h*h*-.6))*6.8;h=e-8.7;f=i+ +X(+(h*h*-.15))*6.0;j=f+ +P(+e,4.0)*56.0e-5;return+j}else if((d|0)==2){e=(b<-.3?3410.0:b)/1.0e3;f=e<.10000000149011612?.10000000149011612:e;e=f>24.0?24.0:f;f=+P(+e,-.8)*3.64;h=e-3.4;i=f- +X(+(h*h*-.6))*6.8;h=e-8.7;f=i+ +X(+(h*h*-.15))*6.0;j=f+ +P(+e,4.0)*6.0e-4;return+j}else if((d|0)==3){e=(b<-.3?3410.0:b)/1.0e3;f=e<.10000000149011612?.10000000149011612:e;e=f>24.0?24.0:f;f=+P(+e,-.8)*3.64;h=e-3.4;i=f- +X(+(h*h*-.6))*6.8;h=e-8.7;f=i+ +X(+(h*h*-.15))*6.0;j=f+ +P(+e,4.0)*64.0e-5+6.0;return+j}else if((d|0)==4){e=+g[a+188>>2];f=(b<-.3?3410.0:b)/1.0e3;h=f<.10000000149011612?.10000000149011612:f;f=h>24.0?24.0:h;h=+P(+f,-.8)*3.64;i=f-3.4;k=h- +X(+(i*i*-.6))*6.8;i=f-8.7;h=k+ +X(+(i*i*-.15))*6.0;j=h+(e*.04+.6)*.001*+P(+f,4.0);return+j}else if((d|0)==5){f=+g[a+188>>2];e=(b<-.3?3410.0:b)/1.0e3;h=e<3.4100000858306885?3.4100000858306885:e;e=h>16.100000381469727?16.100000381469727:h;h=+P(+e,-.8)*3.64;i=e-3.4;k=h- +X(+(i*i*-.6))*6.8;i=e-8.7;h=k+ +X(+(i*i*-.15))*6.0;j=h+(f*.04+.6)*.001*+P(+e,4.0);return+j}else{e=(b<-.3?3410.0:b)/1.0e3;b=e<.10000000149011612?.10000000149011612:e;e=b>24.0?24.0:b;b=+P(+e,-.8)*3.64;f=e-3.4;h=b- +X(+(f*f*-.6))*6.8;f=e-8.7;b=h+ +X(+(f*f*-.15))*6.0;j=b+ +P(+e,4.0)*6.0e-4;return+j}return 0.0}function cr(a,b){a=a|0;b=b|0;aR(c[m>>2]|0,a|0,b|0)|0;au(c[m>>2]|0)|0;return}function cs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d|0;if((a|0)==0){i=d;return}f=a+85828|0;if((c[f>>2]|0)==0){i=d;return}a=e;c[a>>2]=b;c[a+4>>2]=0;a4[c[f>>2]&7](100080,e|0);i=d;return}function ct(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e|0;if((a|0)==0){i=e;return}g=a+85836|0;if((c[g>>2]|0)==0){i=e;return}a=f;c[a>>2]=d;c[a+4>>2]=0;a4[c[g>>2]&7](b,f|0);i=e;return}function cu(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;b=~~(+aG(+(c/+(d|0)))*5.799142360687256+-.5)+210|0;if((b|0)<(e&255|0)){return e|0}else{return((b|0)>254?-1:b&255)|0}return 0}function cv(a,b,d,e,f){a=a|0;b=b|0;d=+d;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0.0,x=0.0,y=0,z=0,A=0;h=i;i=i+2048|0;j=h|0;cE(j|0,0,2048);k=-1;l=64;m=0;n=0;o=-128;while(1){p=o&255;L1771:do{if((o&255)>(f&255)){q=j+(p<<3)|0;if((c[q>>2]|0)==0){c[q>>2]=1;r=+cB(a,b,e,o);g[j+(p<<3)+4>>2]=r;s=r}else{s=+g[j+(p<<3)+4>>2]}do{if(s<=d){if(o<<24>>24==-1){t=1245}else{q=o+1&255;u=q&255;v=j+(u<<3)|0;if((c[v>>2]|0)==0){c[v>>2]=1;r=+cB(a,b,e,q);g[j+(u<<3)+4>>2]=r;w=r}else{w=+g[j+(u<<3)+4>>2]}if(w>d){break}if(o<<24>>24!=0){t=1245}}if((t|0)==1245){t=0;u=o-1&255;q=u&255;v=j+(q<<3)|0;if((c[v>>2]|0)==0){c[v>>2]=1;r=+cB(a,b,e,u);g[j+(q<<3)+4>>2]=r;x=r}else{x=+g[j+(q<<3)+4>>2]}if(x>d){break}}y=p+l&255;z=1;A=o;break L1771}}while(0);y=p-l&255;z=m;A=k}else{y=p+l&255;z=m;A=k}}while(0);p=n+1&255;if((p&255)<8){k=A;l=l>>1;m=z;n=p;o=y}else{break}}o=z<<24>>24==0?y:A;i=h;return((o&255)>(f&255)?o:f)|0}function cw(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+160|0;h=g|0;j=c[a+16>>2]|0;k=c[a+12>>2]|0;l=c[a+20>>2]|0;m=c[j+4864>>2]|0;if((m|0)>0){n=0;o=0;p=0;q=0;while(1){r=f-(c[b+(q<<2)>>2]|0)|0;s=(n|0)<(r|0)?r:n;t=d[49360+q|0]|0;u=r-56|0;r=u-(t<<1)|0;v=u-(t<<2)|0;t=(p|0)<(r|0)?r:p;r=(o|0)<(v|0)?v:o;v=q+1|0;if((v|0)<(m|0)){n=s;o=r;p=t;q=v}else{w=s;x=r;y=t;break}}}else{w=0;x=0;y=0}if((c[k+28>>2]|0)==2){z=(y|0)<(x|0)?y:x}else{z=y}k=f-((w|0)>(z|0)?z:w)|0;do{if((y|0)==(z|0)){c[j+4836>>2]=0}else{if((x|0)!=(z|0)){break}c[j+4836>>2]=1}}while(0);z=(k|0)<(l|0)?l:k;k=j+4780|0;c[k>>2]=z;do{if((z|0)<0){c[k>>2]=0;A=0}else{if((z|0)<=255){A=0;break}c[k>>2]=255;A=0}}while(0);do{c[h+(A<<2)>>2]=(c[b+(A<<2)>>2]|0)-z;A=A+1|0;}while((A|0)<39);A=(c[j+4836>>2]|0)==0?1:2;z=m>>>0<18?m:18;m=15<<A;b=7<<A;A=7;l=0;do{if(l>>>0<z>>>0){x=1e3;y=0;w=l;while(1){f=-(c[h+(w<<2)>>2]|0)|0;q=(y|0)<(f|0)?f:y;p=(x|0)>(f|0)?f:x;f=w+3|0;if(f>>>0<z>>>0){x=p;y=q;w=f}else{B=p;C=q;D=f;break}}}else{B=1e3;C=0;D=l}if(D>>>0<39){w=B;y=0;x=D;while(1){f=-(c[h+(x<<2)>>2]|0)|0;q=(y|0)<(f|0)?f:y;p=(w|0)>(f|0)?f:w;f=x+3|0;if(f>>>0<39){w=p;y=q;x=f}else{E=p;F=q;break}}}else{E=B;F=0}x=C-m|0;y=F-b|0;w=(x|0)>(y|0)?x:y;if((E|0)>0){y=E>>3;c[j+4808+(l<<2)>>2]=y;G=y}else{c[j+4808+(l<<2)>>2]=0;G=0}y=j+4808+(l<<2)|0;if((w|0)>0){x=w+7>>3;w=(G|0)>(x|0)?G:x;c[y>>2]=w;H=w}else{H=G}do{if((H|0)>0){w=c[a+24+(l<<2)>>2]|0;x=c[k>>2]|0;if((w|0)>(x-(H<<3)|0)){q=x-w>>3;c[y>>2]=q;I=q}else{I=H}if((I|0)<=7){J=I;break}c[y>>2]=7;J=7}else{J=H}}while(0);A=(A|0)>(J|0)?J:A;l=l+1|0;}while(l>>>0<3);l=h|0;J=j+4808|0;H=c[J>>2]|0;I=H<<3;a=j+4812|0;G=c[a>>2]|0;E=G<<3;b=j+4816|0;F=c[b>>2]|0;m=F<<3;C=0;do{B=h+(C<<2)|0;c[B>>2]=(c[B>>2]|0)+I;B=h+(C+1<<2)|0;c[B>>2]=(c[B>>2]|0)+E;B=h+(C+2<<2)|0;c[B>>2]=(c[B>>2]|0)+m;C=C+3|0;}while(C>>>0<39);if((A|0)<=0){cA(j,e,l,49360);i=g;return}c[J>>2]=H-A;c[a>>2]=G-A;c[b>>2]=F-A;c[k>>2]=(c[k>>2]|0)-(A<<3);cA(j,e,l,49360);i=g;return}function cx(){return 100376|0}function cy(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+160|0;h=g|0;j=c[a+16>>2]|0;k=c[a+12>>2]|0;l=c[a+20>>2]|0;a=c[j+4864>>2]|0;m=(c[k+76>>2]|0)==2?49520:49496;if((a|0)>0){n=0;o=0;p=0;q=0;r=0;s=0;while(1){t=f-(c[b+(s<<2)>>2]|0)|0;u=(n|0)<(t|0)?t:n;v=d[49520+s|0]|0;w=t-(v<<1)|0;x=t-(v<<2)|0;v=(d[m+s|0]|0)+(c[14096+(s<<2)>>2]|0)|0;y=t-(v<<1)|0;z=t-(v<<2)|0;v=(r|0)<(w|0)?w:r;w=(q|0)<(x|0)?x:q;x=(p|0)<(y|0)?y:p;y=(o|0)<(z|0)?z:o;z=s+1|0;if((z|0)<(a|0)){n=u;o=y;p=x;q=w;r=v;s=z}else{A=u;B=y;C=x;D=w;E=v;break}}}else{A=0;B=0;C=0;D=0;E=0}s=f-C|0;r=(s|0)<(l|0)?l:s;s=0;while(1){if((s|0)>=(a|0)){F=1295;break}if((r-(c[e+(s<<2)>>2]|0)-(c[14096+(s<<2)>>2]<<1)|0)<1){G=D;H=E;break}else{s=s+1|0}}L1858:do{if((F|0)==1295){s=f-B|0;r=(s|0)<(l|0)?l:s;s=0;while(1){if((s|0)>=(a|0)){G=B;H=C;break L1858}if((r-(c[e+(s<<2)>>2]|0)-(c[14096+(s<<2)>>2]<<2)|0)<1){G=D;H=C;break}else{s=s+1|0}}}}while(0);C=(c[k+28>>2]|0)==2;k=C?G:H;G=C?D:E;D=(E|0)<(H|0)?E:H;C=(D|0)<(G|0)?D:G;D=(C|0)<(k|0)?C:k;C=f-((A|0)>(D|0)?D:A)|0;A=(C|0)<(l|0)?l:C;do{if((E|0)==(D|0)){c[j+4836>>2]=0;c[j+4832>>2]=0;I=49520}else{if((H|0)==(D|0)){c[j+4836>>2]=0;c[j+4832>>2]=1;I=m;break}if((G|0)==(D|0)){c[j+4836>>2]=1;c[j+4832>>2]=0;I=49520;break}if((k|0)!=(D|0)){I=m;break}c[j+4836>>2]=1;c[j+4832>>2]=1;I=m}}while(0);m=j+4780|0;c[m>>2]=A;do{if((A|0)<0){c[m>>2]=0;J=0}else{if((A|0)<=255){J=0;break}c[m>>2]=255;J=0}}while(0);do{c[h+(J<<2)>>2]=(c[b+(J<<2)>>2]|0)-A;J=J+1|0;}while((J|0)<39);cA(j,e,h|0,I);i=g;return}function cz(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0;b=a+16|0;d=c[b>>2]|0;e=(c[d+4836>>2]|0)==0?2:4;f=c[d+5208>>2]|0;h=d+4832|0;i=d+4780|0;j=-2-f|0;l=0;m=0;n=d+2304|0;o=c[a+8>>2]|0;while(1){if((c[h>>2]|0)==0){p=0}else{p=c[14096+(l<<2)>>2]|0}q=_(p+(c[d+4608+(l<<2)>>2]|0)|0,e)|0;r=+g[53040+(((c[i>>2]|0)-((c[d+4808+(c[d+5028+(l<<2)>>2]<<2)>>2]<<3)+q)&255)<<2)>>2];q=c[d+4872+(l<<2)>>2]|0;s=f-m+1|0;t=q+m|0;u=l+1|0;v=q>>>0<=s>>>0?q:s;s=v&3;w=v>>>2;if((w|0)==0){x=n;y=o}else{v=q^-1;q=m+j|0;z=(q>>>0<v>>>0?v:q)&-4^-4;q=n;v=w;w=o;while(1){A=v-1|0;B=r*+g[w>>2]+8388608.0;C=r*+g[w+4>>2]+8388608.0;D=r*+g[w+8>>2]+8388608.0;E=r*+g[w+12>>2]+8388608.0;F=(g[k>>2]=C+ +g[67248+((g[k>>2]=C,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0);G=(g[k>>2]=D+ +g[67248+((g[k>>2]=D,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0);H=(g[k>>2]=E+ +g[67248+((g[k>>2]=E,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0);c[q>>2]=(g[k>>2]=B+ +g[67248+((g[k>>2]=B,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200;c[q+4>>2]=F-1258291200;c[q+8>>2]=G-1258291200;c[q+12>>2]=H-1258291200;if((A|0)==0){break}else{q=q+16|0;v=A;w=w+16|0}}x=n+(z<<2)|0;y=o+(z<<2)|0}if((s|0)==2){I=0.0;J=1321}else if((s|0)==0){K=y;L=x}else if((s|0)==1){M=0.0;N=0.0;J=1322}else if((s|0)==3){I=r*+g[y+8>>2];J=1321}else{O=8388608.0;P=0.0;Q=0.0;J=1323}if((J|0)==1321){J=0;M=r*+g[y+4>>2];N=I;J=1322}if((J|0)==1322){J=0;O=r*+g[y>>2]+8388608.0;P=M;Q=N;J=1323}if((J|0)==1323){J=0;B=P+8388608.0;E=Q+8388608.0;w=(g[k>>2]=O+ +g[67248+((g[k>>2]=O,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;v=(g[k>>2]=B+ +g[67248+((g[k>>2]=B,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;if((s|0)==3){c[x+8>>2]=(g[k>>2]=E+ +g[67248+((g[k>>2]=E,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200;J=1325}else if((s|0)==2){J=1325}else if((s|0)==1){J=1326}if((J|0)==1325){J=0;c[x+4>>2]=v;J=1326}if((J|0)==1326){J=0;c[x>>2]=w}K=y+(s<<2)|0;L=x+(s<<2)|0}if(t>>>0>f>>>0){break}else{l=u;m=t;n=L;o=K}}K=ce(c[a+12>>2]|0,c[b>>2]|0,0)|0;c[(c[b>>2]|0)+4768>>2]=K;return c[(c[b>>2]|0)+4768>>2]|0}function cA(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=(c[a+4836>>2]|0)==0;h=g?2:4;i=g?1:2;g=c[a+4860>>2]|0;j=(c[a+4832>>2]|0)!=0;if(j&(g|0)>11){k=11;do{l=_(c[14096+(k<<2)>>2]|0,h)|0;m=e+(k<<2)|0;c[m>>2]=(c[m>>2]|0)+l;k=k+1|0;}while((k|0)<(g|0))}do{if((g|0)>0){k=a+4780|0;l=h-1|0;m=0;do{n=(c[k>>2]|0)-(c[a+4808+(c[a+5028+(m<<2)>>2]<<2)>>2]<<3)|0;if(j){o=c[14096+(m<<2)>>2]|0}else{o=0}p=c[e+(m<<2)>>2]|0;do{if((p|0)<0){q=n-(_(o,h)|0)|0;r=q-(c[b+(m<<2)>>2]|0)|0;q=l-p>>i;s=a+4608+(m<<2)|0;c[s>>2]=q;t=d[f+m|0]|0;if((q|0)>(t|0)){c[s>>2]=t;u=t}else{u=q}if(!((u|0)>0&(u<<i|0)>(r|0))){break}c[s>>2]=r>>i}else{c[a+4608+(m<<2)>>2]=0}}while(0);m=m+1|0;}while((m|0)<(g|0));if((g|0)<39){v=g;break}return}else{v=0}}while(0);cE(a+(v+1152<<2)|0,0,156-(v<<2)|0);return}function cB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0,l=0.0,m=0,n=0,o=0,p=0.0,q=0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,O=0.0,P=0.0;f=e&255;h=+g[47016+(f+116<<2)>>2];i=+g[53040+(f<<2)>>2];f=d>>>2;e=d&3;if((f|0)==0){j=b;l=0.0;m=a}else{d=f<<2;n=b+(d<<2)|0;o=b;p=0.0;b=f;f=a;while(1){q=b-1|0;r=i*+g[o>>2]+8388608.0;s=i*+g[o+4>>2]+8388608.0;t=i*+g[o+8>>2]+8388608.0;u=i*+g[o+12>>2]+8388608.0;v=(g[k>>2]=r+ +g[67248+((g[k>>2]=r,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;w=(g[k>>2]=s+ +g[67248+((g[k>>2]=s,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;x=(g[k>>2]=t+ +g[67248+((g[k>>2]=t,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;y=(g[k>>2]=u+ +g[67248+((g[k>>2]=u,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;u=+N(+(+g[f>>2]));t=u-h*+g[14184+(v<<2)>>2];u=+N(+(+g[f+4>>2]));s=u-h*+g[14184+(w<<2)>>2];u=+N(+(+g[f+8>>2]));r=u-h*+g[14184+(x<<2)>>2];u=+N(+(+g[f+12>>2]));z=u-h*+g[14184+(y<<2)>>2];A=p+(t*t+s*s+(r*r+z*z));if((q|0)==0){break}else{o=o+16|0;p=A;b=q;f=f+16|0}}j=n;l=A;m=a+(d<<2)|0}if((e|0)==3){B=i*+g[j+8>>2];C=1354}else if((e|0)==0){D=l;return+D}else if((e|0)==2){B=0.0;C=1354}else if((e|0)==1){E=0.0;F=0.0;C=1355}else{G=8388608.0;H=0.0;I=0.0}if((C|0)==1354){E=i*+g[j+4>>2];F=B;C=1355}if((C|0)==1355){G=i*+g[j>>2]+8388608.0;H=E;I=F}F=H+8388608.0;H=I+8388608.0;j=(g[k>>2]=G+ +g[67248+((g[k>>2]=G,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;d=(g[k>>2]=F+ +g[67248+((g[k>>2]=F,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;if((e|0)==2){J=0.0;C=1358}else if((e|0)==3){a=(g[k>>2]=H+ +g[67248+((g[k>>2]=H,c[k>>2]|0)-1258291200<<2)>>2],c[k>>2]|0)-1258291200|0;H=+N(+(+g[m+8>>2]));J=H-h*+g[14184+(a<<2)>>2];C=1358}else if((e|0)==1){K=0.0;L=0.0;C=1359}else{M=0.0;O=0.0;P=0.0}if((C|0)==1358){H=+N(+(+g[m+4>>2]));K=H-h*+g[14184+(d<<2)>>2];L=J;C=1359}if((C|0)==1359){J=+N(+(+g[m>>2]));M=J-h*+g[14184+(j<<2)>>2];O=K;P=L}D=l+(P*P+0.0+(O*O+M*M));return+D}function cC(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0,aH=0;do{if(a>>>0<245){if(a>>>0<11){b=16}else{b=a+11&-8}d=b>>>3;e=c[25292]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=101208+(h<<2)|0;j=101208+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[25292]=e&(1<<g^-1)}else{if(l>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{ar();return 0;return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(b>>>0<=(c[25294]|0)>>>0){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=101208+(p<<2)|0;m=101208+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[25292]=e&(1<<r^-1)}else{if(l>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{ar();return 0;return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[25294]|0;if((l|0)!=0){q=c[25297]|0;d=l>>>3;l=d<<1;f=101208+(l<<2)|0;k=c[25292]|0;h=1<<d;do{if((k&h|0)==0){c[25292]=k|h;s=f;t=101208+(l+2<<2)|0}else{d=101208+(l+2<<2)|0;g=c[d>>2]|0;if(g>>>0>=(c[25296]|0)>>>0){s=g;t=d;break}ar();return 0;return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[25294]=m;c[25297]=e;n=i;return n|0}l=c[25293]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[101472+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[25296]|0;if(r>>>0<i>>>0){ar();return 0;return 0}e=r+b|0;m=e;if(r>>>0>=e>>>0){ar();return 0;return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){ar();return 0;return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){ar();return 0;return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){ar();return 0;return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{ar();return 0;return 0}}}while(0);L2036:do{if((e|0)!=0){f=d+28|0;i=101472+(c[f>>2]<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[25293]=c[25293]&(1<<c[f>>2]^-1);break L2036}else{if(e>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break L2036}}}while(0);if(v>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[25294]|0;if((f|0)!=0){e=c[25297]|0;i=f>>>3;f=i<<1;q=101208+(f<<2)|0;k=c[25292]|0;g=1<<i;do{if((k&g|0)==0){c[25292]=k|g;y=q;z=101208+(f+2<<2)|0}else{i=101208+(f+2<<2)|0;l=c[i>>2]|0;if(l>>>0>=(c[25296]|0)>>>0){y=l;z=i;break}ar();return 0;return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[25294]=p;c[25297]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231){o=-1;break}f=a+11|0;g=f&-8;k=c[25293]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[101472+(A<<2)>>2]|0;L2084:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break L2084}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[101472+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(J>>>0>=((c[25294]|0)-g|0)>>>0){o=g;break}q=K;m=c[25296]|0;if(q>>>0<m>>>0){ar();return 0;return 0}p=q+g|0;k=p;if(q>>>0>=p>>>0){ar();return 0;return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){ar();return 0;return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){ar();return 0;return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){ar();return 0;return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{ar();return 0;return 0}}}while(0);L2134:do{if((e|0)!=0){i=K+28|0;m=101472+(c[i>>2]<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[25293]=c[25293]&(1<<c[i>>2]^-1);break L2134}else{if(e>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break L2134}}}while(0);if(L>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256){e=i<<1;m=101208+(e<<2)|0;r=c[25292]|0;j=1<<i;do{if((r&j|0)==0){c[25292]=r|j;O=m;P=101208+(e+2<<2)|0}else{i=101208+(e+2<<2)|0;d=c[i>>2]|0;if(d>>>0>=(c[25296]|0)>>>0){O=d;P=i;break}ar();return 0;return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=101472+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[25293]|0;l=1<<Q;if((m&l|0)==0){c[25293]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=1514;break}else{l=l<<1;m=j}}if((T|0)==1514){if(S>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[25296]|0;if(m>>>0<i>>>0){ar();return 0;return 0}if(j>>>0<i>>>0){ar();return 0;return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[25294]|0;if(o>>>0<=K>>>0){S=K-o|0;J=c[25297]|0;if(S>>>0>15){R=J;c[25297]=R+o;c[25294]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[25294]=0;c[25297]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[25295]|0;if(o>>>0<J>>>0){S=J-o|0;c[25295]=S;J=c[25298]|0;K=J;c[25298]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[12334]|0)==0){J=aI(8)|0;if((J-1&J|0)==0){c[12336]=J;c[12335]=J;c[12337]=-1;c[12338]=2097152;c[12339]=0;c[25403]=0;c[12334]=(aN(0)|0)&-16^1431655768;break}else{ar();return 0;return 0}}}while(0);J=o+48|0;S=c[12336]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(S>>>0<=o>>>0){n=0;return n|0}O=c[25402]|0;do{if((O|0)!=0){P=c[25400]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);L2226:do{if((c[25403]&4|0)==0){O=c[25298]|0;L2228:do{if((O|0)==0){T=1544}else{L=O;P=101616;while(1){U=P|0;M=c[U>>2]|0;if(M>>>0<=L>>>0){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=1544;break L2228}else{P=M}}if((P|0)==0){T=1544;break}L=R-(c[25295]|0)&Q;if(L>>>0>=2147483647){W=0;break}m=aV(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=1553}}while(0);do{if((T|0)==1544){O=aV(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[12335]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[25400]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647)){W=0;break}m=c[25402]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=aV($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=1553}}while(0);L2248:do{if((T|0)==1553){m=-_|0;if((X|0)!=-1){aa=Y;ab=X;T=1564;break L2226}do{if((Z|0)!=-1&_>>>0<2147483647&_>>>0<J>>>0){g=c[12336]|0;O=K-_+g&-g;if(O>>>0>=2147483647){ac=_;break}if((aV(O|0)|0)==-1){aV(m|0)|0;W=Y;break L2248}else{ac=O+_|0;break}}else{ac=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ac;ab=Z;T=1564;break L2226}}}while(0);c[25403]=c[25403]|4;ad=W;T=1561}else{ad=0;T=1561}}while(0);do{if((T|0)==1561){if(S>>>0>=2147483647){break}W=aV(S|0)|0;Z=aV(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ac=Z-W|0;Z=ac>>>0>(o+40|0)>>>0;Y=Z?W:-1;if((Y|0)!=-1){aa=Z?ac:ad;ab=Y;T=1564}}}while(0);do{if((T|0)==1564){ad=(c[25400]|0)+aa|0;c[25400]=ad;if(ad>>>0>(c[25401]|0)>>>0){c[25401]=ad}ad=c[25298]|0;L2268:do{if((ad|0)==0){S=c[25296]|0;if((S|0)==0|ab>>>0<S>>>0){c[25296]=ab}c[25404]=ab;c[25405]=aa;c[25407]=0;c[25301]=c[12334];c[25300]=-1;S=0;do{Y=S<<1;ac=101208+(Y<<2)|0;c[101208+(Y+3<<2)>>2]=ac;c[101208+(Y+2<<2)>>2]=ac;S=S+1|0;}while(S>>>0<32);S=ab+8|0;if((S&7|0)==0){ae=0}else{ae=-S&7}S=aa-40-ae|0;c[25298]=ab+ae;c[25295]=S;c[ab+(ae+4)>>2]=S|1;c[ab+(aa-36)>>2]=40;c[25299]=c[12338]}else{S=101616;while(1){af=c[S>>2]|0;ag=S+4|0;ah=c[ag>>2]|0;if((ab|0)==(af+ah|0)){T=1576;break}ac=c[S+8>>2]|0;if((ac|0)==0){break}else{S=ac}}do{if((T|0)==1576){if((c[S+12>>2]&8|0)!=0){break}ac=ad;if(!(ac>>>0>=af>>>0&ac>>>0<ab>>>0)){break}c[ag>>2]=ah+aa;ac=c[25298]|0;Y=(c[25295]|0)+aa|0;Z=ac;W=ac+8|0;if((W&7|0)==0){ai=0}else{ai=-W&7}W=Y-ai|0;c[25298]=Z+ai;c[25295]=W;c[Z+(ai+4)>>2]=W|1;c[Z+(Y+4)>>2]=40;c[25299]=c[12338];break L2268}}while(0);if(ab>>>0<(c[25296]|0)>>>0){c[25296]=ab}S=ab+aa|0;Y=101616;while(1){aj=Y|0;if((c[aj>>2]|0)==(S|0)){T=1586;break}Z=c[Y+8>>2]|0;if((Z|0)==0){break}else{Y=Z}}do{if((T|0)==1586){if((c[Y+12>>2]&8|0)!=0){break}c[aj>>2]=ab;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ab+8|0;if((S&7|0)==0){ak=0}else{ak=-S&7}S=ab+(aa+8)|0;if((S&7|0)==0){al=0}else{al=-S&7}S=ab+(al+aa)|0;Z=S;W=ak+o|0;ac=ab+W|0;_=ac;K=S-(ab+ak)-o|0;c[ab+(ak+4)>>2]=o|3;do{if((Z|0)==(c[25298]|0)){J=(c[25295]|0)+K|0;c[25295]=J;c[25298]=_;c[ab+(W+4)>>2]=J|1}else{if((Z|0)==(c[25297]|0)){J=(c[25294]|0)+K|0;c[25294]=J;c[25297]=_;c[ab+(W+4)>>2]=J|1;c[ab+(J+W)>>2]=J;break}J=aa+4|0;X=c[ab+(J+al)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;L2313:do{if(X>>>0<256){U=c[ab+((al|8)+aa)>>2]|0;Q=c[ab+(aa+12+al)>>2]|0;R=101208+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}if((c[U+12>>2]|0)==(Z|0)){break}ar();return 0;return 0}}while(0);if((Q|0)==(U|0)){c[25292]=c[25292]&(1<<V^-1);break}do{if((Q|0)==(R|0)){am=Q+8|0}else{if(Q>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}m=Q+8|0;if((c[m>>2]|0)==(Z|0)){am=m;break}ar();return 0;return 0}}while(0);c[U+12>>2]=Q;c[am>>2]=U}else{R=S;m=c[ab+((al|24)+aa)>>2]|0;P=c[ab+(aa+12+al)>>2]|0;do{if((P|0)==(R|0)){O=al|16;g=ab+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ab+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){an=0;break}else{ao=O;ap=e}}else{ao=L;ap=g}while(1){g=ao+20|0;L=c[g>>2]|0;if((L|0)!=0){ao=L;ap=g;continue}g=ao+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{ao=L;ap=g}}if(ap>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[ap>>2]=0;an=ao;break}}else{g=c[ab+((al|8)+aa)>>2]|0;if(g>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){ar();return 0;return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;an=P;break}else{ar();return 0;return 0}}}while(0);if((m|0)==0){break}P=ab+(aa+28+al)|0;U=101472+(c[P>>2]<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=an;if((an|0)!=0){break}c[25293]=c[25293]&(1<<c[P>>2]^-1);break L2313}else{if(m>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=an}else{c[m+20>>2]=an}if((an|0)==0){break L2313}}}while(0);if(an>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}c[an+24>>2]=m;R=al|16;P=c[ab+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[an+16>>2]=P;c[P+24>>2]=an;break}}}while(0);P=c[ab+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[an+20>>2]=P;c[P+24>>2]=an;break}}}while(0);aq=ab+(($|al)+aa)|0;as=$+K|0}else{aq=Z;as=K}J=aq+4|0;c[J>>2]=c[J>>2]&-2;c[ab+(W+4)>>2]=as|1;c[ab+(as+W)>>2]=as;J=as>>>3;if(as>>>0<256){V=J<<1;X=101208+(V<<2)|0;P=c[25292]|0;m=1<<J;do{if((P&m|0)==0){c[25292]=P|m;at=X;au=101208+(V+2<<2)|0}else{J=101208+(V+2<<2)|0;U=c[J>>2]|0;if(U>>>0>=(c[25296]|0)>>>0){at=U;au=J;break}ar();return 0;return 0}}while(0);c[au>>2]=_;c[at+12>>2]=_;c[ab+(W+8)>>2]=at;c[ab+(W+12)>>2]=X;break}V=ac;m=as>>>8;do{if((m|0)==0){av=0}else{if(as>>>0>16777215){av=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;av=as>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=101472+(av<<2)|0;c[ab+(W+28)>>2]=av;c[ab+(W+20)>>2]=0;c[ab+(W+16)>>2]=0;X=c[25293]|0;Q=1<<av;if((X&Q|0)==0){c[25293]=X|Q;c[m>>2]=V;c[ab+(W+24)>>2]=m;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}if((av|0)==31){aw=0}else{aw=25-(av>>>1)|0}Q=as<<aw;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(as|0)){break}ax=X+16+(Q>>>31<<2)|0;m=c[ax>>2]|0;if((m|0)==0){T=1659;break}else{Q=Q<<1;X=m}}if((T|0)==1659){if(ax>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[ax>>2]=V;c[ab+(W+24)>>2]=X;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[25296]|0;if(X>>>0<$>>>0){ar();return 0;return 0}if(m>>>0<$>>>0){ar();return 0;return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ab+(W+8)>>2]=m;c[ab+(W+12)>>2]=X;c[ab+(W+24)>>2]=0;break}}}while(0);n=ab+(ak|8)|0;return n|0}}while(0);Y=ad;W=101616;while(1){ay=c[W>>2]|0;if(ay>>>0<=Y>>>0){az=c[W+4>>2]|0;aA=ay+az|0;if(aA>>>0>Y>>>0){break}}W=c[W+8>>2]|0}W=ay+(az-39)|0;if((W&7|0)==0){aB=0}else{aB=-W&7}W=ay+(az-47+aB)|0;ac=W>>>0<(ad+16|0)>>>0?Y:W;W=ac+8|0;_=ab+8|0;if((_&7|0)==0){aC=0}else{aC=-_&7}_=aa-40-aC|0;c[25298]=ab+aC;c[25295]=_;c[ab+(aC+4)>>2]=_|1;c[ab+(aa-36)>>2]=40;c[25299]=c[12338];c[ac+4>>2]=27;c[W>>2]=c[25404];c[W+4>>2]=c[101620>>2];c[W+8>>2]=c[101624>>2];c[W+12>>2]=c[101628>>2];c[25404]=ab;c[25405]=aa;c[25407]=0;c[25406]=W;W=ac+28|0;c[W>>2]=7;if((ac+32|0)>>>0<aA>>>0){_=W;while(1){W=_+4|0;c[W>>2]=7;if((_+8|0)>>>0<aA>>>0){_=W}else{break}}}if((ac|0)==(Y|0)){break}_=ac-ad|0;W=Y+(_+4)|0;c[W>>2]=c[W>>2]&-2;c[ad+4>>2]=_|1;c[Y+_>>2]=_;W=_>>>3;if(_>>>0<256){K=W<<1;Z=101208+(K<<2)|0;S=c[25292]|0;m=1<<W;do{if((S&m|0)==0){c[25292]=S|m;aD=Z;aE=101208+(K+2<<2)|0}else{W=101208+(K+2<<2)|0;Q=c[W>>2]|0;if(Q>>>0>=(c[25296]|0)>>>0){aD=Q;aE=W;break}ar();return 0;return 0}}while(0);c[aE>>2]=ad;c[aD+12>>2]=ad;c[ad+8>>2]=aD;c[ad+12>>2]=Z;break}K=ad;m=_>>>8;do{if((m|0)==0){aF=0}else{if(_>>>0>16777215){aF=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;ac=(Y+520192|0)>>>16&4;W=Y<<ac;Y=(W+245760|0)>>>16&2;Q=14-(ac|S|Y)+(W<<Y>>>15)|0;aF=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=101472+(aF<<2)|0;c[ad+28>>2]=aF;c[ad+20>>2]=0;c[ad+16>>2]=0;Z=c[25293]|0;Q=1<<aF;if((Z&Q|0)==0){c[25293]=Z|Q;c[m>>2]=K;c[ad+24>>2]=m;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}if((aF|0)==31){aG=0}else{aG=25-(aF>>>1)|0}Q=_<<aG;Z=c[m>>2]|0;while(1){if((c[Z+4>>2]&-8|0)==(_|0)){break}aH=Z+16+(Q>>>31<<2)|0;m=c[aH>>2]|0;if((m|0)==0){T=1694;break}else{Q=Q<<1;Z=m}}if((T|0)==1694){if(aH>>>0<(c[25296]|0)>>>0){ar();return 0;return 0}else{c[aH>>2]=K;c[ad+24>>2]=Z;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}}Q=Z+8|0;_=c[Q>>2]|0;m=c[25296]|0;if(Z>>>0<m>>>0){ar();return 0;return 0}if(_>>>0<m>>>0){ar();return 0;return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[ad+8>>2]=_;c[ad+12>>2]=Z;c[ad+24>>2]=0;break}}}while(0);ad=c[25295]|0;if(ad>>>0<=o>>>0){break}_=ad-o|0;c[25295]=_;ad=c[25298]|0;Q=ad;c[25298]=Q+o;c[Q+(o+4)>>2]=_|1;c[ad+4>>2]=o|3;n=ad+8|0;return n|0}}while(0);c[(aW()|0)>>2]=12;n=0;return n|0}function cD(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[25296]|0;if(b>>>0<e>>>0){ar()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){ar()}h=f&-8;i=a+(h-8)|0;j=i;L2485:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){ar()}if((n|0)==(c[25297]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[25294]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=101208+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){ar()}if((c[k+12>>2]|0)==(n|0)){break}ar()}}while(0);if((s|0)==(k|0)){c[25292]=c[25292]&(1<<p^-1);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){ar()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}ar()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){ar()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){ar()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){ar()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{ar()}}}while(0);if((p|0)==0){q=n;r=o;break}v=a+(l+28)|0;m=101472+(c[v>>2]<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[25293]=c[25293]&(1<<c[v>>2]^-1);q=n;r=o;break L2485}else{if(p>>>0<(c[25296]|0)>>>0){ar()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break L2485}}}while(0);if(A>>>0<(c[25296]|0)>>>0){ar()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[25296]|0)>>>0){ar()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[25296]|0)>>>0){ar()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(d>>>0>=i>>>0){ar()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){ar()}do{if((e&2|0)==0){if((j|0)==(c[25298]|0)){B=(c[25295]|0)+r|0;c[25295]=B;c[25298]=q;c[q+4>>2]=B|1;if((q|0)==(c[25297]|0)){c[25297]=0;c[25294]=0}if(B>>>0<=(c[25299]|0)>>>0){return}do{if((c[12334]|0)==0){B=aI(8)|0;if((B-1&B|0)==0){c[12336]=B;c[12335]=B;c[12337]=-1;c[12338]=2097152;c[12339]=0;c[25403]=0;c[12334]=(aN(0)|0)&-16^1431655768;break}else{ar()}}}while(0);o=c[25298]|0;if((o|0)==0){return}n=c[25295]|0;do{if(n>>>0>40){l=c[12336]|0;B=_((((n-41+l|0)>>>0)/(l>>>0)>>>0)-1|0,l)|0;C=o;u=101616;while(1){g=c[u>>2]|0;if(g>>>0<=C>>>0){if((g+(c[u+4>>2]|0)|0)>>>0>C>>>0){D=u;break}}g=c[u+8>>2]|0;if((g|0)==0){D=0;break}else{u=g}}if((c[D+12>>2]&8|0)!=0){break}u=aV(0)|0;C=D+4|0;if((u|0)!=((c[D>>2]|0)+(c[C>>2]|0)|0)){break}g=aV(-(B>>>0>2147483646?-2147483648-l|0:B)|0)|0;b=aV(0)|0;if(!((g|0)!=-1&b>>>0<u>>>0)){break}g=u-b|0;if((u|0)==(b|0)){break}c[C>>2]=(c[C>>2]|0)-g;c[25400]=(c[25400]|0)-g;C=c[25298]|0;b=(c[25295]|0)-g|0;g=C;u=C+8|0;if((u&7|0)==0){E=0}else{E=-u&7}u=b-E|0;c[25298]=g+E;c[25295]=u;c[g+(E+4)>>2]=u|1;c[g+(b+4)>>2]=40;c[25299]=c[12338];return}}while(0);if((c[25295]|0)>>>0<=(c[25299]|0)>>>0){return}c[25299]=-1;return}if((j|0)==(c[25297]|0)){o=(c[25294]|0)+r|0;c[25294]=o;c[25297]=q;c[q+4>>2]=o|1;c[d+o>>2]=o;return}o=(e&-8)+r|0;n=e>>>3;L2619:do{if(e>>>0<256){b=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;u=101208+(n<<1<<2)|0;do{if((b|0)!=(u|0)){if(b>>>0<(c[25296]|0)>>>0){ar()}if((c[b+12>>2]|0)==(j|0)){break}ar()}}while(0);if((g|0)==(b|0)){c[25292]=c[25292]&(1<<n^-1);break}do{if((g|0)==(u|0)){F=g+8|0}else{if(g>>>0<(c[25296]|0)>>>0){ar()}B=g+8|0;if((c[B>>2]|0)==(j|0)){F=B;break}ar()}}while(0);c[b+12>>2]=g;c[F>>2]=b}else{u=i;B=c[a+(h+16)>>2]|0;l=c[a+(h|4)>>2]|0;do{if((l|0)==(u|0)){C=a+(h+12)|0;f=c[C>>2]|0;if((f|0)==0){t=a+(h+8)|0;p=c[t>>2]|0;if((p|0)==0){G=0;break}else{H=p;I=t}}else{H=f;I=C}while(1){C=H+20|0;f=c[C>>2]|0;if((f|0)!=0){H=f;I=C;continue}C=H+16|0;f=c[C>>2]|0;if((f|0)==0){break}else{H=f;I=C}}if(I>>>0<(c[25296]|0)>>>0){ar()}else{c[I>>2]=0;G=H;break}}else{C=c[a+h>>2]|0;if(C>>>0<(c[25296]|0)>>>0){ar()}f=C+12|0;if((c[f>>2]|0)!=(u|0)){ar()}t=l+8|0;if((c[t>>2]|0)==(u|0)){c[f>>2]=l;c[t>>2]=C;G=l;break}else{ar()}}}while(0);if((B|0)==0){break}l=a+(h+20)|0;b=101472+(c[l>>2]<<2)|0;do{if((u|0)==(c[b>>2]|0)){c[b>>2]=G;if((G|0)!=0){break}c[25293]=c[25293]&(1<<c[l>>2]^-1);break L2619}else{if(B>>>0<(c[25296]|0)>>>0){ar()}g=B+16|0;if((c[g>>2]|0)==(u|0)){c[g>>2]=G}else{c[B+20>>2]=G}if((G|0)==0){break L2619}}}while(0);if(G>>>0<(c[25296]|0)>>>0){ar()}c[G+24>>2]=B;u=c[a+(h+8)>>2]|0;do{if((u|0)!=0){if(u>>>0<(c[25296]|0)>>>0){ar()}else{c[G+16>>2]=u;c[u+24>>2]=G;break}}}while(0);u=c[a+(h+12)>>2]|0;if((u|0)==0){break}if(u>>>0<(c[25296]|0)>>>0){ar()}else{c[G+20>>2]=u;c[u+24>>2]=G;break}}}while(0);c[q+4>>2]=o|1;c[d+o>>2]=o;if((q|0)!=(c[25297]|0)){J=o;break}c[25294]=o;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;J=r}}while(0);r=J>>>3;if(J>>>0<256){d=r<<1;e=101208+(d<<2)|0;A=c[25292]|0;G=1<<r;do{if((A&G|0)==0){c[25292]=A|G;K=e;L=101208+(d+2<<2)|0}else{r=101208+(d+2<<2)|0;h=c[r>>2]|0;if(h>>>0>=(c[25296]|0)>>>0){K=h;L=r;break}ar()}}while(0);c[L>>2]=q;c[K+12>>2]=q;c[q+8>>2]=K;c[q+12>>2]=e;return}e=q;K=J>>>8;do{if((K|0)==0){M=0}else{if(J>>>0>16777215){M=31;break}L=(K+1048320|0)>>>16&8;d=K<<L;G=(d+520192|0)>>>16&4;A=d<<G;d=(A+245760|0)>>>16&2;r=14-(G|L|d)+(A<<d>>>15)|0;M=J>>>((r+7|0)>>>0)&1|r<<1}}while(0);K=101472+(M<<2)|0;c[q+28>>2]=M;c[q+20>>2]=0;c[q+16>>2]=0;r=c[25293]|0;d=1<<M;do{if((r&d|0)==0){c[25293]=r|d;c[K>>2]=e;c[q+24>>2]=K;c[q+12>>2]=q;c[q+8>>2]=q}else{if((M|0)==31){N=0}else{N=25-(M>>>1)|0}A=J<<N;L=c[K>>2]|0;while(1){if((c[L+4>>2]&-8|0)==(J|0)){break}O=L+16+(A>>>31<<2)|0;G=c[O>>2]|0;if((G|0)==0){P=1891;break}else{A=A<<1;L=G}}if((P|0)==1891){if(O>>>0<(c[25296]|0)>>>0){ar()}else{c[O>>2]=e;c[q+24>>2]=L;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=L+8|0;o=c[A>>2]|0;G=c[25296]|0;if(L>>>0<G>>>0){ar()}if(o>>>0<G>>>0){ar()}else{c[o+12>>2]=e;c[A>>2]=e;c[q+8>>2]=o;c[q+12>>2]=L;c[q+24>>2]=0;break}}}while(0);q=(c[25300]|0)-1|0;c[25300]=q;if((q|0)==0){Q=101624}else{return}while(1){q=c[Q>>2]|0;if((q|0)==0){break}else{Q=q+8|0}}c[25300]=-1;return}function cE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;e=b&3;g=d|d<<8|d<<16|d<<24;h=f&~3;if(e){e=b+4-e|0;while((b|0)<(e|0)){a[b]=d;b=b+1|0}}while((b|0)<(h|0)){c[b>>2]=g;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}}function cF(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function cG(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function cH(b,c,d){b=b|0;c=c|0;d=d|0;if((c|0)<(b|0)&(b|0)<(c+d|0)){c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}}else{cF(b,c,d)|0}}function cI(a,b){a=a|0;b=b|0;return a1[a&1](b|0)|0}function cJ(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;return a2[a&7](b|0,c|0,+d,e|0,f|0)|0}function cK(a,b){a=a|0;b=b|0;a3[a&1](b|0)}function cL(a,b,c){a=a|0;b=b|0;c=c|0;a4[a&7](b|0,c|0)}function cM(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return a5[a&3](b|0,c|0,d|0)|0}function cN(a){a=a|0;a6[a&1]()}function cO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return a7[a&15](b|0,c|0,d|0,e|0)|0}function cP(a,b,c){a=a|0;b=b|0;c=c|0;return a8[a&3](b|0,c|0)|0}function cQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a9[a&15](b|0,c|0,d|0,e|0)}function cR(a){a=a|0;$(0);return 0}function cS(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;$(1);return 0}function cT(a){a=a|0;$(2)}function cU(a,b){a=a|0;b=b|0;$(3)}function cV(a,b,c){a=a|0;b=b|0;c=c|0;$(4);return 0}function cW(){$(5)}function cX(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;$(6);return 0}function cY(a,b){a=a|0;b=b|0;$(7);return 0}function cZ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;$(8)}
// EMSCRIPTEN_END_FUNCS
var a1=[cR,cR];var a2=[cS,cS,cv,cS,cu,cS,cS,cS];var a3=[cT,cT];var a4=[cU,cU,bw,cU,cr,cU,cU,cU];var a5=[cV,cV,co,cV];var a6=[cW,cW];var a7=[cX,cX,ck,cX,cl,cX,ci,cX,cj,cX,cX,cX,cX,cX,cX,cX];var a8=[cY,cY,bY,cY];var a9=[cZ,cZ,cw,cZ,cy,cZ,bV,cZ,b_,cZ,bS,cZ,bR,cZ,bU,cZ];return{_strlen:cG,_lame_get_num_channels:b5,_lame_get_in_samplerate:b3,_lame_init:bF,_lame_get_num_samples:b1,_lame_set_num_samples:b0,_memset:cE,_memcpy:cF,_get_lame_version:cx,_lame_encode_flush:bD,_lame_set_mode:b8,_lame_set_brate:cc,_lame_init_params:bA,_lame_get_brate:cd,_lame_encode_buffer_ieee_float:bC,_lame_get_out_samplerate:b7,_lame_set_out_samplerate:b6,_free:cD,_lame_close:bE,_lame_set_in_samplerate:b2,_memmove:cH,_malloc:cC,_lame_set_num_channels:b4,_lame_get_mode:cb,stackAlloc:ba,stackSave:bb,stackRestore:bc,setThrew:bd,setTempRet0:bg,setTempRet1:bh,setTempRet2:bi,setTempRet3:bj,setTempRet4:bk,setTempRet5:bl,setTempRet6:bm,setTempRet7:bn,setTempRet8:bo,setTempRet9:bp,dynCall_ii:cI,dynCall_iiifii:cJ,dynCall_vi:cK,dynCall_vii:cL,dynCall_iiii:cM,dynCall_v:cN,dynCall_iiiii:cO,dynCall_iii:cP,dynCall_viiii:cQ}})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_ii": invoke_ii, "invoke_iiifii": invoke_iiifii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiii": invoke_iiii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_iii": invoke_iii, "invoke_viiii": invoke_viiii, "_llvm_va_end": _llvm_va_end, "_llvm_lifetime_end": _llvm_lifetime_end, "_fabsf": _fabsf, "_snprintf": _snprintf, "_abort": _abort, "_fprintf": _fprintf, "_send": _send, "_fflush": _fflush, "__reallyNegative": __reallyNegative, "_llvm_pow_f32": _llvm_pow_f32, "_log": _log, "_fabs": _fabs, "_floor": _floor, "___setErrNo": ___setErrNo, "_qsort": _qsort, "_sqrt": _sqrt, "_decodeMP3_unclipped": _decodeMP3_unclipped, "_exit": _exit, "_sprintf": _sprintf, "_log10": _log10, "_sin": _sin, "_sysconf": _sysconf, "_ExitMP3": _ExitMP3, "_InitMP3": _InitMP3, "_llvm_bswap_i16": _llvm_bswap_i16, "_atan": _atan, "_time": _time, "__formatString": __formatString, "_ceil": _ceil, "_floorf": _floorf, "_vfprintf": _vfprintf, "_cos": _cos, "_pwrite": _pwrite, "_llvm_pow_f64": _llvm_pow_f64, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_exp2": _exp2, "_llvm_lifetime_start": _llvm_lifetime_start, "_write": _write, "_exp": _exp, "_fwrite": _fwrite, "__exit": __exit, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "NaN": NaN, "Infinity": Infinity, "_stderr": _stderr }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _lame_get_num_channels = Module["_lame_get_num_channels"] = asm["_lame_get_num_channels"];
var _lame_get_in_samplerate = Module["_lame_get_in_samplerate"] = asm["_lame_get_in_samplerate"];
var _lame_init = Module["_lame_init"] = asm["_lame_init"];
var _lame_get_num_samples = Module["_lame_get_num_samples"] = asm["_lame_get_num_samples"];
var _lame_set_num_samples = Module["_lame_set_num_samples"] = asm["_lame_set_num_samples"];
var _memset = Module["_memset"] = asm["_memset"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _get_lame_version = Module["_get_lame_version"] = asm["_get_lame_version"];
var _lame_encode_flush = Module["_lame_encode_flush"] = asm["_lame_encode_flush"];
var _lame_set_mode = Module["_lame_set_mode"] = asm["_lame_set_mode"];
var _lame_set_brate = Module["_lame_set_brate"] = asm["_lame_set_brate"];
var _lame_init_params = Module["_lame_init_params"] = asm["_lame_init_params"];
var _lame_get_brate = Module["_lame_get_brate"] = asm["_lame_get_brate"];
var _lame_encode_buffer_ieee_float = Module["_lame_encode_buffer_ieee_float"] = asm["_lame_encode_buffer_ieee_float"];
var _lame_get_out_samplerate = Module["_lame_get_out_samplerate"] = asm["_lame_get_out_samplerate"];
var _lame_set_out_samplerate = Module["_lame_set_out_samplerate"] = asm["_lame_set_out_samplerate"];
var _free = Module["_free"] = asm["_free"];
var _lame_close = Module["_lame_close"] = asm["_lame_close"];
var _lame_set_in_samplerate = Module["_lame_set_in_samplerate"] = asm["_lame_set_in_samplerate"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _lame_set_num_channels = Module["_lame_set_num_channels"] = asm["_lame_set_num_channels"];
var _lame_get_mode = Module["_lame_get_mode"] = asm["_lame_get_mode"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiifii = Module["dynCall_iiifii"] = asm["dynCall_iiifii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// Warning: printing of i64 values may be slightly rounded! No deep i64 math used, so precise i64 code not included
var i64Math = null;
// === Auto-generated postamble setup entry stuff ===
Module['callMain'] = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(!Module['preRun'] || Module['preRun'].length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  var ret;
  var initialStackTop = STACKTOP;
  try {
    ret = Module['_main'](argc, argv, 0);
  }
  catch(e) {
    if (e.name == 'ExitStatus') {
      return e.status;
    } else if (e == 'SimulateInfiniteLoop') {
      Module['noExitRuntime'] = true;
    } else {
      throw e;
    }
  } finally {
    STACKTOP = initialStackTop;
  }
  return ret;
}
function run(args) {
  args = args || Module['arguments'];
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return 0;
  }
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    var toRun = Module['preRun'];
    Module['preRun'] = [];
    for (var i = toRun.length-1; i >= 0; i--) {
      toRun[i]();
    }
    if (runDependencies > 0) {
      // a preRun added a dependency, run will be called later
      return 0;
    }
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    var ret = 0;
    calledRun = true;
    if (Module['_main'] && shouldRunNow) {
      ret = Module['callMain'](args);
      if (!Module['noExitRuntime']) {
        exitRuntime();
      }
    }
    if (Module['postRun']) {
      if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
      while (Module['postRun'].length > 0) {
        Module['postRun'].pop()();
      }
    }
    return ret;
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
    return 0;
  } else {
    return doRun();
  }
}
Module['run'] = Module.run = run;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
  // {{MODULE_ADDITIONS}}
// libmp3lame function wrappers
var BUFSIZE = 8192;
return {
	STEREO: 0, 
	JOINT_STEREO: 1, 
	MONO: 3,
	get_version: Module.cwrap('get_lame_version', 'string'),
	init: Module.cwrap('lame_init', 'number'),
	init_params: Module.cwrap('lame_init_params', 'number', [ 'number' ]),
	set_mode: Module.cwrap('lame_set_mode', 'number', [ 'number', 'number' ]),
	get_mode: Module.cwrap('lame_get_mode', 'number', [ 'number' ]),
	set_num_samples: Module.cwrap('lame_set_num_samples', 'number', [ 'number', 'number' ]),
	get_num_samples: Module.cwrap('lame_get_num_samples', 'number', [ 'number' ]),
	set_num_channels: Module.cwrap('lame_set_num_channels', 'number', [ 'number', 'number' ]),
	get_num_channels: Module.cwrap('lame_get_num_channels', 'number', [ 'number' ]),
	set_in_samplerate: Module.cwrap('lame_set_in_samplerate', 'number', [ 'number', 'number' ]),
	get_in_samplerate: Module.cwrap('lame_get_in_samplerate', 'number', [ 'number' ]),
	set_out_samplerate: Module.cwrap('lame_set_out_samplerate', 'number', [ 'number', 'number' ]),
	get_out_samplerate: Module.cwrap('lame_get_out_samplerate', 'number', [ 'number' ]),
	set_bitrate: Module.cwrap('lame_set_brate', 'number', [ 'number', 'number' ]),
	get_bitrate: Module.cwrap('lame_get_brate', 'number', [ 'number' ]),
	encode_buffer_ieee_float: function(handle, channel_l, channel_r) {
		var outbuf = _malloc(BUFSIZE);
		var inbuf_l = _malloc(channel_l.length * 4);
		var inbuf_r = _malloc(channel_r.length * 4);
		for (var i=0;i<channel_l.length;i++) {
			setValue(inbuf_l + (i*4), channel_l[i], 'float');
		}
		for (var i=0;i<channel_r.length;i++) {
			setValue(inbuf_r + (i*4), channel_r[i], 'float');
		}
		var nread = Module.ccall('lame_encode_buffer_ieee_float', 'number', [ 'number', 'number', 'number', 'number', 'number', 'number' ], [ handle, inbuf_l, inbuf_r, channel_l.length, outbuf, BUFSIZE ]);
		var arraybuf = new ArrayBuffer(nread);
		var retdata = new Uint8Array(arraybuf);
		retdata.set(HEAPU8.subarray(outbuf, outbuf + nread));
		_free(outbuf);
		_free(inbuf_l);
		_free(inbuf_r);
		return { size: nread, data: retdata };
	},
	encode_flush: function(handle) {
		var outbuf = _malloc(BUFSIZE);
		var nread = Module.ccall('lame_encode_flush', 'number', [ 'number', 'number', 'number' ], [ handle, outbuf, BUFSIZE ]);
		var arraybuf = new ArrayBuffer(nread);
		var retdata = new Uint8Array(arraybuf);
		retdata.set(HEAPU8.subarray(outbuf, outbuf + nread));
		_free(outbuf);
		return { size: nread, data: retdata };
	},
	close: Module.cwrap('lame_close', 'number', [ 'number' ])
};
})();
